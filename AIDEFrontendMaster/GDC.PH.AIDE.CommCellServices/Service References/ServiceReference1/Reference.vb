'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace ServiceReference1
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DashboardEmployee", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DashboardEmployee
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeePositionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImageSourceField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeName() As String
            Get
                Return Me.EmployeeNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeNameField, value) <> true) Then
                    Me.EmployeeNameField = value
                    Me.RaisePropertyChanged("EmployeeName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeePosition() As String
            Get
                Return Me.EmployeePositionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeePositionField, value) <> true) Then
                    Me.EmployeePositionField = value
                    Me.RaisePropertyChanged("EmployeePosition")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeType() As String
            Get
                Return Me.EmployeeTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeTypeField, value) <> true) Then
                    Me.EmployeeTypeField = value
                    Me.RaisePropertyChanged("EmployeeType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImageSource() As String
            Get
                Return Me.ImageSourceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImageSourceField, value) <> true) Then
                    Me.ImageSourceField = value
                    Me.RaisePropertyChanged("ImageSource")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DashboardContact", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DashboardContact
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CellNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateReviewedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeLocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FullNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImageSourceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImageSource2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocalField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NickNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PositionField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CellNo() As String
            Get
                Return Me.CellNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CellNoField, value) <> true) Then
                    Me.CellNoField = value
                    Me.RaisePropertyChanged("CellNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateReviewed() As String
            Get
                Return Me.DateReviewedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DateReviewedField, value) <> true) Then
                    Me.DateReviewedField = value
                    Me.RaisePropertyChanged("DateReviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAdd() As String
            Get
                Return Me.EmailAddField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddField, value) <> true) Then
                    Me.EmailAddField = value
                    Me.RaisePropertyChanged("EmailAdd")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As String
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeIDField, value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeLocation() As String
            Get
                Return Me.EmployeeLocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeLocationField, value) <> true) Then
                    Me.EmployeeLocationField = value
                    Me.RaisePropertyChanged("EmployeeLocation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeType() As String
            Get
                Return Me.EmployeeTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeTypeField, value) <> true) Then
                    Me.EmployeeTypeField = value
                    Me.RaisePropertyChanged("EmployeeType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FullName() As String
            Get
                Return Me.FullNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FullNameField, value) <> true) Then
                    Me.FullNameField = value
                    Me.RaisePropertyChanged("FullName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImageSource() As String
            Get
                Return Me.ImageSourceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImageSourceField, value) <> true) Then
                    Me.ImageSourceField = value
                    Me.RaisePropertyChanged("ImageSource")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImageSource2() As String
            Get
                Return Me.ImageSource2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImageSource2Field, value) <> true) Then
                    Me.ImageSource2Field = value
                    Me.RaisePropertyChanged("ImageSource2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Local() As String
            Get
                Return Me.LocalField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocalField, value) <> true) Then
                    Me.LocalField = value
                    Me.RaisePropertyChanged("Local")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NickName() As String
            Get
                Return Me.NickNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NickNameField, value) <> true) Then
                    Me.NickNameField = value
                    Me.RaisePropertyChanged("NickName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Position() As String
            Get
                Return Me.PositionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PositionField, value) <> true) Then
                    Me.PositionField = value
                    Me.RaisePropertyChanged("Position")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DashboardNonBillableHoursSummary", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DashboardNonBillableHoursSummary
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateSelectedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HolidayField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IBPField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SLField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VLField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateSelected() As String
            Get
                Return Me.DateSelectedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DateSelectedField, value) <> true) Then
                    Me.DateSelectedField = value
                    Me.RaisePropertyChanged("DateSelected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Holiday() As Integer
            Get
                Return Me.HolidayField
            End Get
            Set
                If (Me.HolidayField.Equals(value) <> true) Then
                    Me.HolidayField = value
                    Me.RaisePropertyChanged("Holiday")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IBP() As Integer
            Get
                Return Me.IBPField
            End Get
            Set
                If (Me.IBPField.Equals(value) <> true) Then
                    Me.IBPField = value
                    Me.RaisePropertyChanged("IBP")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SL() As Integer
            Get
                Return Me.SLField
            End Get
            Set
                If (Me.SLField.Equals(value) <> true) Then
                    Me.SLField = value
                    Me.RaisePropertyChanged("SL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VL() As Integer
            Get
                Return Me.VLField
            End Get
            Set
                If (Me.VLField.Equals(value) <> true) Then
                    Me.VLField = value
                    Me.RaisePropertyChanged("VL")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DashboardTeamAttendance", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DashboardTeamAttendance
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstMonthField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImageSourceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SecondMonthField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThirdMonthField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstMonth() As String
            Get
                Return Me.FirstMonthField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstMonthField, value) <> true) Then
                    Me.FirstMonthField = value
                    Me.RaisePropertyChanged("FirstMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImageSource() As String
            Get
                Return Me.ImageSourceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImageSourceField, value) <> true) Then
                    Me.ImageSourceField = value
                    Me.RaisePropertyChanged("ImageSource")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SecondMonth() As String
            Get
                Return Me.SecondMonthField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SecondMonthField, value) <> true) Then
                    Me.SecondMonthField = value
                    Me.RaisePropertyChanged("SecondMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThirdMonth() As String
            Get
                Return Me.ThirdMonthField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThirdMonthField, value) <> true) Then
                    Me.ThirdMonthField = value
                    Me.RaisePropertyChanged("ThirdMonth")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AttendanceSummary", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AttendanceSummary
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day1Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day10Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day11Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day12Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day13Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day14Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day15Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day16Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day17Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day18Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day19Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day2Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day20Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day21Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day22Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day23Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day24Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day25Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day26Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day27Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day28Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day29Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day3Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day30Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day31Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day4Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day5Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day6Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day7Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day8Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Day9Field As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MonthField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TimeInField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YearField As Short
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day1() As Short
            Get
                Return Me.Day1Field
            End Get
            Set
                If (Me.Day1Field.Equals(value) <> true) Then
                    Me.Day1Field = value
                    Me.RaisePropertyChanged("Day1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day10() As Short
            Get
                Return Me.Day10Field
            End Get
            Set
                If (Me.Day10Field.Equals(value) <> true) Then
                    Me.Day10Field = value
                    Me.RaisePropertyChanged("Day10")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day11() As Short
            Get
                Return Me.Day11Field
            End Get
            Set
                If (Me.Day11Field.Equals(value) <> true) Then
                    Me.Day11Field = value
                    Me.RaisePropertyChanged("Day11")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day12() As Short
            Get
                Return Me.Day12Field
            End Get
            Set
                If (Me.Day12Field.Equals(value) <> true) Then
                    Me.Day12Field = value
                    Me.RaisePropertyChanged("Day12")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day13() As Short
            Get
                Return Me.Day13Field
            End Get
            Set
                If (Me.Day13Field.Equals(value) <> true) Then
                    Me.Day13Field = value
                    Me.RaisePropertyChanged("Day13")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day14() As Short
            Get
                Return Me.Day14Field
            End Get
            Set
                If (Me.Day14Field.Equals(value) <> true) Then
                    Me.Day14Field = value
                    Me.RaisePropertyChanged("Day14")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day15() As Short
            Get
                Return Me.Day15Field
            End Get
            Set
                If (Me.Day15Field.Equals(value) <> true) Then
                    Me.Day15Field = value
                    Me.RaisePropertyChanged("Day15")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day16() As Short
            Get
                Return Me.Day16Field
            End Get
            Set
                If (Me.Day16Field.Equals(value) <> true) Then
                    Me.Day16Field = value
                    Me.RaisePropertyChanged("Day16")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day17() As Short
            Get
                Return Me.Day17Field
            End Get
            Set
                If (Me.Day17Field.Equals(value) <> true) Then
                    Me.Day17Field = value
                    Me.RaisePropertyChanged("Day17")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day18() As Short
            Get
                Return Me.Day18Field
            End Get
            Set
                If (Me.Day18Field.Equals(value) <> true) Then
                    Me.Day18Field = value
                    Me.RaisePropertyChanged("Day18")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day19() As Short
            Get
                Return Me.Day19Field
            End Get
            Set
                If (Me.Day19Field.Equals(value) <> true) Then
                    Me.Day19Field = value
                    Me.RaisePropertyChanged("Day19")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day2() As Short
            Get
                Return Me.Day2Field
            End Get
            Set
                If (Me.Day2Field.Equals(value) <> true) Then
                    Me.Day2Field = value
                    Me.RaisePropertyChanged("Day2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day20() As Short
            Get
                Return Me.Day20Field
            End Get
            Set
                If (Me.Day20Field.Equals(value) <> true) Then
                    Me.Day20Field = value
                    Me.RaisePropertyChanged("Day20")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day21() As Short
            Get
                Return Me.Day21Field
            End Get
            Set
                If (Me.Day21Field.Equals(value) <> true) Then
                    Me.Day21Field = value
                    Me.RaisePropertyChanged("Day21")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day22() As Short
            Get
                Return Me.Day22Field
            End Get
            Set
                If (Me.Day22Field.Equals(value) <> true) Then
                    Me.Day22Field = value
                    Me.RaisePropertyChanged("Day22")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day23() As Short
            Get
                Return Me.Day23Field
            End Get
            Set
                If (Me.Day23Field.Equals(value) <> true) Then
                    Me.Day23Field = value
                    Me.RaisePropertyChanged("Day23")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day24() As Short
            Get
                Return Me.Day24Field
            End Get
            Set
                If (Me.Day24Field.Equals(value) <> true) Then
                    Me.Day24Field = value
                    Me.RaisePropertyChanged("Day24")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day25() As Short
            Get
                Return Me.Day25Field
            End Get
            Set
                If (Me.Day25Field.Equals(value) <> true) Then
                    Me.Day25Field = value
                    Me.RaisePropertyChanged("Day25")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day26() As Short
            Get
                Return Me.Day26Field
            End Get
            Set
                If (Me.Day26Field.Equals(value) <> true) Then
                    Me.Day26Field = value
                    Me.RaisePropertyChanged("Day26")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day27() As Short
            Get
                Return Me.Day27Field
            End Get
            Set
                If (Me.Day27Field.Equals(value) <> true) Then
                    Me.Day27Field = value
                    Me.RaisePropertyChanged("Day27")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day28() As Short
            Get
                Return Me.Day28Field
            End Get
            Set
                If (Me.Day28Field.Equals(value) <> true) Then
                    Me.Day28Field = value
                    Me.RaisePropertyChanged("Day28")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day29() As Short
            Get
                Return Me.Day29Field
            End Get
            Set
                If (Me.Day29Field.Equals(value) <> true) Then
                    Me.Day29Field = value
                    Me.RaisePropertyChanged("Day29")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day3() As Short
            Get
                Return Me.Day3Field
            End Get
            Set
                If (Me.Day3Field.Equals(value) <> true) Then
                    Me.Day3Field = value
                    Me.RaisePropertyChanged("Day3")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day30() As Short
            Get
                Return Me.Day30Field
            End Get
            Set
                If (Me.Day30Field.Equals(value) <> true) Then
                    Me.Day30Field = value
                    Me.RaisePropertyChanged("Day30")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day31() As Short
            Get
                Return Me.Day31Field
            End Get
            Set
                If (Me.Day31Field.Equals(value) <> true) Then
                    Me.Day31Field = value
                    Me.RaisePropertyChanged("Day31")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day4() As Short
            Get
                Return Me.Day4Field
            End Get
            Set
                If (Me.Day4Field.Equals(value) <> true) Then
                    Me.Day4Field = value
                    Me.RaisePropertyChanged("Day4")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day5() As Short
            Get
                Return Me.Day5Field
            End Get
            Set
                If (Me.Day5Field.Equals(value) <> true) Then
                    Me.Day5Field = value
                    Me.RaisePropertyChanged("Day5")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day6() As Short
            Get
                Return Me.Day6Field
            End Get
            Set
                If (Me.Day6Field.Equals(value) <> true) Then
                    Me.Day6Field = value
                    Me.RaisePropertyChanged("Day6")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day7() As Short
            Get
                Return Me.Day7Field
            End Get
            Set
                If (Me.Day7Field.Equals(value) <> true) Then
                    Me.Day7Field = value
                    Me.RaisePropertyChanged("Day7")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day8() As Short
            Get
                Return Me.Day8Field
            End Get
            Set
                If (Me.Day8Field.Equals(value) <> true) Then
                    Me.Day8Field = value
                    Me.RaisePropertyChanged("Day8")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Day9() As Short
            Get
                Return Me.Day9Field
            End Get
            Set
                If (Me.Day9Field.Equals(value) <> true) Then
                    Me.Day9Field = value
                    Me.RaisePropertyChanged("Day9")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Month() As Short
            Get
                Return Me.MonthField
            End Get
            Set
                If (Me.MonthField.Equals(value) <> true) Then
                    Me.MonthField = value
                    Me.RaisePropertyChanged("Month")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TimeIn() As Date
            Get
                Return Me.TimeInField
            End Get
            Set
                If (Me.TimeInField.Equals(value) <> true) Then
                    Me.TimeInField = value
                    Me.RaisePropertyChanged("TimeIn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Year() As Short
            Get
                Return Me.YearField
            End Get
            Set
                If (Me.YearField.Equals(value) <> true) Then
                    Me.YearField = value
                    Me.RaisePropertyChanged("Year")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="TaskSummary", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class TaskSummary
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FridayATField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FridayCTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FridayOTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InitialDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MondayATField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MondayCTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MondayOTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OutstandingTaskLastWeekField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThursdayATField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThursdayCTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThursdayOTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TuesdayATField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TuesdayCTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TuesdayOTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WednesdayATField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WednesdayCTField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WednesdayOTField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FridayAT() As Integer
            Get
                Return Me.FridayATField
            End Get
            Set
                If (Me.FridayATField.Equals(value) <> true) Then
                    Me.FridayATField = value
                    Me.RaisePropertyChanged("FridayAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FridayCT() As Integer
            Get
                Return Me.FridayCTField
            End Get
            Set
                If (Me.FridayCTField.Equals(value) <> true) Then
                    Me.FridayCTField = value
                    Me.RaisePropertyChanged("FridayCT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FridayOT() As Integer
            Get
                Return Me.FridayOTField
            End Get
            Set
                If (Me.FridayOTField.Equals(value) <> true) Then
                    Me.FridayOTField = value
                    Me.RaisePropertyChanged("FridayOT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InitialDate() As Date
            Get
                Return Me.InitialDateField
            End Get
            Set
                If (Me.InitialDateField.Equals(value) <> true) Then
                    Me.InitialDateField = value
                    Me.RaisePropertyChanged("InitialDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MondayAT() As Integer
            Get
                Return Me.MondayATField
            End Get
            Set
                If (Me.MondayATField.Equals(value) <> true) Then
                    Me.MondayATField = value
                    Me.RaisePropertyChanged("MondayAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MondayCT() As Integer
            Get
                Return Me.MondayCTField
            End Get
            Set
                If (Me.MondayCTField.Equals(value) <> true) Then
                    Me.MondayCTField = value
                    Me.RaisePropertyChanged("MondayCT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MondayOT() As Integer
            Get
                Return Me.MondayOTField
            End Get
            Set
                If (Me.MondayOTField.Equals(value) <> true) Then
                    Me.MondayOTField = value
                    Me.RaisePropertyChanged("MondayOT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OutstandingTaskLastWeek() As Integer
            Get
                Return Me.OutstandingTaskLastWeekField
            End Get
            Set
                If (Me.OutstandingTaskLastWeekField.Equals(value) <> true) Then
                    Me.OutstandingTaskLastWeekField = value
                    Me.RaisePropertyChanged("OutstandingTaskLastWeek")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThursdayAT() As Integer
            Get
                Return Me.ThursdayATField
            End Get
            Set
                If (Me.ThursdayATField.Equals(value) <> true) Then
                    Me.ThursdayATField = value
                    Me.RaisePropertyChanged("ThursdayAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThursdayCT() As Integer
            Get
                Return Me.ThursdayCTField
            End Get
            Set
                If (Me.ThursdayCTField.Equals(value) <> true) Then
                    Me.ThursdayCTField = value
                    Me.RaisePropertyChanged("ThursdayCT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThursdayOT() As Integer
            Get
                Return Me.ThursdayOTField
            End Get
            Set
                If (Me.ThursdayOTField.Equals(value) <> true) Then
                    Me.ThursdayOTField = value
                    Me.RaisePropertyChanged("ThursdayOT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TuesdayAT() As Integer
            Get
                Return Me.TuesdayATField
            End Get
            Set
                If (Me.TuesdayATField.Equals(value) <> true) Then
                    Me.TuesdayATField = value
                    Me.RaisePropertyChanged("TuesdayAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TuesdayCT() As Integer
            Get
                Return Me.TuesdayCTField
            End Get
            Set
                If (Me.TuesdayCTField.Equals(value) <> true) Then
                    Me.TuesdayCTField = value
                    Me.RaisePropertyChanged("TuesdayCT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TuesdayOT() As Integer
            Get
                Return Me.TuesdayOTField
            End Get
            Set
                If (Me.TuesdayOTField.Equals(value) <> true) Then
                    Me.TuesdayOTField = value
                    Me.RaisePropertyChanged("TuesdayOT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WednesdayAT() As Integer
            Get
                Return Me.WednesdayATField
            End Get
            Set
                If (Me.WednesdayATField.Equals(value) <> true) Then
                    Me.WednesdayATField = value
                    Me.RaisePropertyChanged("WednesdayAT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WednesdayCT() As Integer
            Get
                Return Me.WednesdayCTField
            End Get
            Set
                If (Me.WednesdayCTField.Equals(value) <> true) Then
                    Me.WednesdayCTField = value
                    Me.RaisePropertyChanged("WednesdayCT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WednesdayOT() As Integer
            Get
                Return Me.WednesdayOTField
            End Get
            Set
                If (Me.WednesdayOTField.Equals(value) <> true) Then
                    Me.WednesdayOTField = value
                    Me.RaisePropertyChanged("WednesdayOT")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DashboardTaskSummaryTotals", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DashboardTaskSummaryTotals
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AssignedTaskCountField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompletedTaskCountField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OutstandingTaskCountField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AssignedTaskCount() As Integer
            Get
                Return Me.AssignedTaskCountField
            End Get
            Set
                If (Me.AssignedTaskCountField.Equals(value) <> true) Then
                    Me.AssignedTaskCountField = value
                    Me.RaisePropertyChanged("AssignedTaskCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompletedTaskCount() As Integer
            Get
                Return Me.CompletedTaskCountField
            End Get
            Set
                If (Me.CompletedTaskCountField.Equals(value) <> true) Then
                    Me.CompletedTaskCountField = value
                    Me.RaisePropertyChanged("CompletedTaskCount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OutstandingTaskCount() As Integer
            Get
                Return Me.OutstandingTaskCountField
            End Get
            Set
                If (Me.OutstandingTaskCountField.Equals(value) <> true) Then
                    Me.OutstandingTaskCountField = value
                    Me.RaisePropertyChanged("OutstandingTaskCount")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ComcellClock", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ComcellClock
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Clock_DayField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Clock_HourField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Clock_MinuteField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Emp_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MIDDAYField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Clock_Day() As Integer
            Get
                Return Me.Clock_DayField
            End Get
            Set
                If (Me.Clock_DayField.Equals(value) <> true) Then
                    Me.Clock_DayField = value
                    Me.RaisePropertyChanged("Clock_Day")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Clock_Hour() As Integer
            Get
                Return Me.Clock_HourField
            End Get
            Set
                If (Me.Clock_HourField.Equals(value) <> true) Then
                    Me.Clock_HourField = value
                    Me.RaisePropertyChanged("Clock_Hour")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Clock_Minute() As Integer
            Get
                Return Me.Clock_MinuteField
            End Get
            Set
                If (Me.Clock_MinuteField.Equals(value) <> true) Then
                    Me.Clock_MinuteField = value
                    Me.RaisePropertyChanged("Clock_Minute")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Emp_ID() As Integer
            Get
                Return Me.Emp_IDField
            End Get
            Set
                If (Me.Emp_IDField.Equals(value) <> true) Then
                    Me.Emp_IDField = value
                    Me.RaisePropertyChanged("Emp_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MIDDAY() As String
            Get
                Return Me.MIDDAYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MIDDAYField, value) <> true) Then
                    Me.MIDDAYField = value
                    Me.RaisePropertyChanged("MIDDAY")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="WeeklyReport", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class WeeklyReport
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActualEffortField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActualEffortWkField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CommentsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateFinishedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateStartedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateTargetField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EffortEstField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private InboundContactsField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IncidentTypeField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PhaseField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReferenceIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReworkField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SeverityField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubjectField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WeekIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WeekRangeIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ActualEffort() As Decimal
            Get
                Return Me.ActualEffortField
            End Get
            Set
                If (Me.ActualEffortField.Equals(value) <> true) Then
                    Me.ActualEffortField = value
                    Me.RaisePropertyChanged("ActualEffort")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ActualEffortWk() As Decimal
            Get
                Return Me.ActualEffortWkField
            End Get
            Set
                If (Me.ActualEffortWkField.Equals(value) <> true) Then
                    Me.ActualEffortWkField = value
                    Me.RaisePropertyChanged("ActualEffortWk")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Comments() As String
            Get
                Return Me.CommentsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CommentsField, value) <> true) Then
                    Me.CommentsField = value
                    Me.RaisePropertyChanged("Comments")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateFinished() As Date
            Get
                Return Me.DateFinishedField
            End Get
            Set
                If (Me.DateFinishedField.Equals(value) <> true) Then
                    Me.DateFinishedField = value
                    Me.RaisePropertyChanged("DateFinished")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateStarted() As Date
            Get
                Return Me.DateStartedField
            End Get
            Set
                If (Me.DateStartedField.Equals(value) <> true) Then
                    Me.DateStartedField = value
                    Me.RaisePropertyChanged("DateStarted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateTarget() As Date
            Get
                Return Me.DateTargetField
            End Get
            Set
                If (Me.DateTargetField.Equals(value) <> true) Then
                    Me.DateTargetField = value
                    Me.RaisePropertyChanged("DateTarget")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EffortEst() As Decimal
            Get
                Return Me.EffortEstField
            End Get
            Set
                If (Me.EffortEstField.Equals(value) <> true) Then
                    Me.EffortEstField = value
                    Me.RaisePropertyChanged("EffortEst")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property InboundContacts() As Short
            Get
                Return Me.InboundContactsField
            End Get
            Set
                If (Me.InboundContactsField.Equals(value) <> true) Then
                    Me.InboundContactsField = value
                    Me.RaisePropertyChanged("InboundContacts")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IncidentType() As Short
            Get
                Return Me.IncidentTypeField
            End Get
            Set
                If (Me.IncidentTypeField.Equals(value) <> true) Then
                    Me.IncidentTypeField = value
                    Me.RaisePropertyChanged("IncidentType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Phase() As Short
            Get
                Return Me.PhaseField
            End Get
            Set
                If (Me.PhaseField.Equals(value) <> true) Then
                    Me.PhaseField = value
                    Me.RaisePropertyChanged("Phase")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectID() As Integer
            Get
                Return Me.ProjectIDField
            End Get
            Set
                If (Me.ProjectIDField.Equals(value) <> true) Then
                    Me.ProjectIDField = value
                    Me.RaisePropertyChanged("ProjectID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReferenceID() As String
            Get
                Return Me.ReferenceIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReferenceIDField, value) <> true) Then
                    Me.ReferenceIDField = value
                    Me.RaisePropertyChanged("ReferenceID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Rework() As Short
            Get
                Return Me.ReworkField
            End Get
            Set
                If (Me.ReworkField.Equals(value) <> true) Then
                    Me.ReworkField = value
                    Me.RaisePropertyChanged("Rework")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Severity() As Short
            Get
                Return Me.SeverityField
            End Get
            Set
                If (Me.SeverityField.Equals(value) <> true) Then
                    Me.SeverityField = value
                    Me.RaisePropertyChanged("Severity")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WeekID() As Integer
            Get
                Return Me.WeekIDField
            End Get
            Set
                If (Me.WeekIDField.Equals(value) <> true) Then
                    Me.WeekIDField = value
                    Me.RaisePropertyChanged("WeekID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WeekRangeID() As Integer
            Get
                Return Me.WeekRangeIDField
            End Get
            Set
                If (Me.WeekRangeIDField.Equals(value) <> true) Then
                    Me.WeekRangeIDField = value
                    Me.RaisePropertyChanged("WeekRangeID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="WeekRange", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class WeekRange
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateRangeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateSubmittedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndWeekField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartWeekField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WeekRangeIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateRange() As String
            Get
                Return Me.DateRangeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DateRangeField, value) <> true) Then
                    Me.DateRangeField = value
                    Me.RaisePropertyChanged("DateRange")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateSubmitted() As Date
            Get
                Return Me.DateSubmittedField
            End Get
            Set
                If (Me.DateSubmittedField.Equals(value) <> true) Then
                    Me.DateSubmittedField = value
                    Me.RaisePropertyChanged("DateSubmitted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndWeek() As Date
            Get
                Return Me.EndWeekField
            End Get
            Set
                If (Me.EndWeekField.Equals(value) <> true) Then
                    Me.EndWeekField = value
                    Me.RaisePropertyChanged("EndWeek")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartWeek() As Date
            Get
                Return Me.StartWeekField
            End Get
            Set
                If (Me.StartWeekField.Equals(value) <> true) Then
                    Me.StartWeekField = value
                    Me.RaisePropertyChanged("StartWeek")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WeekRangeID() As Integer
            Get
                Return Me.WeekRangeIDField
            End Get
            Set
                If (Me.WeekRangeIDField.Equals(value) <> true) Then
                    Me.WeekRangeIDField = value
                    Me.RaisePropertyChanged("WeekRangeID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ContactList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ContactList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACTIVEField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APPROVEDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BIRTHDATEField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CELL_NOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPARTMENTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPARTMENT_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DIVISIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DIVISION_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DT_HIREDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateReviewedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMADDRESSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMADDRESS2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FIRST_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FULL_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HOUSEPHONEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IMAGE_PATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsREVIEWEDField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LAST_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOCField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOCATION_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MARITAL_STATUSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MARITAL_STATUS_IDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MIDDLE_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Nick_NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OLD_EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OTHERPHONEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PERMISSION_GROUPField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PERMISSION_GROUP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private POSITIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private POSITION_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SHIFTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private lOCALField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACTIVE() As Integer
            Get
                Return Me.ACTIVEField
            End Get
            Set
                If (Me.ACTIVEField.Equals(value) <> true) Then
                    Me.ACTIVEField = value
                    Me.RaisePropertyChanged("ACTIVE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APPROVED() As Integer
            Get
                Return Me.APPROVEDField
            End Get
            Set
                If (Me.APPROVEDField.Equals(value) <> true) Then
                    Me.APPROVEDField = value
                    Me.RaisePropertyChanged("APPROVED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BIRTHDATE() As Date
            Get
                Return Me.BIRTHDATEField
            End Get
            Set
                If (Me.BIRTHDATEField.Equals(value) <> true) Then
                    Me.BIRTHDATEField = value
                    Me.RaisePropertyChanged("BIRTHDATE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CELL_NO() As String
            Get
                Return Me.CELL_NOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CELL_NOField, value) <> true) Then
                    Me.CELL_NOField = value
                    Me.RaisePropertyChanged("CELL_NO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPARTMENT() As String
            Get
                Return Me.DEPARTMENTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DEPARTMENTField, value) <> true) Then
                    Me.DEPARTMENTField = value
                    Me.RaisePropertyChanged("DEPARTMENT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPARTMENT_ID() As Integer
            Get
                Return Me.DEPARTMENT_IDField
            End Get
            Set
                If (Me.DEPARTMENT_IDField.Equals(value) <> true) Then
                    Me.DEPARTMENT_IDField = value
                    Me.RaisePropertyChanged("DEPARTMENT_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DIVISION() As String
            Get
                Return Me.DIVISIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DIVISIONField, value) <> true) Then
                    Me.DIVISIONField = value
                    Me.RaisePropertyChanged("DIVISION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DIVISION_ID() As Integer
            Get
                Return Me.DIVISION_IDField
            End Get
            Set
                If (Me.DIVISION_IDField.Equals(value) <> true) Then
                    Me.DIVISION_IDField = value
                    Me.RaisePropertyChanged("DIVISION_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DT_HIRED() As Date
            Get
                Return Me.DT_HIREDField
            End Get
            Set
                If (Me.DT_HIREDField.Equals(value) <> true) Then
                    Me.DT_HIREDField = value
                    Me.RaisePropertyChanged("DT_HIRED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateReviewed() As Date
            Get
                Return Me.DateReviewedField
            End Get
            Set
                If (Me.DateReviewedField.Equals(value) <> true) Then
                    Me.DateReviewedField = value
                    Me.RaisePropertyChanged("DateReviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMADDRESS() As String
            Get
                Return Me.EMADDRESSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EMADDRESSField, value) <> true) Then
                    Me.EMADDRESSField = value
                    Me.RaisePropertyChanged("EMADDRESS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMADDRESS2() As String
            Get
                Return Me.EMADDRESS2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.EMADDRESS2Field, value) <> true) Then
                    Me.EMADDRESS2Field = value
                    Me.RaisePropertyChanged("EMADDRESS2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FIRST_NAME() As String
            Get
                Return Me.FIRST_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FIRST_NAMEField, value) <> true) Then
                    Me.FIRST_NAMEField = value
                    Me.RaisePropertyChanged("FIRST_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FULL_NAME() As String
            Get
                Return Me.FULL_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FULL_NAMEField, value) <> true) Then
                    Me.FULL_NAMEField = value
                    Me.RaisePropertyChanged("FULL_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HOUSEPHONE() As String
            Get
                Return Me.HOUSEPHONEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HOUSEPHONEField, value) <> true) Then
                    Me.HOUSEPHONEField = value
                    Me.RaisePropertyChanged("HOUSEPHONE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IMAGE_PATH() As String
            Get
                Return Me.IMAGE_PATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IMAGE_PATHField, value) <> true) Then
                    Me.IMAGE_PATHField = value
                    Me.RaisePropertyChanged("IMAGE_PATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsREVIEWED() As Boolean
            Get
                Return Me.IsREVIEWEDField
            End Get
            Set
                If (Me.IsREVIEWEDField.Equals(value) <> true) Then
                    Me.IsREVIEWEDField = value
                    Me.RaisePropertyChanged("IsREVIEWED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LAST_NAME() As String
            Get
                Return Me.LAST_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LAST_NAMEField, value) <> true) Then
                    Me.LAST_NAMEField = value
                    Me.RaisePropertyChanged("LAST_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOC() As String
            Get
                Return Me.LOCField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LOCField, value) <> true) Then
                    Me.LOCField = value
                    Me.RaisePropertyChanged("LOC")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOCATION_ID() As Integer
            Get
                Return Me.LOCATION_IDField
            End Get
            Set
                If (Me.LOCATION_IDField.Equals(value) <> true) Then
                    Me.LOCATION_IDField = value
                    Me.RaisePropertyChanged("LOCATION_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MARITAL_STATUS() As String
            Get
                Return Me.MARITAL_STATUSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MARITAL_STATUSField, value) <> true) Then
                    Me.MARITAL_STATUSField = value
                    Me.RaisePropertyChanged("MARITAL_STATUS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MARITAL_STATUS_ID() As String
            Get
                Return Me.MARITAL_STATUS_IDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MARITAL_STATUS_IDField, value) <> true) Then
                    Me.MARITAL_STATUS_IDField = value
                    Me.RaisePropertyChanged("MARITAL_STATUS_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MIDDLE_NAME() As String
            Get
                Return Me.MIDDLE_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MIDDLE_NAMEField, value) <> true) Then
                    Me.MIDDLE_NAMEField = value
                    Me.RaisePropertyChanged("MIDDLE_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nick_Name() As String
            Get
                Return Me.Nick_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Nick_NameField, value) <> true) Then
                    Me.Nick_NameField = value
                    Me.RaisePropertyChanged("Nick_Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OLD_EMP_ID() As Integer
            Get
                Return Me.OLD_EMP_IDField
            End Get
            Set
                If (Me.OLD_EMP_IDField.Equals(value) <> true) Then
                    Me.OLD_EMP_IDField = value
                    Me.RaisePropertyChanged("OLD_EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OTHERPHONE() As String
            Get
                Return Me.OTHERPHONEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OTHERPHONEField, value) <> true) Then
                    Me.OTHERPHONEField = value
                    Me.RaisePropertyChanged("OTHERPHONE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PERMISSION_GROUP() As String
            Get
                Return Me.PERMISSION_GROUPField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PERMISSION_GROUPField, value) <> true) Then
                    Me.PERMISSION_GROUPField = value
                    Me.RaisePropertyChanged("PERMISSION_GROUP")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PERMISSION_GROUP_ID() As Integer
            Get
                Return Me.PERMISSION_GROUP_IDField
            End Get
            Set
                If (Me.PERMISSION_GROUP_IDField.Equals(value) <> true) Then
                    Me.PERMISSION_GROUP_IDField = value
                    Me.RaisePropertyChanged("PERMISSION_GROUP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property POSITION() As String
            Get
                Return Me.POSITIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.POSITIONField, value) <> true) Then
                    Me.POSITIONField = value
                    Me.RaisePropertyChanged("POSITION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property POSITION_ID() As Integer
            Get
                Return Me.POSITION_IDField
            End Get
            Set
                If (Me.POSITION_IDField.Equals(value) <> true) Then
                    Me.POSITION_IDField = value
                    Me.RaisePropertyChanged("POSITION_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SHIFT() As String
            Get
                Return Me.SHIFTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SHIFTField, value) <> true) Then
                    Me.SHIFTField = value
                    Me.RaisePropertyChanged("SHIFT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property lOCAL() As Integer
            Get
                Return Me.lOCALField
            End Get
            Set
                If (Me.lOCALField.Equals(value) <> true) Then
                    Me.lOCALField = value
                    Me.RaisePropertyChanged("lOCAL")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="WeeklyTeamStatusReport", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class WeeklyTeamStatusReport
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateRangeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateSubmittedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalHoursField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WeekRangeIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateRange() As String
            Get
                Return Me.DateRangeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DateRangeField, value) <> true) Then
                    Me.DateRangeField = value
                    Me.RaisePropertyChanged("DateRange")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateSubmitted() As Date
            Get
                Return Me.DateSubmittedField
            End Get
            Set
                If (Me.DateSubmittedField.Equals(value) <> true) Then
                    Me.DateSubmittedField = value
                    Me.RaisePropertyChanged("DateSubmitted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeName() As String
            Get
                Return Me.EmployeeNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeNameField, value) <> true) Then
                    Me.EmployeeNameField = value
                    Me.RaisePropertyChanged("EmployeeName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalHours() As Double
            Get
                Return Me.TotalHoursField
            End Get
            Set
                If (Me.TotalHoursField.Equals(value) <> true) Then
                    Me.TotalHoursField = value
                    Me.RaisePropertyChanged("TotalHours")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WeekRangeID() As Integer
            Get
                Return Me.WeekRangeIDField
            End Get
            Set
                If (Me.WeekRangeIDField.Equals(value) <> true) Then
                    Me.WeekRangeIDField = value
                    Me.RaisePropertyChanged("WeekRangeID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AuditSched", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AuditSched
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUDIT_SCHED_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DAILYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_ENDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_STARTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_WEEKField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MONTHLYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PERIOD_ENDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PERIOD_STARTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WEEKLYField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YEARField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUDIT_SCHED_ID() As Integer
            Get
                Return Me.AUDIT_SCHED_IDField
            End Get
            Set
                If (Me.AUDIT_SCHED_IDField.Equals(value) <> true) Then
                    Me.AUDIT_SCHED_IDField = value
                    Me.RaisePropertyChanged("AUDIT_SCHED_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DAILY() As String
            Get
                Return Me.DAILYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DAILYField, value) <> true) Then
                    Me.DAILYField = value
                    Me.RaisePropertyChanged("DAILY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_END() As Date
            Get
                Return Me.FY_ENDField
            End Get
            Set
                If (Me.FY_ENDField.Equals(value) <> true) Then
                    Me.FY_ENDField = value
                    Me.RaisePropertyChanged("FY_END")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_START() As Date
            Get
                Return Me.FY_STARTField
            End Get
            Set
                If (Me.FY_STARTField.Equals(value) <> true) Then
                    Me.FY_STARTField = value
                    Me.RaisePropertyChanged("FY_START")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_WEEK() As Integer
            Get
                Return Me.FY_WEEKField
            End Get
            Set
                If (Me.FY_WEEKField.Equals(value) <> true) Then
                    Me.FY_WEEKField = value
                    Me.RaisePropertyChanged("FY_WEEK")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MONTHLY() As String
            Get
                Return Me.MONTHLYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MONTHLYField, value) <> true) Then
                    Me.MONTHLYField = value
                    Me.RaisePropertyChanged("MONTHLY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PERIOD_END() As Date
            Get
                Return Me.PERIOD_ENDField
            End Get
            Set
                If (Me.PERIOD_ENDField.Equals(value) <> true) Then
                    Me.PERIOD_ENDField = value
                    Me.RaisePropertyChanged("PERIOD_END")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PERIOD_START() As Date
            Get
                Return Me.PERIOD_STARTField
            End Get
            Set
                If (Me.PERIOD_STARTField.Equals(value) <> true) Then
                    Me.PERIOD_STARTField = value
                    Me.RaisePropertyChanged("PERIOD_START")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WEEKLY() As String
            Get
                Return Me.WEEKLYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WEEKLYField, value) <> true) Then
                    Me.WEEKLYField = value
                    Me.RaisePropertyChanged("WEEKLY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property YEAR() As Integer
            Get
                Return Me.YEARField
            End Get
            Set
                If (Me.YEARField.Equals(value) <> true) Then
                    Me.YEARField = value
                    Me.RaisePropertyChanged("YEAR")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SendCode", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SendCode
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Work_EmailField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FName() As String
            Get
                Return Me.FNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FNameField, value) <> true) Then
                    Me.FNameField = value
                    Me.RaisePropertyChanged("FName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LName() As String
            Get
                Return Me.LNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LNameField, value) <> true) Then
                    Me.LNameField = value
                    Me.RaisePropertyChanged("LName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Work_Email() As String
            Get
                Return Me.Work_EmailField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Work_EmailField, value) <> true) Then
                    Me.Work_EmailField = value
                    Me.RaisePropertyChanged("Work_Email")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MailConfig", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MailConfig
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BodyField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EnableSSLField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HostField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PasswordExpiryField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PortField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SenderEmailField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SenderPasswordField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubjectField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TimeoutField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UseDfltCredentialsField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Body() As String
            Get
                Return Me.BodyField
            End Get
            Set
                If (Object.ReferenceEquals(Me.BodyField, value) <> true) Then
                    Me.BodyField = value
                    Me.RaisePropertyChanged("Body")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EnableSSL() As Integer
            Get
                Return Me.EnableSSLField
            End Get
            Set
                If (Me.EnableSSLField.Equals(value) <> true) Then
                    Me.EnableSSLField = value
                    Me.RaisePropertyChanged("EnableSSL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Host() As String
            Get
                Return Me.HostField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HostField, value) <> true) Then
                    Me.HostField = value
                    Me.RaisePropertyChanged("Host")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PasswordExpiry() As Integer
            Get
                Return Me.PasswordExpiryField
            End Get
            Set
                If (Me.PasswordExpiryField.Equals(value) <> true) Then
                    Me.PasswordExpiryField = value
                    Me.RaisePropertyChanged("PasswordExpiry")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Port() As Integer
            Get
                Return Me.PortField
            End Get
            Set
                If (Me.PortField.Equals(value) <> true) Then
                    Me.PortField = value
                    Me.RaisePropertyChanged("Port")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SenderEmail() As String
            Get
                Return Me.SenderEmailField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SenderEmailField, value) <> true) Then
                    Me.SenderEmailField = value
                    Me.RaisePropertyChanged("SenderEmail")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SenderPassword() As String
            Get
                Return Me.SenderPasswordField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SenderPasswordField, value) <> true) Then
                    Me.SenderPasswordField = value
                    Me.RaisePropertyChanged("SenderPassword")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Timeout() As Integer
            Get
                Return Me.TimeoutField
            End Get
            Set
                If (Me.TimeoutField.Equals(value) <> true) Then
                    Me.TimeoutField = value
                    Me.RaisePropertyChanged("Timeout")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UseDfltCredentials() As Integer
            Get
                Return Me.UseDfltCredentialsField
            End Get
            Set
                If (Me.UseDfltCredentialsField.Equals(value) <> true) Then
                    Me.UseDfltCredentialsField = value
                    Me.RaisePropertyChanged("UseDfltCredentials")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="WorkplaceAudit", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class WorkplaceAudit
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUDIT_DAILY_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUDIT_QUESTIONSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUDIT_QUESTIONS_GROUPField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AUDIT_QUESTIONS_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DT_CHECKEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_WEEKField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OWNERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUSField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUDIT_DAILY_ID() As Integer
            Get
                Return Me.AUDIT_DAILY_IDField
            End Get
            Set
                If (Me.AUDIT_DAILY_IDField.Equals(value) <> true) Then
                    Me.AUDIT_DAILY_IDField = value
                    Me.RaisePropertyChanged("AUDIT_DAILY_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUDIT_QUESTIONS() As String
            Get
                Return Me.AUDIT_QUESTIONSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUDIT_QUESTIONSField, value) <> true) Then
                    Me.AUDIT_QUESTIONSField = value
                    Me.RaisePropertyChanged("AUDIT_QUESTIONS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUDIT_QUESTIONS_GROUP() As String
            Get
                Return Me.AUDIT_QUESTIONS_GROUPField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AUDIT_QUESTIONS_GROUPField, value) <> true) Then
                    Me.AUDIT_QUESTIONS_GROUPField = value
                    Me.RaisePropertyChanged("AUDIT_QUESTIONS_GROUP")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AUDIT_QUESTIONS_ID() As Integer
            Get
                Return Me.AUDIT_QUESTIONS_IDField
            End Get
            Set
                If (Me.AUDIT_QUESTIONS_IDField.Equals(value) <> true) Then
                    Me.AUDIT_QUESTIONS_IDField = value
                    Me.RaisePropertyChanged("AUDIT_QUESTIONS_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DT_CHECKED() As Date
            Get
                Return Me.DT_CHECKEDField
            End Get
            Set
                If (Me.DT_CHECKEDField.Equals(value) <> true) Then
                    Me.DT_CHECKEDField = value
                    Me.RaisePropertyChanged("DT_CHECKED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_WEEK() As Integer
            Get
                Return Me.FY_WEEKField
            End Get
            Set
                If (Me.FY_WEEKField.Equals(value) <> true) Then
                    Me.FY_WEEKField = value
                    Me.RaisePropertyChanged("FY_WEEK")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OWNER() As String
            Get
                Return Me.OWNERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OWNERField, value) <> true) Then
                    Me.OWNERField = value
                    Me.RaisePropertyChanged("OWNER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS() As Integer
            Get
                Return Me.STATUSField
            End Get
            Set
                If (Me.STATUSField.Equals(value) <> true) Then
                    Me.STATUSField = value
                    Me.RaisePropertyChanged("STATUS")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Contributors", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Contributors
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPARTMENTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DIVISIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FULL_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IMAGE_PATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private POSITIONField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPARTMENT() As String
            Get
                Return Me.DEPARTMENTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DEPARTMENTField, value) <> true) Then
                    Me.DEPARTMENTField = value
                    Me.RaisePropertyChanged("DEPARTMENT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DIVISION() As String
            Get
                Return Me.DIVISIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DIVISIONField, value) <> true) Then
                    Me.DIVISIONField = value
                    Me.RaisePropertyChanged("DIVISION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FULL_NAME() As String
            Get
                Return Me.FULL_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FULL_NAMEField, value) <> true) Then
                    Me.FULL_NAMEField = value
                    Me.RaisePropertyChanged("FULL_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IMAGE_PATH() As String
            Get
                Return Me.IMAGE_PATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IMAGE_PATHField, value) <> true) Then
                    Me.IMAGE_PATHField = value
                    Me.RaisePropertyChanged("IMAGE_PATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property POSITION() As String
            Get
                Return Me.POSITIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.POSITIONField, value) <> true) Then
                    Me.POSITIONField = value
                    Me.RaisePropertyChanged("POSITION")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MessageDetail", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MessageDetail
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MESSAGE_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TITLEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MESSAGE_DESCR() As String
            Get
                Return Me.MESSAGE_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MESSAGE_DESCRField, value) <> true) Then
                    Me.MESSAGE_DESCRField = value
                    Me.RaisePropertyChanged("MESSAGE_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TITLE() As String
            Get
                Return Me.TITLEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TITLEField, value) <> true) Then
                    Me.TITLEField = value
                    Me.RaisePropertyChanged("TITLE")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="LocationList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class LocationList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOCATIONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LOCATION_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ONSITE_FLGField As Short
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOCATION() As String
            Get
                Return Me.LOCATIONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LOCATIONField, value) <> true) Then
                    Me.LOCATIONField = value
                    Me.RaisePropertyChanged("LOCATION")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LOCATION_ID() As Integer
            Get
                Return Me.LOCATION_IDField
            End Get
            Set
                If (Me.LOCATION_IDField.Equals(value) <> true) Then
                    Me.LOCATION_IDField = value
                    Me.RaisePropertyChanged("LOCATION_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ONSITE_FLG() As Short
            Get
                Return Me.ONSITE_FLGField
            End Get
            Set
                If (Me.ONSITE_FLGField.Equals(value) <> true) Then
                    Me.ONSITE_FLGField = value
                    Me.RaisePropertyChanged("ONSITE_FLG")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="PositionList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class PositionList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private POS_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private POS_IDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property POS_DESCR() As String
            Get
                Return Me.POS_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.POS_DESCRField, value) <> true) Then
                    Me.POS_DESCRField = value
                    Me.RaisePropertyChanged("POS_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property POS_ID() As Integer
            Get
                Return Me.POS_IDField
            End Get
            Set
                If (Me.POS_IDField.Equals(value) <> true) Then
                    Me.POS_IDField = value
                    Me.RaisePropertyChanged("POS_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="PermissionList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class PermissionList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GRP_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GRP_IDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GRP_DESCR() As String
            Get
                Return Me.GRP_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.GRP_DESCRField, value) <> true) Then
                    Me.GRP_DESCRField = value
                    Me.RaisePropertyChanged("GRP_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GRP_ID() As Integer
            Get
                Return Me.GRP_IDField
            End Get
            Set
                If (Me.GRP_IDField.Equals(value) <> true) Then
                    Me.GRP_IDField = value
                    Me.RaisePropertyChanged("GRP_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DepartmentList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DepartmentList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPT_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPT_IDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPT_DESCR() As String
            Get
                Return Me.DEPT_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DEPT_DESCRField, value) <> true) Then
                    Me.DEPT_DESCRField = value
                    Me.RaisePropertyChanged("DEPT_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPT_ID() As Integer
            Get
                Return Me.DEPT_IDField
            End Get
            Set
                If (Me.DEPT_IDField.Equals(value) <> true) Then
                    Me.DEPT_IDField = value
                    Me.RaisePropertyChanged("DEPT_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="DivisionList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class DivisionList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DIV_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DIV_IDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DIV_DESCR() As String
            Get
                Return Me.DIV_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DIV_DESCRField, value) <> true) Then
                    Me.DIV_DESCRField = value
                    Me.RaisePropertyChanged("DIV_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DIV_ID() As Integer
            Get
                Return Me.DIV_IDField
            End Get
            Set
                If (Me.DIV_IDField.Equals(value) <> true) Then
                    Me.DIV_IDField = value
                    Me.RaisePropertyChanged("DIV_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="StatusList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class StatusList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUS_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUS_IDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS_DESCR() As String
            Get
                Return Me.STATUS_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.STATUS_DESCRField, value) <> true) Then
                    Me.STATUS_DESCRField = value
                    Me.RaisePropertyChanged("STATUS_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS_ID() As Integer
            Get
                Return Me.STATUS_IDField
            End Get
            Set
                If (Me.STATUS_IDField.Equals(value) <> true) Then
                    Me.STATUS_IDField = value
                    Me.RaisePropertyChanged("STATUS_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="KPITargets", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class KPITargets
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateCreatedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FYEndField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FYStartField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPI_IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPI_ReferenceNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubjectField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateCreated() As Date
            Get
                Return Me.DateCreatedField
            End Get
            Set
                If (Me.DateCreatedField.Equals(value) <> true) Then
                    Me.DateCreatedField = value
                    Me.RaisePropertyChanged("DateCreated")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeId() As Integer
            Get
                Return Me.EmployeeIdField
            End Get
            Set
                If (Me.EmployeeIdField.Equals(value) <> true) Then
                    Me.EmployeeIdField = value
                    Me.RaisePropertyChanged("EmployeeId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FYEnd() As Date
            Get
                Return Me.FYEndField
            End Get
            Set
                If (Me.FYEndField.Equals(value) <> true) Then
                    Me.FYEndField = value
                    Me.RaisePropertyChanged("FYEnd")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FYStart() As Date
            Get
                Return Me.FYStartField
            End Get
            Set
                If (Me.FYStartField.Equals(value) <> true) Then
                    Me.FYStartField = value
                    Me.RaisePropertyChanged("FYStart")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPI_Id() As Integer
            Get
                Return Me.KPI_IdField
            End Get
            Set
                If (Me.KPI_IdField.Equals(value) <> true) Then
                    Me.KPI_IdField = value
                    Me.RaisePropertyChanged("KPI_Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPI_ReferenceNo() As String
            Get
                Return Me.KPI_ReferenceNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.KPI_ReferenceNoField, value) <> true) Then
                    Me.KPI_ReferenceNoField = value
                    Me.RaisePropertyChanged("KPI_ReferenceNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="KPISummary", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class KPISummary
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DatePostedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FYEndField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FYStartField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPIActualField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPIOverallField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPITargetField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPI_IdField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPI_MonthField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private KPI_ReferenceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubjectField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DatePosted() As Date
            Get
                Return Me.DatePostedField
            End Get
            Set
                If (Me.DatePostedField.Equals(value) <> true) Then
                    Me.DatePostedField = value
                    Me.RaisePropertyChanged("DatePosted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeId() As Integer
            Get
                Return Me.EmployeeIdField
            End Get
            Set
                If (Me.EmployeeIdField.Equals(value) <> true) Then
                    Me.EmployeeIdField = value
                    Me.RaisePropertyChanged("EmployeeId")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FYEnd() As Date
            Get
                Return Me.FYEndField
            End Get
            Set
                If (Me.FYEndField.Equals(value) <> true) Then
                    Me.FYEndField = value
                    Me.RaisePropertyChanged("FYEnd")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FYStart() As Date
            Get
                Return Me.FYStartField
            End Get
            Set
                If (Me.FYStartField.Equals(value) <> true) Then
                    Me.FYStartField = value
                    Me.RaisePropertyChanged("FYStart")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPIActual() As Double
            Get
                Return Me.KPIActualField
            End Get
            Set
                If (Me.KPIActualField.Equals(value) <> true) Then
                    Me.KPIActualField = value
                    Me.RaisePropertyChanged("KPIActual")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPIOverall() As Double
            Get
                Return Me.KPIOverallField
            End Get
            Set
                If (Me.KPIOverallField.Equals(value) <> true) Then
                    Me.KPIOverallField = value
                    Me.RaisePropertyChanged("KPIOverall")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPITarget() As Double
            Get
                Return Me.KPITargetField
            End Get
            Set
                If (Me.KPITargetField.Equals(value) <> true) Then
                    Me.KPITargetField = value
                    Me.RaisePropertyChanged("KPITarget")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPI_Id() As Integer
            Get
                Return Me.KPI_IdField
            End Get
            Set
                If (Me.KPI_IdField.Equals(value) <> true) Then
                    Me.KPI_IdField = value
                    Me.RaisePropertyChanged("KPI_Id")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPI_Month() As Short
            Get
                Return Me.KPI_MonthField
            End Get
            Set
                If (Me.KPI_MonthField.Equals(value) <> true) Then
                    Me.KPI_MonthField = value
                    Me.RaisePropertyChanged("KPI_Month")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property KPI_Reference() As String
            Get
                Return Me.KPI_ReferenceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.KPI_ReferenceField, value) <> true) Then
                    Me.KPI_ReferenceField = value
                    Me.RaisePropertyChanged("KPI_Reference")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Subject() As String
            Get
                Return Me.SubjectField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SubjectField, value) <> true) Then
                    Me.SubjectField = value
                    Me.RaisePropertyChanged("Subject")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="LessonLearnt", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class LessonLearnt
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActionNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NicknameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProblemField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReferenceNoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ResolutionField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ActionNo() As String
            Get
                Return Me.ActionNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ActionNoField, value) <> true) Then
                    Me.ActionNoField = value
                    Me.RaisePropertyChanged("ActionNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nickname() As String
            Get
                Return Me.NicknameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NicknameField, value) <> true) Then
                    Me.NicknameField = value
                    Me.RaisePropertyChanged("Nickname")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Problem() As String
            Get
                Return Me.ProblemField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProblemField, value) <> true) Then
                    Me.ProblemField = value
                    Me.RaisePropertyChanged("Problem")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReferenceNo() As String
            Get
                Return Me.ReferenceNoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReferenceNoField, value) <> true) Then
                    Me.ReferenceNoField = value
                    Me.RaisePropertyChanged("ReferenceNo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Resolution() As String
            Get
                Return Me.ResolutionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ResolutionField, value) <> true) Then
                    Me.ResolutionField = value
                    Me.RaisePropertyChanged("Resolution")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SuccessRegister", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SuccessRegister
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AdditionalInformationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateInputField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DetailsOfSuccessField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Emp_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Nick_NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SuccessIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WhosInvolveField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AdditionalInformation() As String
            Get
                Return Me.AdditionalInformationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AdditionalInformationField, value) <> true) Then
                    Me.AdditionalInformationField = value
                    Me.RaisePropertyChanged("AdditionalInformation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateInput() As Date
            Get
                Return Me.DateInputField
            End Get
            Set
                If (Me.DateInputField.Equals(value) <> true) Then
                    Me.DateInputField = value
                    Me.RaisePropertyChanged("DateInput")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DetailsOfSuccess() As String
            Get
                Return Me.DetailsOfSuccessField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DetailsOfSuccessField, value) <> true) Then
                    Me.DetailsOfSuccessField = value
                    Me.RaisePropertyChanged("DetailsOfSuccess")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Emp_ID() As Integer
            Get
                Return Me.Emp_IDField
            End Get
            Set
                If (Me.Emp_IDField.Equals(value) <> true) Then
                    Me.Emp_IDField = value
                    Me.RaisePropertyChanged("Emp_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nick_Name() As String
            Get
                Return Me.Nick_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Nick_NameField, value) <> true) Then
                    Me.Nick_NameField = value
                    Me.RaisePropertyChanged("Nick_Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SuccessID() As Integer
            Get
                Return Me.SuccessIDField
            End Get
            Set
                If (Me.SuccessIDField.Equals(value) <> true) Then
                    Me.SuccessIDField = value
                    Me.RaisePropertyChanged("SuccessID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WhosInvolve() As String
            Get
                Return Me.WhosInvolveField
            End Get
            Set
                If (Object.ReferenceEquals(Me.WhosInvolveField, value) <> true) Then
                    Me.WhosInvolveField = value
                    Me.RaisePropertyChanged("WhosInvolve")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Nickname", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Nickname
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Emp_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Employee_NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private First_NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Nick_NameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Emp_ID() As Integer
            Get
                Return Me.Emp_IDField
            End Get
            Set
                If (Me.Emp_IDField.Equals(value) <> true) Then
                    Me.Emp_IDField = value
                    Me.RaisePropertyChanged("Emp_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Employee_Name() As String
            Get
                Return Me.Employee_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Employee_NameField, value) <> true) Then
                    Me.Employee_NameField = value
                    Me.RaisePropertyChanged("Employee_Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property First_Name() As String
            Get
                Return Me.First_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.First_NameField, value) <> true) Then
                    Me.First_NameField = value
                    Me.RaisePropertyChanged("First_Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nick_Name() As String
            Get
                Return Me.Nick_NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Nick_NameField, value) <> true) Then
                    Me.Nick_NameField = value
                    Me.RaisePropertyChanged("Nick_Name")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Profile", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Profile
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BirthdateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Cel_NoField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CivilStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateHiredField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DepartmentField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Dept_IDField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DivisionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Dt_ReviewedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Email_AddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Email_Address2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Emp_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Home_PhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImagePathField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocalField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MiddleNameField As Char
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NicknameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Other_PhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PermissionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Permission_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PositionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ShiftStatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Ws_EMP_IDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Birthdate() As Date
            Get
                Return Me.BirthdateField
            End Get
            Set
                If (Me.BirthdateField.Equals(value) <> true) Then
                    Me.BirthdateField = value
                    Me.RaisePropertyChanged("Birthdate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Cel_No() As String
            Get
                Return Me.Cel_NoField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Cel_NoField, value) <> true) Then
                    Me.Cel_NoField = value
                    Me.RaisePropertyChanged("Cel_No")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CivilStatus() As String
            Get
                Return Me.CivilStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CivilStatusField, value) <> true) Then
                    Me.CivilStatusField = value
                    Me.RaisePropertyChanged("CivilStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateHired() As Date
            Get
                Return Me.DateHiredField
            End Get
            Set
                If (Me.DateHiredField.Equals(value) <> true) Then
                    Me.DateHiredField = value
                    Me.RaisePropertyChanged("DateHired")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Department() As String
            Get
                Return Me.DepartmentField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DepartmentField, value) <> true) Then
                    Me.DepartmentField = value
                    Me.RaisePropertyChanged("Department")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Dept_ID() As Short
            Get
                Return Me.Dept_IDField
            End Get
            Set
                If (Me.Dept_IDField.Equals(value) <> true) Then
                    Me.Dept_IDField = value
                    Me.RaisePropertyChanged("Dept_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Division() As String
            Get
                Return Me.DivisionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DivisionField, value) <> true) Then
                    Me.DivisionField = value
                    Me.RaisePropertyChanged("Division")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Dt_Reviewed() As Date
            Get
                Return Me.Dt_ReviewedField
            End Get
            Set
                If (Me.Dt_ReviewedField.Equals(value) <> true) Then
                    Me.Dt_ReviewedField = value
                    Me.RaisePropertyChanged("Dt_Reviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Email_Address() As String
            Get
                Return Me.Email_AddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Email_AddressField, value) <> true) Then
                    Me.Email_AddressField = value
                    Me.RaisePropertyChanged("Email_Address")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Email_Address2() As String
            Get
                Return Me.Email_Address2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Email_Address2Field, value) <> true) Then
                    Me.Email_Address2Field = value
                    Me.RaisePropertyChanged("Email_Address2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Emp_ID() As Integer
            Get
                Return Me.Emp_IDField
            End Get
            Set
                If (Me.Emp_IDField.Equals(value) <> true) Then
                    Me.Emp_IDField = value
                    Me.RaisePropertyChanged("Emp_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstName() As String
            Get
                Return Me.FirstNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstNameField, value) <> true) Then
                    Me.FirstNameField = value
                    Me.RaisePropertyChanged("FirstName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Home_Phone() As String
            Get
                Return Me.Home_PhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Home_PhoneField, value) <> true) Then
                    Me.Home_PhoneField = value
                    Me.RaisePropertyChanged("Home_Phone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImagePath() As String
            Get
                Return Me.ImagePathField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImagePathField, value) <> true) Then
                    Me.ImagePathField = value
                    Me.RaisePropertyChanged("ImagePath")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastName() As String
            Get
                Return Me.LastNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LastNameField, value) <> true) Then
                    Me.LastNameField = value
                    Me.RaisePropertyChanged("LastName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Local() As Integer
            Get
                Return Me.LocalField
            End Get
            Set
                If (Me.LocalField.Equals(value) <> true) Then
                    Me.LocalField = value
                    Me.RaisePropertyChanged("Local")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MiddleName() As Char
            Get
                Return Me.MiddleNameField
            End Get
            Set
                If (Me.MiddleNameField.Equals(value) <> true) Then
                    Me.MiddleNameField = value
                    Me.RaisePropertyChanged("MiddleName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nickname() As String
            Get
                Return Me.NicknameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NicknameField, value) <> true) Then
                    Me.NicknameField = value
                    Me.RaisePropertyChanged("Nickname")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Other_Phone() As String
            Get
                Return Me.Other_PhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Other_PhoneField, value) <> true) Then
                    Me.Other_PhoneField = value
                    Me.RaisePropertyChanged("Other_Phone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Permission() As String
            Get
                Return Me.PermissionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PermissionField, value) <> true) Then
                    Me.PermissionField = value
                    Me.RaisePropertyChanged("Permission")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Permission_ID() As Integer
            Get
                Return Me.Permission_IDField
            End Get
            Set
                If (Me.Permission_IDField.Equals(value) <> true) Then
                    Me.Permission_IDField = value
                    Me.RaisePropertyChanged("Permission_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Position() As String
            Get
                Return Me.PositionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PositionField, value) <> true) Then
                    Me.PositionField = value
                    Me.RaisePropertyChanged("Position")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ShiftStatus() As String
            Get
                Return Me.ShiftStatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ShiftStatusField, value) <> true) Then
                    Me.ShiftStatusField = value
                    Me.RaisePropertyChanged("ShiftStatus")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Ws_EMP_ID() As String
            Get
                Return Me.Ws_EMP_IDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Ws_EMP_IDField, value) <> true) Then
                    Me.Ws_EMP_IDField = value
                    Me.RaisePropertyChanged("Ws_EMP_ID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="BirthdayList", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class BirthdayList
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BIRTHDAYField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FIRST_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FULL_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IMAGE_PATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LAST_NAMEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BIRTHDAY() As Date
            Get
                Return Me.BIRTHDAYField
            End Get
            Set
                If (Me.BIRTHDAYField.Equals(value) <> true) Then
                    Me.BIRTHDAYField = value
                    Me.RaisePropertyChanged("BIRTHDAY")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FIRST_NAME() As String
            Get
                Return Me.FIRST_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FIRST_NAMEField, value) <> true) Then
                    Me.FIRST_NAMEField = value
                    Me.RaisePropertyChanged("FIRST_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FULL_NAME() As String
            Get
                Return Me.FULL_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FULL_NAMEField, value) <> true) Then
                    Me.FULL_NAMEField = value
                    Me.RaisePropertyChanged("FULL_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IMAGE_PATH() As String
            Get
                Return Me.IMAGE_PATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IMAGE_PATHField, value) <> true) Then
                    Me.IMAGE_PATHField = value
                    Me.RaisePropertyChanged("IMAGE_PATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LAST_NAME() As String
            Get
                Return Me.LAST_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LAST_NAMEField, value) <> true) Then
                    Me.LAST_NAMEField = value
                    Me.RaisePropertyChanged("LAST_NAME")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Concern", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Concern
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACTION_REFERENCESField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACTREFField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ACT_MESSAGEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_ReferenceField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CauseField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConcernsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CounterMeasureField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE1Field As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE2Field As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Due_DateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GENERATEDREF_IDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private RefIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACTION_REFERENCES() As String
            Get
                Return Me.ACTION_REFERENCESField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACTION_REFERENCESField, value) <> true) Then
                    Me.ACTION_REFERENCESField = value
                    Me.RaisePropertyChanged("ACTION_REFERENCES")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACTREF() As String
            Get
                Return Me.ACTREFField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACTREFField, value) <> true) Then
                    Me.ACTREFField = value
                    Me.RaisePropertyChanged("ACTREF")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ACT_MESSAGE() As String
            Get
                Return Me.ACT_MESSAGEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ACT_MESSAGEField, value) <> true) Then
                    Me.ACT_MESSAGEField = value
                    Me.RaisePropertyChanged("ACT_MESSAGE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_Reference() As String
            Get
                Return Me.Act_ReferenceField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Act_ReferenceField, value) <> true) Then
                    Me.Act_ReferenceField = value
                    Me.RaisePropertyChanged("Act_Reference")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Cause() As String
            Get
                Return Me.CauseField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CauseField, value) <> true) Then
                    Me.CauseField = value
                    Me.RaisePropertyChanged("Cause")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Concerns() As String
            Get
                Return Me.ConcernsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ConcernsField, value) <> true) Then
                    Me.ConcernsField = value
                    Me.RaisePropertyChanged("Concerns")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CounterMeasure() As String
            Get
                Return Me.CounterMeasureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CounterMeasureField, value) <> true) Then
                    Me.CounterMeasureField = value
                    Me.RaisePropertyChanged("CounterMeasure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE1() As Date
            Get
                Return Me.DATE1Field
            End Get
            Set
                If (Me.DATE1Field.Equals(value) <> true) Then
                    Me.DATE1Field = value
                    Me.RaisePropertyChanged("DATE1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE2() As Date
            Get
                Return Me.DATE2Field
            End Get
            Set
                If (Me.DATE2Field.Equals(value) <> true) Then
                    Me.DATE2Field = value
                    Me.RaisePropertyChanged("DATE2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Due_Date() As Date
            Get
                Return Me.Due_DateField
            End Get
            Set
                If (Me.Due_DateField.Equals(value) <> true) Then
                    Me.Due_DateField = value
                    Me.RaisePropertyChanged("Due_Date")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As String
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmpIDField, value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GENERATEDREF_ID() As String
            Get
                Return Me.GENERATEDREF_IDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.GENERATEDREF_IDField, value) <> true) Then
                    Me.GENERATEDREF_IDField = value
                    Me.RaisePropertyChanged("GENERATEDREF_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property RefID() As String
            Get
                Return Me.RefIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.RefIDField, value) <> true) Then
                    Me.RefIDField = value
                    Me.RaisePropertyChanged("RefID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Skills", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Skills
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Image_PathField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Last_ReviewedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Prof_LVLField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SkillIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DESCR() As String
            Get
                Return Me.DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DESCRField, value) <> true) Then
                    Me.DESCRField = value
                    Me.RaisePropertyChanged("DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Image_Path() As String
            Get
                Return Me.Image_PathField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Image_PathField, value) <> true) Then
                    Me.Image_PathField = value
                    Me.RaisePropertyChanged("Image_Path")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Last_Reviewed() As Date
            Get
                Return Me.Last_ReviewedField
            End Get
            Set
                If (Me.Last_ReviewedField.Equals(value) <> true) Then
                    Me.Last_ReviewedField = value
                    Me.RaisePropertyChanged("Last_Reviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NAME() As String
            Get
                Return Me.NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NAMEField, value) <> true) Then
                    Me.NAMEField = value
                    Me.RaisePropertyChanged("NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Prof_LVL() As Integer
            Get
                Return Me.Prof_LVLField
            End Get
            Set
                If (Me.Prof_LVLField.Equals(value) <> true) Then
                    Me.Prof_LVLField = value
                    Me.RaisePropertyChanged("Prof_LVL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SkillID() As Integer
            Get
                Return Me.SkillIDField
            End Get
            Set
                If (Me.SkillIDField.Equals(value) <> true) Then
                    Me.SkillIDField = value
                    Me.RaisePropertyChanged("SkillID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ResourcePlanner", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ResourcePlanner
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateEntryField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DurationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HalfBalanceField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Image_PathField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusCDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TotalBalanceField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UsedLeavesField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private dateFromField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private dateToField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private holidayHoursField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private slHoursField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private vlHoursField As Double
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DESCR() As String
            Get
                Return Me.DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DESCRField, value) <> true) Then
                    Me.DESCRField = value
                    Me.RaisePropertyChanged("DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateEntry() As Date
            Get
                Return Me.DateEntryField
            End Get
            Set
                If (Me.DateEntryField.Equals(value) <> true) Then
                    Me.DateEntryField = value
                    Me.RaisePropertyChanged("DateEntry")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Duration() As Double
            Get
                Return Me.DurationField
            End Get
            Set
                If (Me.DurationField.Equals(value) <> true) Then
                    Me.DurationField = value
                    Me.RaisePropertyChanged("Duration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndDate() As Date
            Get
                Return Me.EndDateField
            End Get
            Set
                If (Me.EndDateField.Equals(value) <> true) Then
                    Me.EndDateField = value
                    Me.RaisePropertyChanged("EndDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HalfBalance() As Double
            Get
                Return Me.HalfBalanceField
            End Get
            Set
                If (Me.HalfBalanceField.Equals(value) <> true) Then
                    Me.HalfBalanceField = value
                    Me.RaisePropertyChanged("HalfBalance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Image_Path() As String
            Get
                Return Me.Image_PathField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Image_PathField, value) <> true) Then
                    Me.Image_PathField = value
                    Me.RaisePropertyChanged("Image_Path")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NAME() As String
            Get
                Return Me.NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NAMEField, value) <> true) Then
                    Me.NAMEField = value
                    Me.RaisePropertyChanged("NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartDate() As Date
            Get
                Return Me.StartDateField
            End Get
            Set
                If (Me.StartDateField.Equals(value) <> true) Then
                    Me.StartDateField = value
                    Me.RaisePropertyChanged("StartDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StatusCD() As Integer
            Get
                Return Me.StatusCDField
            End Get
            Set
                If (Me.StatusCDField.Equals(value) <> true) Then
                    Me.StatusCDField = value
                    Me.RaisePropertyChanged("StatusCD")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TotalBalance() As Double
            Get
                Return Me.TotalBalanceField
            End Get
            Set
                If (Me.TotalBalanceField.Equals(value) <> true) Then
                    Me.TotalBalanceField = value
                    Me.RaisePropertyChanged("TotalBalance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UsedLeaves() As Double
            Get
                Return Me.UsedLeavesField
            End Get
            Set
                If (Me.UsedLeavesField.Equals(value) <> true) Then
                    Me.UsedLeavesField = value
                    Me.RaisePropertyChanged("UsedLeaves")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property dateFrom() As Date
            Get
                Return Me.dateFromField
            End Get
            Set
                If (Me.dateFromField.Equals(value) <> true) Then
                    Me.dateFromField = value
                    Me.RaisePropertyChanged("dateFrom")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property dateTo() As Date
            Get
                Return Me.dateToField
            End Get
            Set
                If (Me.dateToField.Equals(value) <> true) Then
                    Me.dateToField = value
                    Me.RaisePropertyChanged("dateTo")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property holidayHours() As Double
            Get
                Return Me.holidayHoursField
            End Get
            Set
                If (Me.holidayHoursField.Equals(value) <> true) Then
                    Me.holidayHoursField = value
                    Me.RaisePropertyChanged("holidayHours")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property slHours() As Double
            Get
                Return Me.slHoursField
            End Get
            Set
                If (Me.slHoursField.Equals(value) <> true) Then
                    Me.slHoursField = value
                    Me.RaisePropertyChanged("slHours")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property vlHours() As Double
            Get
                Return Me.vlHoursField
            End Get
            Set
                If (Me.vlHoursField.Equals(value) <> true) Then
                    Me.vlHoursField = value
                    Me.RaisePropertyChanged("vlHours")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Announcements", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Announcements
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ANNOUNCEMENT_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private END_DATEField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MESSAGEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TITLEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ANNOUNCEMENT_ID() As Integer
            Get
                Return Me.ANNOUNCEMENT_IDField
            End Get
            Set
                If (Me.ANNOUNCEMENT_IDField.Equals(value) <> true) Then
                    Me.ANNOUNCEMENT_IDField = value
                    Me.RaisePropertyChanged("ANNOUNCEMENT_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property END_DATE() As Date
            Get
                Return Me.END_DATEField
            End Get
            Set
                If (Me.END_DATEField.Equals(value) <> true) Then
                    Me.END_DATEField = value
                    Me.RaisePropertyChanged("END_DATE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MESSAGE() As String
            Get
                Return Me.MESSAGEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MESSAGEField, value) <> true) Then
                    Me.MESSAGEField = value
                    Me.RaisePropertyChanged("MESSAGE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TITLE() As String
            Get
                Return Me.TITLEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TITLEField, value) <> true) Then
                    Me.TITLEField = value
                    Me.RaisePropertyChanged("TITLE")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Late", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Late
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FIRST_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MONTHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NUMBER_OF_LATEField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUSField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FIRST_NAME() As String
            Get
                Return Me.FIRST_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FIRST_NAMEField, value) <> true) Then
                    Me.FIRST_NAMEField = value
                    Me.RaisePropertyChanged("FIRST_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MONTH() As String
            Get
                Return Me.MONTHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MONTHField, value) <> true) Then
                    Me.MONTHField = value
                    Me.RaisePropertyChanged("MONTH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NUMBER_OF_LATE() As Integer
            Get
                Return Me.NUMBER_OF_LATEField
            End Get
            Set
                If (Me.NUMBER_OF_LATEField.Equals(value) <> true) Then
                    Me.NUMBER_OF_LATEField = value
                    Me.RaisePropertyChanged("NUMBER_OF_LATE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS() As Integer
            Get
                Return Me.STATUSField
            End Get
            Set
                If (Me.STATUSField.Equals(value) <> true) Then
                    Me.STATUSField = value
                    Me.RaisePropertyChanged("STATUS")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SabaLearning", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SabaLearning
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE_COMPLETEDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private END_DATEField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IMAGE_PATHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SABA_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TITLEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE_COMPLETED() As String
            Get
                Return Me.DATE_COMPLETEDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DATE_COMPLETEDField, value) <> true) Then
                    Me.DATE_COMPLETEDField = value
                    Me.RaisePropertyChanged("DATE_COMPLETED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property END_DATE() As Date
            Get
                Return Me.END_DATEField
            End Get
            Set
                If (Me.END_DATEField.Equals(value) <> true) Then
                    Me.END_DATEField = value
                    Me.RaisePropertyChanged("END_DATE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IMAGE_PATH() As String
            Get
                Return Me.IMAGE_PATHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IMAGE_PATHField, value) <> true) Then
                    Me.IMAGE_PATHField = value
                    Me.RaisePropertyChanged("IMAGE_PATH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SABA_ID() As Integer
            Get
                Return Me.SABA_IDField
            End Get
            Set
                If (Me.SABA_IDField.Equals(value) <> true) Then
                    Me.SABA_IDField = value
                    Me.RaisePropertyChanged("SABA_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TITLE() As String
            Get
                Return Me.TITLEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TITLEField, value) <> true) Then
                    Me.TITLEField = value
                    Me.RaisePropertyChanged("TITLE")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Comcell", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Comcell
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private COMCELL_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FACILITATORField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FACILITATOR_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_ENDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FY_STARTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MINUTES_TAKERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MINUTES_TAKER_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MONTHField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SCHEDULEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YEARField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property COMCELL_ID() As Integer
            Get
                Return Me.COMCELL_IDField
            End Get
            Set
                If (Me.COMCELL_IDField.Equals(value) <> true) Then
                    Me.COMCELL_IDField = value
                    Me.RaisePropertyChanged("COMCELL_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FACILITATOR() As String
            Get
                Return Me.FACILITATORField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FACILITATORField, value) <> true) Then
                    Me.FACILITATORField = value
                    Me.RaisePropertyChanged("FACILITATOR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FACILITATOR_NAME() As String
            Get
                Return Me.FACILITATOR_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FACILITATOR_NAMEField, value) <> true) Then
                    Me.FACILITATOR_NAMEField = value
                    Me.RaisePropertyChanged("FACILITATOR_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_END() As Date
            Get
                Return Me.FY_ENDField
            End Get
            Set
                If (Me.FY_ENDField.Equals(value) <> true) Then
                    Me.FY_ENDField = value
                    Me.RaisePropertyChanged("FY_END")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FY_START() As Date
            Get
                Return Me.FY_STARTField
            End Get
            Set
                If (Me.FY_STARTField.Equals(value) <> true) Then
                    Me.FY_STARTField = value
                    Me.RaisePropertyChanged("FY_START")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MINUTES_TAKER() As String
            Get
                Return Me.MINUTES_TAKERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MINUTES_TAKERField, value) <> true) Then
                    Me.MINUTES_TAKERField = value
                    Me.RaisePropertyChanged("MINUTES_TAKER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MINUTES_TAKER_NAME() As String
            Get
                Return Me.MINUTES_TAKER_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MINUTES_TAKER_NAMEField, value) <> true) Then
                    Me.MINUTES_TAKER_NAMEField = value
                    Me.RaisePropertyChanged("MINUTES_TAKER_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MONTH() As String
            Get
                Return Me.MONTHField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MONTHField, value) <> true) Then
                    Me.MONTHField = value
                    Me.RaisePropertyChanged("MONTH")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SCHEDULE() As String
            Get
                Return Me.SCHEDULEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SCHEDULEField, value) <> true) Then
                    Me.SCHEDULEField = value
                    Me.RaisePropertyChanged("SCHEDULE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property YEAR() As Integer
            Get
                Return Me.YEARField
            End Get
            Set
                If (Me.YEARField.Equals(value) <> true) Then
                    Me.YEARField = value
                    Me.RaisePropertyChanged("YEAR")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Action", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Action
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_AssigneeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_DateClosedField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_DueDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_IDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_MessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Act_NickNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_Assignee() As Integer
            Get
                Return Me.Act_AssigneeField
            End Get
            Set
                If (Me.Act_AssigneeField.Equals(value) <> true) Then
                    Me.Act_AssigneeField = value
                    Me.RaisePropertyChanged("Act_Assignee")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_DateClosed() As String
            Get
                Return Me.Act_DateClosedField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Act_DateClosedField, value) <> true) Then
                    Me.Act_DateClosedField = value
                    Me.RaisePropertyChanged("Act_DateClosed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_DueDate() As Date
            Get
                Return Me.Act_DueDateField
            End Get
            Set
                If (Me.Act_DueDateField.Equals(value) <> true) Then
                    Me.Act_DueDateField = value
                    Me.RaisePropertyChanged("Act_DueDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_ID() As String
            Get
                Return Me.Act_IDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Act_IDField, value) <> true) Then
                    Me.Act_IDField = value
                    Me.RaisePropertyChanged("Act_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_Message() As String
            Get
                Return Me.Act_MessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Act_MessageField, value) <> true) Then
                    Me.Act_MessageField = value
                    Me.RaisePropertyChanged("Act_Message")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Act_NickName() As String
            Get
                Return Me.Act_NickNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Act_NickNameField, value) <> true) Then
                    Me.Act_NickNameField = value
                    Me.RaisePropertyChanged("Act_NickName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="MyAttendance", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class MyAttendance
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateEntryField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescrField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FridayValField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Image_PathField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MondayValField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThursdayValField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TuesdayValField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private WednesdayValField As Short
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateEntry() As Date
            Get
                Return Me.DateEntryField
            End Get
            Set
                If (Me.DateEntryField.Equals(value) <> true) Then
                    Me.DateEntryField = value
                    Me.RaisePropertyChanged("DateEntry")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Descr() As String
            Get
                Return Me.DescrField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescrField, value) <> true) Then
                    Me.DescrField = value
                    Me.RaisePropertyChanged("Descr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FridayVal() As Short
            Get
                Return Me.FridayValField
            End Get
            Set
                If (Me.FridayValField.Equals(value) <> true) Then
                    Me.FridayValField = value
                    Me.RaisePropertyChanged("FridayVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Image_Path() As String
            Get
                Return Me.Image_PathField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Image_PathField, value) <> true) Then
                    Me.Image_PathField = value
                    Me.RaisePropertyChanged("Image_Path")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MondayVal() As Short
            Get
                Return Me.MondayValField
            End Get
            Set
                If (Me.MondayValField.Equals(value) <> true) Then
                    Me.MondayValField = value
                    Me.RaisePropertyChanged("MondayVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Integer
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThursdayVal() As Short
            Get
                Return Me.ThursdayValField
            End Get
            Set
                If (Me.ThursdayValField.Equals(value) <> true) Then
                    Me.ThursdayValField = value
                    Me.RaisePropertyChanged("ThursdayVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TuesdayVal() As Short
            Get
                Return Me.TuesdayValField
            End Get
            Set
                If (Me.TuesdayValField.Equals(value) <> true) Then
                    Me.TuesdayValField = value
                    Me.RaisePropertyChanged("TuesdayVal")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property WednesdayVal() As Short
            Get
                Return Me.WednesdayValField
            End Get
            Set
                If (Me.WednesdayValField.Equals(value) <> true) Then
                    Me.WednesdayValField = value
                    Me.RaisePropertyChanged("WednesdayVal")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="BillableHours", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class BillableHours
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HoursField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MonthField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private YearField As Short
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Hours() As Decimal
            Get
                Return Me.HoursField
            End Get
            Set
                If (Me.HoursField.Equals(value) <> true) Then
                    Me.HoursField = value
                    Me.RaisePropertyChanged("Hours")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Month() As Short
            Get
                Return Me.MonthField
            End Get
            Set
                If (Me.MonthField.Equals(value) <> true) Then
                    Me.MonthField = value
                    Me.RaisePropertyChanged("Month")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Year() As Short
            Get
                Return Me.YearField
            End Get
            Set
                If (Me.YearField.Equals(value) <> true) Then
                    Me.YearField = value
                    Me.RaisePropertyChanged("Year")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Contact", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Contact
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CellNumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateReviewedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddress2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HomePhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocalField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CellNumber() As String
            Get
                Return Me.CellNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CellNumberField, value) <> true) Then
                    Me.CellNumberField = value
                    Me.RaisePropertyChanged("CellNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateReviewed() As Date
            Get
                Return Me.DateReviewedField
            End Get
            Set
                If (Me.DateReviewedField.Equals(value) <> true) Then
                    Me.DateReviewedField = value
                    Me.RaisePropertyChanged("DateReviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Return Me.EmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddressField, value) <> true) Then
                    Me.EmailAddressField = value
                    Me.RaisePropertyChanged("EmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress2() As String
            Get
                Return Me.EmailAddress2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddress2Field, value) <> true) Then
                    Me.EmailAddress2Field = value
                    Me.RaisePropertyChanged("EmailAddress2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HomePhone() As String
            Get
                Return Me.HomePhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HomePhoneField, value) <> true) Then
                    Me.HomePhoneField = value
                    Me.RaisePropertyChanged("HomePhone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Local() As Integer
            Get
                Return Me.LocalField
            End Get
            Set
                If (Me.LocalField.Equals(value) <> true) Then
                    Me.LocalField = value
                    Me.RaisePropertyChanged("Local")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Employee", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Employee
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BirthdateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CellNumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateHiredField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateReviewedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddress2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private GroupIDField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HomePhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ImagePathField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocalField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LocationField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MiddleInitialField As Char
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NicknameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OtherPhoneField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PositionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Birthdate() As Date
            Get
                Return Me.BirthdateField
            End Get
            Set
                If (Me.BirthdateField.Equals(value) <> true) Then
                    Me.BirthdateField = value
                    Me.RaisePropertyChanged("Birthdate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CellNumber() As String
            Get
                Return Me.CellNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CellNumberField, value) <> true) Then
                    Me.CellNumberField = value
                    Me.RaisePropertyChanged("CellNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateHired() As Date
            Get
                Return Me.DateHiredField
            End Get
            Set
                If (Me.DateHiredField.Equals(value) <> true) Then
                    Me.DateHiredField = value
                    Me.RaisePropertyChanged("DateHired")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateReviewed() As Date
            Get
                Return Me.DateReviewedField
            End Get
            Set
                If (Me.DateReviewedField.Equals(value) <> true) Then
                    Me.DateReviewedField = value
                    Me.RaisePropertyChanged("DateReviewed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Return Me.EmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddressField, value) <> true) Then
                    Me.EmailAddressField = value
                    Me.RaisePropertyChanged("EmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress2() As String
            Get
                Return Me.EmailAddress2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddress2Field, value) <> true) Then
                    Me.EmailAddress2Field = value
                    Me.RaisePropertyChanged("EmailAddress2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeName() As String
            Get
                Return Me.EmployeeNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmployeeNameField, value) <> true) Then
                    Me.EmployeeNameField = value
                    Me.RaisePropertyChanged("EmployeeName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstName() As String
            Get
                Return Me.FirstNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstNameField, value) <> true) Then
                    Me.FirstNameField = value
                    Me.RaisePropertyChanged("FirstName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property GroupID() As Short
            Get
                Return Me.GroupIDField
            End Get
            Set
                If (Me.GroupIDField.Equals(value) <> true) Then
                    Me.GroupIDField = value
                    Me.RaisePropertyChanged("GroupID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HomePhone() As String
            Get
                Return Me.HomePhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HomePhoneField, value) <> true) Then
                    Me.HomePhoneField = value
                    Me.RaisePropertyChanged("HomePhone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ImagePath() As String
            Get
                Return Me.ImagePathField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ImagePathField, value) <> true) Then
                    Me.ImagePathField = value
                    Me.RaisePropertyChanged("ImagePath")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastName() As String
            Get
                Return Me.LastNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LastNameField, value) <> true) Then
                    Me.LastNameField = value
                    Me.RaisePropertyChanged("LastName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Local() As Integer
            Get
                Return Me.LocalField
            End Get
            Set
                If (Me.LocalField.Equals(value) <> true) Then
                    Me.LocalField = value
                    Me.RaisePropertyChanged("Local")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Location() As String
            Get
                Return Me.LocationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LocationField, value) <> true) Then
                    Me.LocationField = value
                    Me.RaisePropertyChanged("Location")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MiddleInitial() As Char
            Get
                Return Me.MiddleInitialField
            End Get
            Set
                If (Me.MiddleInitialField.Equals(value) <> true) Then
                    Me.MiddleInitialField = value
                    Me.RaisePropertyChanged("MiddleInitial")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Nickname() As String
            Get
                Return Me.NicknameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NicknameField, value) <> true) Then
                    Me.NicknameField = value
                    Me.RaisePropertyChanged("Nickname")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OtherPhone() As String
            Get
                Return Me.OtherPhoneField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OtherPhoneField, value) <> true) Then
                    Me.OtherPhoneField = value
                    Me.RaisePropertyChanged("OtherPhone")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Position() As String
            Get
                Return Me.PositionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PositionField, value) <> true) Then
                    Me.PositionField = value
                    Me.RaisePropertyChanged("Position")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Project", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Project
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BillabilityField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectCodeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Billability() As Short
            Get
                Return Me.BillabilityField
            End Get
            Set
                If (Me.BillabilityField.Equals(value) <> true) Then
                    Me.BillabilityField = value
                    Me.RaisePropertyChanged("Billability")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Category() As Integer
            Get
                Return Me.CategoryField
            End Get
            Set
                If (Me.CategoryField.Equals(value) <> true) Then
                    Me.CategoryField = value
                    Me.RaisePropertyChanged("Category")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectCode() As String
            Get
                Return Me.ProjectCodeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProjectCodeField, value) <> true) Then
                    Me.ProjectCodeField = value
                    Me.RaisePropertyChanged("ProjectCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectID() As Integer
            Get
                Return Me.ProjectIDField
            End Get
            Set
                If (Me.ProjectIDField.Equals(value) <> true) Then
                    Me.ProjectIDField = value
                    Me.RaisePropertyChanged("ProjectID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectName() As String
            Get
                Return Me.ProjectNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ProjectNameField, value) <> true) Then
                    Me.ProjectNameField = value
                    Me.RaisePropertyChanged("ProjectName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AssignedProject", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AssignedProject
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateCreatedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmployeeIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EndPeriodField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartPeriodField As Date
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateCreated() As Date
            Get
                Return Me.DateCreatedField
            End Get
            Set
                If (Me.DateCreatedField.Equals(value) <> true) Then
                    Me.DateCreatedField = value
                    Me.RaisePropertyChanged("DateCreated")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmployeeID() As Integer
            Get
                Return Me.EmployeeIDField
            End Get
            Set
                If (Me.EmployeeIDField.Equals(value) <> true) Then
                    Me.EmployeeIDField = value
                    Me.RaisePropertyChanged("EmployeeID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EndPeriod() As Date
            Get
                Return Me.EndPeriodField
            End Get
            Set
                If (Me.EndPeriodField.Equals(value) <> true) Then
                    Me.EndPeriodField = value
                    Me.RaisePropertyChanged("EndPeriod")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectID() As Integer
            Get
                Return Me.ProjectIDField
            End Get
            Set
                If (Me.ProjectIDField.Equals(value) <> true) Then
                    Me.ProjectIDField = value
                    Me.RaisePropertyChanged("ProjectID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartPeriod() As Date
            Get
                Return Me.StartPeriodField
            End Get
            Set
                If (Me.StartPeriodField.Equals(value) <> true) Then
                    Me.StartPeriodField = value
                    Me.RaisePropertyChanged("StartPeriod")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ViewProject", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ViewProject
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Month1Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Month2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Month3Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Month1() As String
            Get
                Return Me.Month1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Month1Field, value) <> true) Then
                    Me.Month1Field = value
                    Me.RaisePropertyChanged("Month1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Month2() As String
            Get
                Return Me.Month2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Month2Field, value) <> true) Then
                    Me.Month2Field = value
                    Me.RaisePropertyChanged("Month2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Month3() As String
            Get
                Return Me.Month3Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Month3Field, value) <> true) Then
                    Me.Month3Field = value
                    Me.RaisePropertyChanged("Month3")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As String
            Get
                Return Me.StatusField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusField, value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="StatusGroup", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class StatusGroup
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusIDField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusNameField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StatusID() As Short
            Get
                Return Me.StatusIDField
            End Get
            Set
                If (Me.StatusIDField.Equals(value) <> true) Then
                    Me.StatusIDField = value
                    Me.RaisePropertyChanged("StatusID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StatusName() As String
            Get
                Return Me.StatusNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StatusNameField, value) <> true) Then
                    Me.StatusNameField = value
                    Me.RaisePropertyChanged("StatusName")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Tasks", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Tasks
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActualEffortField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActualEffortWkField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CommentsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CompletedDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateCreatedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DateStartedField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EffortEstField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmpIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IncidentDescrField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IncidentTypeField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Others1Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Others2Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Others3Field As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PhaseField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectCodeField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProjectIDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReferenceIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ReworkField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SeverityField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StatusField As Short
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TargetDateField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TaskIDField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ActualEffort() As Decimal
            Get
                Return Me.ActualEffortField
            End Get
            Set
                If (Me.ActualEffortField.Equals(value) <> true) Then
                    Me.ActualEffortField = value
                    Me.RaisePropertyChanged("ActualEffort")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ActualEffortWk() As Decimal
            Get
                Return Me.ActualEffortWkField
            End Get
            Set
                If (Me.ActualEffortWkField.Equals(value) <> true) Then
                    Me.ActualEffortWkField = value
                    Me.RaisePropertyChanged("ActualEffortWk")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Comments() As String
            Get
                Return Me.CommentsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.CommentsField, value) <> true) Then
                    Me.CommentsField = value
                    Me.RaisePropertyChanged("Comments")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CompletedDate() As Date
            Get
                Return Me.CompletedDateField
            End Get
            Set
                If (Me.CompletedDateField.Equals(value) <> true) Then
                    Me.CompletedDateField = value
                    Me.RaisePropertyChanged("CompletedDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateCreated() As Date
            Get
                Return Me.DateCreatedField
            End Get
            Set
                If (Me.DateCreatedField.Equals(value) <> true) Then
                    Me.DateCreatedField = value
                    Me.RaisePropertyChanged("DateCreated")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DateStarted() As Date
            Get
                Return Me.DateStartedField
            End Get
            Set
                If (Me.DateStartedField.Equals(value) <> true) Then
                    Me.DateStartedField = value
                    Me.RaisePropertyChanged("DateStarted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EffortEst() As Decimal
            Get
                Return Me.EffortEstField
            End Get
            Set
                If (Me.EffortEstField.Equals(value) <> true) Then
                    Me.EffortEstField = value
                    Me.RaisePropertyChanged("EffortEst")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmpID() As Integer
            Get
                Return Me.EmpIDField
            End Get
            Set
                If (Me.EmpIDField.Equals(value) <> true) Then
                    Me.EmpIDField = value
                    Me.RaisePropertyChanged("EmpID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IncidentDescr() As String
            Get
                Return Me.IncidentDescrField
            End Get
            Set
                If (Object.ReferenceEquals(Me.IncidentDescrField, value) <> true) Then
                    Me.IncidentDescrField = value
                    Me.RaisePropertyChanged("IncidentDescr")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IncidentType() As Short
            Get
                Return Me.IncidentTypeField
            End Get
            Set
                If (Me.IncidentTypeField.Equals(value) <> true) Then
                    Me.IncidentTypeField = value
                    Me.RaisePropertyChanged("IncidentType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Others1() As String
            Get
                Return Me.Others1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Others1Field, value) <> true) Then
                    Me.Others1Field = value
                    Me.RaisePropertyChanged("Others1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Others2() As String
            Get
                Return Me.Others2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Others2Field, value) <> true) Then
                    Me.Others2Field = value
                    Me.RaisePropertyChanged("Others2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Others3() As String
            Get
                Return Me.Others3Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Others3Field, value) <> true) Then
                    Me.Others3Field = value
                    Me.RaisePropertyChanged("Others3")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Phase() As Short
            Get
                Return Me.PhaseField
            End Get
            Set
                If (Me.PhaseField.Equals(value) <> true) Then
                    Me.PhaseField = value
                    Me.RaisePropertyChanged("Phase")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectCode() As Integer
            Get
                Return Me.ProjectCodeField
            End Get
            Set
                If (Me.ProjectCodeField.Equals(value) <> true) Then
                    Me.ProjectCodeField = value
                    Me.RaisePropertyChanged("ProjectCode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProjectID() As Integer
            Get
                Return Me.ProjectIDField
            End Get
            Set
                If (Me.ProjectIDField.Equals(value) <> true) Then
                    Me.ProjectIDField = value
                    Me.RaisePropertyChanged("ProjectID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ReferenceID() As String
            Get
                Return Me.ReferenceIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ReferenceIDField, value) <> true) Then
                    Me.ReferenceIDField = value
                    Me.RaisePropertyChanged("ReferenceID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Rework() As Short
            Get
                Return Me.ReworkField
            End Get
            Set
                If (Me.ReworkField.Equals(value) <> true) Then
                    Me.ReworkField = value
                    Me.RaisePropertyChanged("Rework")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Severity() As Short
            Get
                Return Me.SeverityField
            End Get
            Set
                If (Me.SeverityField.Equals(value) <> true) Then
                    Me.SeverityField = value
                    Me.RaisePropertyChanged("Severity")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Status() As Short
            Get
                Return Me.StatusField
            End Get
            Set
                If (Me.StatusField.Equals(value) <> true) Then
                    Me.StatusField = value
                    Me.RaisePropertyChanged("Status")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TargetDate() As Date
            Get
                Return Me.TargetDateField
            End Get
            Set
                If (Me.TargetDateField.Equals(value) <> true) Then
                    Me.TargetDateField = value
                    Me.RaisePropertyChanged("TargetDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TaskID() As Integer
            Get
                Return Me.TaskIDField
            End Get
            Set
                If (Me.TaskIDField.Equals(value) <> true) Then
                    Me.TaskIDField = value
                    Me.RaisePropertyChanged("TaskID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Commendations", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Commendations
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private COMMEND_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE_SENTField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMPLOYEEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PROJECTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private REASONField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SENT_BYField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property COMMEND_ID() As Integer
            Get
                Return Me.COMMEND_IDField
            End Get
            Set
                If (Me.COMMEND_IDField.Equals(value) <> true) Then
                    Me.COMMEND_IDField = value
                    Me.RaisePropertyChanged("COMMEND_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE_SENT() As Date
            Get
                Return Me.DATE_SENTField
            End Get
            Set
                If (Me.DATE_SENTField.Equals(value) <> true) Then
                    Me.DATE_SENTField = value
                    Me.RaisePropertyChanged("DATE_SENT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMPLOYEE() As String
            Get
                Return Me.EMPLOYEEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EMPLOYEEField, value) <> true) Then
                    Me.EMPLOYEEField = value
                    Me.RaisePropertyChanged("EMPLOYEE")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PROJECT() As String
            Get
                Return Me.PROJECTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.PROJECTField, value) <> true) Then
                    Me.PROJECTField = value
                    Me.RaisePropertyChanged("PROJECT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property REASON() As String
            Get
                Return Me.REASONField
            End Get
            Set
                If (Object.ReferenceEquals(Me.REASONField, value) <> true) Then
                    Me.REASONField = value
                    Me.RaisePropertyChanged("REASON")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SENT_BY() As String
            Get
                Return Me.SENT_BYField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SENT_BYField, value) <> true) Then
                    Me.SENT_BYField = value
                    Me.RaisePropertyChanged("SENT_BY")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Assets", [Namespace]:="http://schemas.datacontract.org/2004/07/GDC.PH.AIDE.DCService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Assets
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private APPROVALField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASSET_DESCField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASSET_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASSET_TAGField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ASSIGNED_TOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private COMMENTSField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE_ASSIGNEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DATE_PURCHASEDField As Date
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DEPARTMENTField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EMP_IDField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FULL_NAMEField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MANUFACTURERField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MODEL_NOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OTHER_INFOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SERIAL_NOField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUSField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private STATUS_DESCRField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TABLE_NAMEField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property APPROVAL() As Integer
            Get
                Return Me.APPROVALField
            End Get
            Set
                If (Me.APPROVALField.Equals(value) <> true) Then
                    Me.APPROVALField = value
                    Me.RaisePropertyChanged("APPROVAL")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASSET_DESC() As String
            Get
                Return Me.ASSET_DESCField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASSET_DESCField, value) <> true) Then
                    Me.ASSET_DESCField = value
                    Me.RaisePropertyChanged("ASSET_DESC")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASSET_ID() As Integer
            Get
                Return Me.ASSET_IDField
            End Get
            Set
                If (Me.ASSET_IDField.Equals(value) <> true) Then
                    Me.ASSET_IDField = value
                    Me.RaisePropertyChanged("ASSET_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASSET_TAG() As String
            Get
                Return Me.ASSET_TAGField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASSET_TAGField, value) <> true) Then
                    Me.ASSET_TAGField = value
                    Me.RaisePropertyChanged("ASSET_TAG")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ASSIGNED_TO() As String
            Get
                Return Me.ASSIGNED_TOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ASSIGNED_TOField, value) <> true) Then
                    Me.ASSIGNED_TOField = value
                    Me.RaisePropertyChanged("ASSIGNED_TO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property COMMENTS() As String
            Get
                Return Me.COMMENTSField
            End Get
            Set
                If (Object.ReferenceEquals(Me.COMMENTSField, value) <> true) Then
                    Me.COMMENTSField = value
                    Me.RaisePropertyChanged("COMMENTS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE_ASSIGNED() As Date
            Get
                Return Me.DATE_ASSIGNEDField
            End Get
            Set
                If (Me.DATE_ASSIGNEDField.Equals(value) <> true) Then
                    Me.DATE_ASSIGNEDField = value
                    Me.RaisePropertyChanged("DATE_ASSIGNED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DATE_PURCHASED() As Date
            Get
                Return Me.DATE_PURCHASEDField
            End Get
            Set
                If (Me.DATE_PURCHASEDField.Equals(value) <> true) Then
                    Me.DATE_PURCHASEDField = value
                    Me.RaisePropertyChanged("DATE_PURCHASED")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property DEPARTMENT() As String
            Get
                Return Me.DEPARTMENTField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DEPARTMENTField, value) <> true) Then
                    Me.DEPARTMENTField = value
                    Me.RaisePropertyChanged("DEPARTMENT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EMP_ID() As Integer
            Get
                Return Me.EMP_IDField
            End Get
            Set
                If (Me.EMP_IDField.Equals(value) <> true) Then
                    Me.EMP_IDField = value
                    Me.RaisePropertyChanged("EMP_ID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FULL_NAME() As String
            Get
                Return Me.FULL_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FULL_NAMEField, value) <> true) Then
                    Me.FULL_NAMEField = value
                    Me.RaisePropertyChanged("FULL_NAME")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MANUFACTURER() As String
            Get
                Return Me.MANUFACTURERField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MANUFACTURERField, value) <> true) Then
                    Me.MANUFACTURERField = value
                    Me.RaisePropertyChanged("MANUFACTURER")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MODEL_NO() As String
            Get
                Return Me.MODEL_NOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.MODEL_NOField, value) <> true) Then
                    Me.MODEL_NOField = value
                    Me.RaisePropertyChanged("MODEL_NO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OTHER_INFO() As String
            Get
                Return Me.OTHER_INFOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OTHER_INFOField, value) <> true) Then
                    Me.OTHER_INFOField = value
                    Me.RaisePropertyChanged("OTHER_INFO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SERIAL_NO() As String
            Get
                Return Me.SERIAL_NOField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SERIAL_NOField, value) <> true) Then
                    Me.SERIAL_NOField = value
                    Me.RaisePropertyChanged("SERIAL_NO")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS() As Integer
            Get
                Return Me.STATUSField
            End Get
            Set
                If (Me.STATUSField.Equals(value) <> true) Then
                    Me.STATUSField = value
                    Me.RaisePropertyChanged("STATUS")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property STATUS_DESCR() As String
            Get
                Return Me.STATUS_DESCRField
            End Get
            Set
                If (Object.ReferenceEquals(Me.STATUS_DESCRField, value) <> true) Then
                    Me.STATUS_DESCRField = value
                    Me.RaisePropertyChanged("STATUS_DESCR")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TABLE_NAME() As String
            Get
                Return Me.TABLE_NAMEField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TABLE_NAMEField, value) <> true) Then
                    Me.TABLE_NAMEField = value
                    Me.RaisePropertyChanged("TABLE_NAME")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServiceReference1.IAideService2")>  _
    Public Interface IAideService2
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetEmployeeList", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetEmployeeListResponse")>  _
        Function DashboardGetEmployeeList() As ServiceReference1.DashboardEmployee()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetEmployeeList", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetEmployeeListResponse")>  _
        Function DashboardGetEmployeeListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardEmployee())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetContactList", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetContactListResponse")>  _
        Function DashboardGetContactList() As ServiceReference1.DashboardContact()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetContactList", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetContactListResponse")>  _
        Function DashboardGetContactListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardContact())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetNonBillableHoursSummary", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetNonBillableHoursSummaryResponse")>  _
        Function DashboardGetNonBillableHoursSummary() As ServiceReference1.DashboardNonBillableHoursSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetNonBillableHoursSummary", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetNonBillableHoursSummaryResponse")>  _
        Function DashboardGetNonBillableHoursSummaryAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardNonBillableHoursSummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTeamAttendance", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTeamAttendanceResponse")>  _
        Function DashboardGetTeamAttendance() As ServiceReference1.DashboardTeamAttendance()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTeamAttendance", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTeamAttendanceResponse")>  _
        Function DashboardGetTeamAttendanceAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardTeamAttendance())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetResourcePlanner", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetResourcePlannerResponse")>  _
        Function DashboardGetResourcePlanner() As ServiceReference1.AttendanceSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetResourcePlanner", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetResourcePlannerResponse")>  _
        Function DashboardGetResourcePlannerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.AttendanceSummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTaskSummary", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryResponse")>  _
        Function DashboardGetTaskSummary(ByVal dateStart As Date, ByVal email As String) As ServiceReference1.TaskSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTaskSummary", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryResponse")>  _
        Function DashboardGetTaskSummaryAsync(ByVal dateStart As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryTotals", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryTotalsResponse")>  _
        Function DashboardGetTaskSummaryTotals(ByVal dateStart As Date, ByVal email As String) As ServiceReference1.DashboardTaskSummaryTotals()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryTotals", ReplyAction:="http://tempuri.org/IAideService2/DashboardGetTaskSummaryTotalsResponse")>  _
        Function DashboardGetTaskSummaryTotalsAsync(ByVal dateStart As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.DashboardTaskSummaryTotals())
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAideService2Channel
        Inherits ServiceReference1.IAideService2, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AideService2Client
        Inherits System.ServiceModel.ClientBase(Of ServiceReference1.IAideService2)
        Implements ServiceReference1.IAideService2
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function DashboardGetEmployeeList() As ServiceReference1.DashboardEmployee() Implements ServiceReference1.IAideService2.DashboardGetEmployeeList
            Return MyBase.Channel.DashboardGetEmployeeList
        End Function
        
        Public Function DashboardGetEmployeeListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardEmployee()) Implements ServiceReference1.IAideService2.DashboardGetEmployeeListAsync
            Return MyBase.Channel.DashboardGetEmployeeListAsync
        End Function
        
        Public Function DashboardGetContactList() As ServiceReference1.DashboardContact() Implements ServiceReference1.IAideService2.DashboardGetContactList
            Return MyBase.Channel.DashboardGetContactList
        End Function
        
        Public Function DashboardGetContactListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardContact()) Implements ServiceReference1.IAideService2.DashboardGetContactListAsync
            Return MyBase.Channel.DashboardGetContactListAsync
        End Function
        
        Public Function DashboardGetNonBillableHoursSummary() As ServiceReference1.DashboardNonBillableHoursSummary() Implements ServiceReference1.IAideService2.DashboardGetNonBillableHoursSummary
            Return MyBase.Channel.DashboardGetNonBillableHoursSummary
        End Function
        
        Public Function DashboardGetNonBillableHoursSummaryAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardNonBillableHoursSummary()) Implements ServiceReference1.IAideService2.DashboardGetNonBillableHoursSummaryAsync
            Return MyBase.Channel.DashboardGetNonBillableHoursSummaryAsync
        End Function
        
        Public Function DashboardGetTeamAttendance() As ServiceReference1.DashboardTeamAttendance() Implements ServiceReference1.IAideService2.DashboardGetTeamAttendance
            Return MyBase.Channel.DashboardGetTeamAttendance
        End Function
        
        Public Function DashboardGetTeamAttendanceAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DashboardTeamAttendance()) Implements ServiceReference1.IAideService2.DashboardGetTeamAttendanceAsync
            Return MyBase.Channel.DashboardGetTeamAttendanceAsync
        End Function
        
        Public Function DashboardGetResourcePlanner() As ServiceReference1.AttendanceSummary() Implements ServiceReference1.IAideService2.DashboardGetResourcePlanner
            Return MyBase.Channel.DashboardGetResourcePlanner
        End Function
        
        Public Function DashboardGetResourcePlannerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.AttendanceSummary()) Implements ServiceReference1.IAideService2.DashboardGetResourcePlannerAsync
            Return MyBase.Channel.DashboardGetResourcePlannerAsync
        End Function
        
        Public Function DashboardGetTaskSummary(ByVal dateStart As Date, ByVal email As String) As ServiceReference1.TaskSummary() Implements ServiceReference1.IAideService2.DashboardGetTaskSummary
            Return MyBase.Channel.DashboardGetTaskSummary(dateStart, email)
        End Function
        
        Public Function DashboardGetTaskSummaryAsync(ByVal dateStart As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary()) Implements ServiceReference1.IAideService2.DashboardGetTaskSummaryAsync
            Return MyBase.Channel.DashboardGetTaskSummaryAsync(dateStart, email)
        End Function
        
        Public Function DashboardGetTaskSummaryTotals(ByVal dateStart As Date, ByVal email As String) As ServiceReference1.DashboardTaskSummaryTotals() Implements ServiceReference1.IAideService2.DashboardGetTaskSummaryTotals
            Return MyBase.Channel.DashboardGetTaskSummaryTotals(dateStart, email)
        End Function
        
        Public Function DashboardGetTaskSummaryTotalsAsync(ByVal dateStart As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.DashboardTaskSummaryTotals()) Implements ServiceReference1.IAideService2.DashboardGetTaskSummaryTotalsAsync
            Return MyBase.Channel.DashboardGetTaskSummaryTotalsAsync(dateStart, email)
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="ServiceReference1.IAideService", CallbackContract:=GetType(ServiceReference1.IAideServiceCallback), SessionMode:=System.ServiceModel.SessionMode.Required)>  _
    Public Interface IAideService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateComcellClock", ReplyAction:="http://tempuri.org/IAideService/UpdateComcellClockResponse")>  _
        Sub UpdateComcellClock(ByVal obj As ServiceReference1.ComcellClock)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateComcellClock", ReplyAction:="http://tempuri.org/IAideService/UpdateComcellClockResponse")>  _
        Function UpdateComcellClockAsync(ByVal obj As ServiceReference1.ComcellClock) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateWeeklyReport")>  _
        Sub CreateWeeklyReport(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateWeeklyReport")>  _
        Function CreateWeeklyReportAsync(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateWeeklyReport")>  _
        Sub UpdateWeeklyReport(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateWeeklyReport")>  _
        Function UpdateWeeklyReportAsync(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateWeekRange")>  _
        Sub CreateWeekRange(ByVal weekRange As ServiceReference1.WeekRange)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateWeekRange")>  _
        Function CreateWeekRangeAsync(ByVal weekRange As ServiceReference1.WeekRange) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeekRange", ReplyAction:="http://tempuri.org/IAideService/GetWeekRangeResponse")>  _
        Function GetWeekRange(ByVal currentDate As Date, ByVal empID As Integer) As ServiceReference1.WeekRange()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeekRange", ReplyAction:="http://tempuri.org/IAideService/GetWeekRangeResponse")>  _
        Function GetWeekRangeAsync(ByVal currentDate As Date, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeekRangeByMonthYear", ReplyAction:="http://tempuri.org/IAideService/GetWeekRangeByMonthYearResponse")>  _
        Function GetWeekRangeByMonthYear(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.WeekRange()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeekRangeByMonthYear", ReplyAction:="http://tempuri.org/IAideService/GetWeekRangeByMonthYearResponse")>  _
        Function GetWeekRangeByMonthYearAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyReportsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyReportsByEmpIDResponse")>  _
        Function GetWeeklyReportsByEmpID(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.WeekRange()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyReportsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyReportsByEmpIDResponse")>  _
        Function GetWeeklyReportsByEmpIDAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyReportsByWeekRangeID", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyReportsByWeekRangeIDResponse")>  _
        Function GetWeeklyReportsByWeekRangeID(ByVal weekRangeID As Integer, ByVal empID As Integer) As ServiceReference1.WeeklyReport()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyReportsByWeekRangeID", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyReportsByWeekRangeIDResponse")>  _
        Function GetWeeklyReportsByWeekRangeIDAsync(ByVal weekRangeID As Integer, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyReport())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetTasksDataByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetTasksDataByEmpIDResponse")>  _
        Function GetTasksDataByEmpID(ByVal weekRangeID As Integer, ByVal empID As Integer) As ServiceReference1.WeeklyReport()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetTasksDataByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetTasksDataByEmpIDResponse")>  _
        Function GetTasksDataByEmpIDAsync(ByVal weekRangeID As Integer, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyReport())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMissingReportsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetMissingReportsByEmpIDResponse")>  _
        Function GetMissingReportsByEmpID(ByVal empID As Integer, ByVal currentDate As Date) As ServiceReference1.ContactList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMissingReportsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetMissingReportsByEmpIDResponse")>  _
        Function GetMissingReportsByEmpIDAsync(ByVal empID As Integer, ByVal currentDate As Date) As System.Threading.Tasks.Task(Of ServiceReference1.ContactList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyTeamStatusReport", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyTeamStatusReportResponse")>  _
        Function GetWeeklyTeamStatusReport(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As ServiceReference1.WeeklyTeamStatusReport()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWeeklyTeamStatusReport", ReplyAction:="http://tempuri.org/IAideService/GetWeeklyTeamStatusReportResponse")>  _
        Function GetWeeklyTeamStatusReportAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyTeamStatusReport())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAuditSched")>  _
        Sub InsertAuditSched(ByVal auditSched As ServiceReference1.AuditSched)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAuditSched")>  _
        Function InsertAuditSchedAsync(ByVal auditSched As ServiceReference1.AuditSched) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditSched", ReplyAction:="http://tempuri.org/IAideService/GetAuditSchedResponse")>  _
        Function GetAuditSched(ByVal empID As Integer, ByVal year As Integer) As ServiceReference1.AuditSched()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditSched", ReplyAction:="http://tempuri.org/IAideService/GetAuditSchedResponse")>  _
        Function GetAuditSchedAsync(ByVal empID As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AuditSched())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAuditSched")>  _
        Sub UpdateAuditSched(ByVal auditSched As ServiceReference1.AuditSched)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAuditSched")>  _
        Function UpdateAuditSchedAsync(ByVal auditSched As ServiceReference1.AuditSched) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWorkEmailbyEmail", ReplyAction:="http://tempuri.org/IAideService/GetWorkEmailbyEmailResponse")>  _
        Function GetWorkEmailbyEmail(ByVal email As String) As ServiceReference1.SendCode
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetWorkEmailbyEmail", ReplyAction:="http://tempuri.org/IAideService/GetWorkEmailbyEmailResponse")>  _
        Function GetWorkEmailbyEmailAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SendCode)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMailConfig", ReplyAction:="http://tempuri.org/IAideService/GetMailConfigResponse")>  _
        Function GetMailConfig() As ServiceReference1.MailConfig
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMailConfig", ReplyAction:="http://tempuri.org/IAideService/GetMailConfigResponse")>  _
        Function GetMailConfigAsync() As System.Threading.Tasks.Task(Of ServiceReference1.MailConfig)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAuditDaily")>  _
        Sub InsertAuditDaily(ByVal auditSched As ServiceReference1.WorkplaceAudit)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAuditDaily")>  _
        Function InsertAuditDailyAsync(ByVal auditSched As ServiceReference1.WorkplaceAudit) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditDaily", ReplyAction:="http://tempuri.org/IAideService/GetAuditDailyResponse")>  _
        Function GetAuditDaily(ByVal empID As Integer, ByVal parmDate As Date) As ServiceReference1.WorkplaceAudit()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditDaily", ReplyAction:="http://tempuri.org/IAideService/GetAuditDailyResponse")>  _
        Function GetAuditDailyAsync(ByVal empID As Integer, ByVal parmDate As Date) As System.Threading.Tasks.Task(Of ServiceReference1.WorkplaceAudit())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditQuestions", ReplyAction:="http://tempuri.org/IAideService/GetAuditQuestionsResponse")>  _
        Function GetAuditQuestions(ByVal empID As Integer, ByVal questionGroup As String) As ServiceReference1.WorkplaceAudit()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAuditQuestions", ReplyAction:="http://tempuri.org/IAideService/GetAuditQuestionsResponse")>  _
        Function GetAuditQuestionsAsync(ByVal empID As Integer, ByVal questionGroup As String) As System.Threading.Tasks.Task(Of ServiceReference1.WorkplaceAudit())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllContributors", ReplyAction:="http://tempuri.org/IAideService/GetAllContributorsResponse")>  _
        Function GetAllContributors(ByVal level As Integer) As ServiceReference1.Contributors()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllContributors", ReplyAction:="http://tempuri.org/IAideService/GetAllContributorsResponse")>  _
        Function GetAllContributorsAsync(ByVal level As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Contributors())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMessage", ReplyAction:="http://tempuri.org/IAideService/GetMessageResponse")>  _
        Function GetMessage(ByVal msgID As Integer, ByVal secID As Integer) As ServiceReference1.MessageDetail()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMessage", ReplyAction:="http://tempuri.org/IAideService/GetMessageResponse")>  _
        Function GetMessageAsync(ByVal msgID As Integer, ByVal secID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.MessageDetail())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLocation", ReplyAction:="http://tempuri.org/IAideService/GetAllLocationResponse")>  _
        Function GetAllLocation() As ServiceReference1.LocationList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLocation", ReplyAction:="http://tempuri.org/IAideService/GetAllLocationResponse")>  _
        Function GetAllLocationAsync() As System.Threading.Tasks.Task(Of ServiceReference1.LocationList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllPosition", ReplyAction:="http://tempuri.org/IAideService/GetAllPositionResponse")>  _
        Function GetAllPosition() As ServiceReference1.PositionList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllPosition", ReplyAction:="http://tempuri.org/IAideService/GetAllPositionResponse")>  _
        Function GetAllPositionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.PositionList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllPermission", ReplyAction:="http://tempuri.org/IAideService/GetAllPermissionResponse")>  _
        Function GetAllPermission() As ServiceReference1.PermissionList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllPermission", ReplyAction:="http://tempuri.org/IAideService/GetAllPermissionResponse")>  _
        Function GetAllPermissionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.PermissionList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllDepartment", ReplyAction:="http://tempuri.org/IAideService/GetAllDepartmentResponse")>  _
        Function GetAllDepartment() As ServiceReference1.DepartmentList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllDepartment", ReplyAction:="http://tempuri.org/IAideService/GetAllDepartmentResponse")>  _
        Function GetAllDepartmentAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DepartmentList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllDivision", ReplyAction:="http://tempuri.org/IAideService/GetAllDivisionResponse")>  _
        Function GetAllDivision() As ServiceReference1.DivisionList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllDivision", ReplyAction:="http://tempuri.org/IAideService/GetAllDivisionResponse")>  _
        Function GetAllDivisionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DivisionList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllStatus", ReplyAction:="http://tempuri.org/IAideService/GetAllStatusResponse")>  _
        Function GetAllStatus(ByVal statusName As String) As ServiceReference1.StatusList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllStatus", ReplyAction:="http://tempuri.org/IAideService/GetAllStatusResponse")>  _
        Function GetAllStatusAsync(ByVal statusName As String) As System.Threading.Tasks.Task(Of ServiceReference1.StatusList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertKPITarget", ReplyAction:="http://tempuri.org/IAideService/InsertKPITargetResponse")>  _
        Function InsertKPITarget(ByVal kpiTarget As ServiceReference1.KPITargets) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertKPITarget", ReplyAction:="http://tempuri.org/IAideService/InsertKPITargetResponse")>  _
        Function InsertKPITargetAsync(ByVal kpiTarget As ServiceReference1.KPITargets) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdatePITarget", ReplyAction:="http://tempuri.org/IAideService/UpdatePITargetResponse")>  _
        Function UpdatePITarget(ByVal kpiTarget As ServiceReference1.KPITargets) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdatePITarget", ReplyAction:="http://tempuri.org/IAideService/UpdatePITargetResponse")>  _
        Function UpdatePITargetAsync(ByVal kpiTarget As ServiceReference1.KPITargets) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPITargets", ReplyAction:="http://tempuri.org/IAideService/GetKPITargetsResponse")>  _
        Function GetKPITargets(ByVal Id As Integer) As ServiceReference1.KPITargets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPITargets", ReplyAction:="http://tempuri.org/IAideService/GetKPITargetsResponse")>  _
        Function GetKPITargetsAsync(ByVal Id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.KPITargets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllKPITargets", ReplyAction:="http://tempuri.org/IAideService/GetAllKPITargetsResponse")>  _
        Function GetAllKPITargets(ByVal EmpId As Integer, ByVal FiscalYear As Date) As ServiceReference1.KPITargets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllKPITargets", ReplyAction:="http://tempuri.org/IAideService/GetAllKPITargetsResponse")>  _
        Function GetAllKPITargetsAsync(ByVal EmpId As Integer, ByVal FiscalYear As Date) As System.Threading.Tasks.Task(Of ServiceReference1.KPITargets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertKPISummary", ReplyAction:="http://tempuri.org/IAideService/InsertKPISummaryResponse")>  _
        Function InsertKPISummary(ByVal kpi As ServiceReference1.KPISummary) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertKPISummary", ReplyAction:="http://tempuri.org/IAideService/InsertKPISummaryResponse")>  _
        Function InsertKPISummaryAsync(ByVal kpi As ServiceReference1.KPISummary) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateKPISummary", ReplyAction:="http://tempuri.org/IAideService/UpdateKPISummaryResponse")>  _
        Function UpdateKPISummary(ByVal kpi As ServiceReference1.KPISummary) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateKPISummary", ReplyAction:="http://tempuri.org/IAideService/UpdateKPISummaryResponse")>  _
        Function UpdateKPISummaryAsync(ByVal kpi As ServiceReference1.KPISummary) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPISummaryList", ReplyAction:="http://tempuri.org/IAideService/GetKPISummaryListResponse")>  _
        Function GetKPISummaryList(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date) As ServiceReference1.KPISummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPISummaryList", ReplyAction:="http://tempuri.org/IAideService/GetKPISummaryListResponse")>  _
        Function GetKPISummaryListAsync(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date) As System.Threading.Tasks.Task(Of ServiceReference1.KPISummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPISummaryListMonthly", ReplyAction:="http://tempuri.org/IAideService/GetKPISummaryListMonthlyResponse")>  _
        Function GetKPISummaryListMonthly(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date, ByVal Month As Short, ByVal KPIRef As String) As ServiceReference1.KPISummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetKPISummaryListMonthly", ReplyAction:="http://tempuri.org/IAideService/GetKPISummaryListMonthlyResponse")>  _
        Function GetKPISummaryListMonthlyAsync(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date, ByVal Month As Short, ByVal KPIRef As String) As System.Threading.Tasks.Task(Of ServiceReference1.KPISummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntList", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntListResponse")>  _
        Function GetLessonLearntList(ByVal email As String) As ServiceReference1.LessonLearnt()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntList", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntListResponse")>  _
        Function GetLessonLearntListAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.LessonLearnt())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntByProblem", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntByProblemResponse")>  _
        Function GetLessonLearntByProblem(ByVal search As String, ByVal email As String) As ServiceReference1.LessonLearnt()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntByProblem", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntByProblemResponse")>  _
        Function GetLessonLearntByProblemAsync(ByVal search As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.LessonLearnt())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateLessonLearnt")>  _
        Sub CreateLessonLearnt(ByVal lessonLearnt As ServiceReference1.LessonLearnt)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateLessonLearnt")>  _
        Function CreateLessonLearntAsync(ByVal lessonLearnt As ServiceReference1.LessonLearnt) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateLessonLearntInfo")>  _
        Sub UpdateLessonLearntInfo(ByVal lesson As ServiceReference1.LessonLearnt)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateLessonLearntInfo")>  _
        Function UpdateLessonLearntInfoAsync(ByVal lesson As ServiceReference1.LessonLearnt) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateNewSuccessRegister")>  _
        Sub CreateNewSuccessRegister(ByVal success As ServiceReference1.SuccessRegister)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateNewSuccessRegister")>  _
        Function CreateNewSuccessRegisterAsync(ByVal success As ServiceReference1.SuccessRegister) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterByEmpID", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterByEmpIDResponse")>  _
        Function ViewSuccessRegisterByEmpID(ByVal email As String) As ServiceReference1.SuccessRegister()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterByEmpID", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterByEmpIDResponse")>  _
        Function ViewSuccessRegisterByEmpIDAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterBySearch", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterBySearchResponse")>  _
        Function ViewSuccessRegisterBySearch(ByVal input As String, ByVal email As String) As ServiceReference1.SuccessRegister()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterBySearch", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterBySearchResponse")>  _
        Function ViewSuccessRegisterBySearchAsync(ByVal input As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterAll", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterAllResponse")>  _
        Function ViewSuccessRegisterAll(ByVal email As String) As ServiceReference1.SuccessRegister()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewSuccessRegisterAll", ReplyAction:="http://tempuri.org/IAideService/ViewSuccessRegisterAllResponse")>  _
        Function ViewSuccessRegisterAllAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewNicknameByDeptID", ReplyAction:="http://tempuri.org/IAideService/ViewNicknameByDeptIDResponse")>  _
        Function ViewNicknameByDeptID(ByVal email As String, ByVal toDisplay As Integer) As ServiceReference1.Nickname()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewNicknameByDeptID", ReplyAction:="http://tempuri.org/IAideService/ViewNicknameByDeptIDResponse")>  _
        Function ViewNicknameByDeptIDAsync(ByVal email As String, ByVal toDisplay As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSuccessRegisterByEmpID")>  _
        Sub UpdateSuccessRegisterByEmpID(ByVal success As ServiceReference1.SuccessRegister)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSuccessRegisterByEmpID")>  _
        Function UpdateSuccessRegisterByEmpIDAsync(ByVal success As ServiceReference1.SuccessRegister) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/DeleteSuccessRegisterBySuccessID")>  _
        Sub DeleteSuccessRegisterBySuccessID(ByVal successID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/DeleteSuccessRegisterBySuccessID")>  _
        Function DeleteSuccessRegisterBySuccessIDAsync(ByVal successID As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/SignOn", ReplyAction:="http://tempuri.org/IAideService/SignOnResponse")>  _
        Function SignOn(ByVal emailAddress As String) As ServiceReference1.Profile
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/SignOn", ReplyAction:="http://tempuri.org/IAideService/SignOnResponse")>  _
        Function SignOnAsync(ByVal emailAddress As String) As System.Threading.Tasks.Task(Of ServiceReference1.Profile)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/SignOff", ReplyAction:="http://tempuri.org/IAideService/SignOffResponse")>  _
        Function SignOff(ByVal EmployeeName As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/SignOff", ReplyAction:="http://tempuri.org/IAideService/SignOffResponse")>  _
        Function SignOffAsync(ByVal EmployeeName As String) As System.Threading.Tasks.Task(Of Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewContactListAll", ReplyAction:="http://tempuri.org/IAideService/ViewContactListAllResponse")>  _
        Function ViewContactListAll(ByVal empID As Integer, ByVal selection As Integer) As ServiceReference1.ContactList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewContactListAll", ReplyAction:="http://tempuri.org/IAideService/ViewContactListAllResponse")>  _
        Function ViewContactListAllAsync(ByVal empID As Integer, ByVal selection As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ContactList())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateContactListByEmpID")>  _
        Sub UpdateContactListByEmpID(ByVal contact As ServiceReference1.ContactList, ByVal selection As Integer)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateContactListByEmpID")>  _
        Function UpdateContactListByEmpIDAsync(ByVal contact As ServiceReference1.ContactList, ByVal selection As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateNewContactByEmpID")>  _
        Sub CreateNewContactByEmpID(ByVal contact As ServiceReference1.ContactList)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateNewContactByEmpID")>  _
        Function CreateNewContactByEmpIDAsync(ByVal contact As ServiceReference1.ContactList) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListAll", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListAllResponse")>  _
        Function ViewBirthdayListAll(ByVal email As String) As ServiceReference1.BirthdayList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListAll", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListAllResponse")>  _
        Function ViewBirthdayListAllAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentMonth", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentMonthResponse")>  _
        Function ViewBirthdayListByCurrentMonth(ByVal email As String) As ServiceReference1.BirthdayList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentMonth", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentMonthResponse")>  _
        Function ViewBirthdayListByCurrentMonthAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentDay", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentDayResponse")>  _
        Function ViewBirthdayListByCurrentDay(ByVal email As String) As ServiceReference1.BirthdayList()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentDay", ReplyAction:="http://tempuri.org/IAideService/ViewBirthdayListByCurrentDayResponse")>  _
        Function ViewBirthdayListByCurrentDayAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/selectAllConcern", ReplyAction:="http://tempuri.org/IAideService/selectAllConcernResponse")>  _
        Function selectAllConcern(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/selectAllConcern", ReplyAction:="http://tempuri.org/IAideService/selectAllConcernResponse")>  _
        Function selectAllConcernAsync(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertIntoConcern")>  _
        Sub InsertIntoConcern(ByVal concern As ServiceReference1.Concern, ByVal email As String)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertIntoConcern")>  _
        Function InsertIntoConcernAsync(ByVal concern As ServiceReference1.Concern, ByVal email As String) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetGeneratedRefNo", ReplyAction:="http://tempuri.org/IAideService/GetGeneratedRefNoResponse")>  _
        Function GetGeneratedRefNo() As ServiceReference1.Concern
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetGeneratedRefNo", ReplyAction:="http://tempuri.org/IAideService/GetGeneratedRefNoResponse")>  _
        Function GetGeneratedRefNoAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Concern)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResultSearch", ReplyAction:="http://tempuri.org/IAideService/GetResultSearchResponse")>  _
        Function GetResultSearch(ByVal email As String, ByVal searchKeyWord As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResultSearch", ReplyAction:="http://tempuri.org/IAideService/GetResultSearchResponse")>  _
        Function GetResultSearchAsync(ByVal email As String, ByVal searchKeyWord As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetListOfACtion", ReplyAction:="http://tempuri.org/IAideService/GetListOfACtionResponse")>  _
        Function GetListOfACtion(ByVal Ref_id As String, ByVal email As String) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetListOfACtion", ReplyAction:="http://tempuri.org/IAideService/GetListOfACtionResponse")>  _
        Function GetListOfACtionAsync(ByVal Ref_id As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetListOfACtionsReferences", ReplyAction:="http://tempuri.org/IAideService/GetListOfACtionsReferencesResponse")>  _
        Function GetListOfACtionsReferences(ByVal Ref_id As String) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetListOfACtionsReferences", ReplyAction:="http://tempuri.org/IAideService/GetListOfACtionsReferencesResponse")>  _
        Function GetListOfACtionsReferencesAsync(ByVal Ref_id As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/insertAndDeleteSelectedAction")>  _
        Sub insertAndDeleteSelectedAction(ByVal concern As ServiceReference1.Concern)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/insertAndDeleteSelectedAction")>  _
        Function insertAndDeleteSelectedActionAsync(ByVal concern As ServiceReference1.Concern) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSelectedConcern")>  _
        Sub UpdateSelectedConcern(ByVal concern As ServiceReference1.Concern)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSelectedConcern")>  _
        Function UpdateSelectedConcernAsync(ByVal concern As ServiceReference1.Concern) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBetweenSearchConcern", ReplyAction:="http://tempuri.org/IAideService/GetBetweenSearchConcernResponse")>  _
        Function GetBetweenSearchConcern(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer, ByVal date1 As Date, ByVal date2 As Date) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBetweenSearchConcern", ReplyAction:="http://tempuri.org/IAideService/GetBetweenSearchConcernResponse")>  _
        Function GetBetweenSearchConcernAsync(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer, ByVal date1 As Date, ByVal date2 As Date) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSearchAction", ReplyAction:="http://tempuri.org/IAideService/GetSearchActionResponse")>  _
        Function GetSearchAction(ByVal _keywordAction As String, ByVal Ref_id As String, ByVal email As String) As ServiceReference1.Concern()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSearchAction", ReplyAction:="http://tempuri.org/IAideService/GetSearchActionResponse")>  _
        Function GetSearchActionAsync(ByVal _keywordAction As String, ByVal Ref_id As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsList", ReplyAction:="http://tempuri.org/IAideService/GetSkillsListResponse")>  _
        Function GetSkillsList(ByVal empID As Integer) As ServiceReference1.Skills()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsList", ReplyAction:="http://tempuri.org/IAideService/GetSkillsListResponse")>  _
        Function GetSkillsListAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertNewSkills")>  _
        Sub InsertNewSkills(ByVal skills As ServiceReference1.Skills)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertNewSkills")>  _
        Function InsertNewSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSkills")>  _
        Sub UpdateSkills(ByVal skills As ServiceReference1.Skills)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateSkills")>  _
        Function UpdateSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAllSkills")>  _
        Sub UpdateAllSkills(ByVal skills As ServiceReference1.Skills)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAllSkills")>  _
        Function UpdateAllSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewEmpSKills", ReplyAction:="http://tempuri.org/IAideService/ViewEmpSKillsResponse")>  _
        Function ViewEmpSKills(ByVal empID As Integer) As ServiceReference1.Skills()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewEmpSKills", ReplyAction:="http://tempuri.org/IAideService/ViewEmpSKillsResponse")>  _
        Function ViewEmpSKillsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProfLvlByEmpIDSkillIDs", ReplyAction:="http://tempuri.org/IAideService/GetProfLvlByEmpIDSkillIDsResponse")>  _
        Function GetProfLvlByEmpIDSkillIDs(ByVal empID As Integer, ByVal skillID As Integer) As ServiceReference1.Skills
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProfLvlByEmpIDSkillIDs", ReplyAction:="http://tempuri.org/IAideService/GetProfLvlByEmpIDSkillIDsResponse")>  _
        Function GetProfLvlByEmpIDSkillIDsAsync(ByVal empID As Integer, ByVal skillID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsProfByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetSkillsProfByEmpIDResponse")>  _
        Function GetSkillsProfByEmpID(ByVal id As Integer) As ServiceReference1.Skills()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsProfByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetSkillsProfByEmpIDResponse")>  _
        Function GetSkillsProfByEmpIDAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsLastReviewByEmpIDSkillID", ReplyAction:="http://tempuri.org/IAideService/GetSkillsLastReviewByEmpIDSkillIDResponse")>  _
        Function GetSkillsLastReviewByEmpIDSkillID(ByVal empID As Integer, ByVal skillID As Integer) As ServiceReference1.Skills
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetSkillsLastReviewByEmpIDSkillID", ReplyAction:="http://tempuri.org/IAideService/GetSkillsLastReviewByEmpIDSkillIDResponse")>  _
        Function GetSkillsLastReviewByEmpIDSkillIDAsync(ByVal empID As Integer, ByVal skillID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateResourcePlanner")>  _
        Sub UpdateResourcePlanner(ByVal resource As ServiceReference1.ResourcePlanner)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateResourcePlanner")>  _
        Function UpdateResourcePlannerAsync(ByVal resource As ServiceReference1.ResourcePlanner) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertResourcePlanner")>  _
        Sub InsertResourcePlanner(ByVal resource As ServiceReference1.ResourcePlanner)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertResourcePlanner")>  _
        Function InsertResourcePlannerAsync(ByVal resource As ServiceReference1.ResourcePlanner) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewEmpResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/ViewEmpResourcePlannerResponse")>  _
        Function ViewEmpResourcePlanner(ByVal email As String) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewEmpResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/ViewEmpResourcePlannerResponse")>  _
        Function ViewEmpResourcePlannerAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetStatusResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetStatusResourcePlannerResponse")>  _
        Function GetStatusResourcePlanner(ByVal empID As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetStatusResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetStatusResourcePlannerResponse")>  _
        Function GetStatusResourcePlannerAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResourcePlannerByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetResourcePlannerByEmpIDResponse")>  _
        Function GetResourcePlannerByEmpID(ByVal empID As Integer, ByVal deptID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResourcePlannerByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetResourcePlannerByEmpIDResponse")>  _
        Function GetResourcePlannerByEmpIDAsync(ByVal empID As Integer, ByVal deptID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllEmpResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerResponse")>  _
        Function GetAllEmpResourcePlanner(ByVal email As String, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllEmpResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerResponse")>  _
        Function GetAllEmpResourcePlannerAsync(ByVal email As String, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerByStatus", ReplyAction:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerByStatusResponse")>  _
        Function GetAllEmpResourcePlannerByStatus(ByVal email As String, ByVal month As Integer, ByVal year As Integer, ByVal status As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerByStatus", ReplyAction:="http://tempuri.org/IAideService/GetAllEmpResourcePlannerByStatusResponse")>  _
        Function GetAllEmpResourcePlannerByStatusAsync(ByVal email As String, ByVal month As Integer, ByVal year As Integer, ByVal status As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllStatusResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetAllStatusResourcePlannerResponse")>  _
        Function GetAllStatusResourcePlanner() As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllStatusResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetAllStatusResourcePlannerResponse")>  _
        Function GetAllStatusResourcePlannerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetResourcePlannerResponse")>  _
        Function GetResourcePlanner(ByVal email As String, ByVal status As Integer, ByVal toBeDisplayed As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetResourcePlanner", ReplyAction:="http://tempuri.org/IAideService/GetResourcePlannerResponse")>  _
        Function GetResourcePlannerAsync(ByVal email As String, ByVal status As Integer, ByVal toBeDisplayed As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetNonBillableHours", ReplyAction:="http://tempuri.org/IAideService/GetNonBillableHoursResponse")>  _
        Function GetNonBillableHours(ByVal email As String, ByVal display As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetNonBillableHours", ReplyAction:="http://tempuri.org/IAideService/GetNonBillableHoursResponse")>  _
        Function GetNonBillableHoursAsync(ByVal email As String, ByVal display As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLeavesByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetAllLeavesByEmployeeResponse")>  _
        Function GetAllLeavesByEmployee(ByVal empID As Integer, ByVal leaveType As Integer, ByVal statusCode As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLeavesByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetAllLeavesByEmployeeResponse")>  _
        Function GetAllLeavesByEmployeeAsync(ByVal empID As Integer, ByVal leaveType As Integer, ByVal statusCode As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLeavesHistoryByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetAllLeavesHistoryByEmployeeResponse")>  _
        Function GetAllLeavesHistoryByEmployee(ByVal empID As Integer, ByVal leaveType As Integer) As ServiceReference1.ResourcePlanner()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllLeavesHistoryByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetAllLeavesHistoryByEmployeeResponse")>  _
        Function GetAllLeavesHistoryByEmployeeAsync(ByVal empID As Integer, ByVal leaveType As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateLeaves")>  _
        Sub UpdateLeaves(ByVal resource As ServiceReference1.ResourcePlanner, ByVal statusCD As Integer, ByVal leaveType As Integer)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateLeaves")>  _
        Function UpdateLeavesAsync(ByVal resource As ServiceReference1.ResourcePlanner, ByVal statusCD As Integer, ByVal leaveType As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAnnouncements")>  _
        Sub InsertAnnouncements(ByVal announcements As ServiceReference1.Announcements)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAnnouncements")>  _
        Function InsertAnnouncementsAsync(ByVal announcements As ServiceReference1.Announcements) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAnnouncements", ReplyAction:="http://tempuri.org/IAideService/GetAnnouncementsResponse")>  _
        Function GetAnnouncements(ByVal empID As Integer) As ServiceReference1.Announcements()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAnnouncements", ReplyAction:="http://tempuri.org/IAideService/GetAnnouncementsResponse")>  _
        Function GetAnnouncementsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Announcements())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAnnouncements")>  _
        Sub UpdateAnnouncements(ByVal announcements As ServiceReference1.Announcements)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAnnouncements")>  _
        Function UpdateAnnouncementsAsync(ByVal announcements As ServiceReference1.Announcements) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLate", ReplyAction:="http://tempuri.org/IAideService/GetLateResponse")>  _
        Function GetLate(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal toDisplay As Integer) As ServiceReference1.Late()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLate", ReplyAction:="http://tempuri.org/IAideService/GetLateResponse")>  _
        Function GetLateAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal toDisplay As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Late())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaCourses", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaCoursesResponse")>  _
        Function GetAllSabaCourses(ByVal empID As Integer) As ServiceReference1.SabaLearning()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaCourses", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaCoursesResponse")>  _
        Function GetAllSabaCoursesAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaXref", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaXrefResponse")>  _
        Function GetAllSabaXref(ByVal empID As Integer, ByVal sabaID As Integer) As ServiceReference1.SabaLearning()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaXref", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaXrefResponse")>  _
        Function GetAllSabaXrefAsync(ByVal empID As Integer, ByVal sabaID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertSabaCourses", ReplyAction:="http://tempuri.org/IAideService/InsertSabaCoursesResponse")>  _
        Sub InsertSabaCourses(ByVal obj As ServiceReference1.SabaLearning)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/InsertSabaCourses", ReplyAction:="http://tempuri.org/IAideService/InsertSabaCoursesResponse")>  _
        Function InsertSabaCoursesAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateSabaCourses", ReplyAction:="http://tempuri.org/IAideService/UpdateSabaCoursesResponse")>  _
        Sub UpdateSabaCourses(ByVal obj As ServiceReference1.SabaLearning)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateSabaCourses", ReplyAction:="http://tempuri.org/IAideService/UpdateSabaCoursesResponse")>  _
        Function UpdateSabaCoursesAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateSabaXref", ReplyAction:="http://tempuri.org/IAideService/UpdateSabaXrefResponse")>  _
        Sub UpdateSabaXref(ByVal obj As ServiceReference1.SabaLearning)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/UpdateSabaXref", ReplyAction:="http://tempuri.org/IAideService/UpdateSabaXrefResponse")>  _
        Function UpdateSabaXrefAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaCourseByTitle", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaCourseByTitleResponse")>  _
        Function GetAllSabaCourseByTitle(ByVal message As String, ByVal empID As Integer) As ServiceReference1.SabaLearning()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllSabaCourseByTitle", ReplyAction:="http://tempuri.org/IAideService/GetAllSabaCourseByTitleResponse")>  _
        Function GetAllSabaCourseByTitleAsync(ByVal message As String, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertComcellMeeting")>  _
        Sub InsertComcellMeeting(ByVal comcell As ServiceReference1.Comcell)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertComcellMeeting")>  _
        Function InsertComcellMeetingAsync(ByVal comcell As ServiceReference1.Comcell) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetComcellMeeting", ReplyAction:="http://tempuri.org/IAideService/GetComcellMeetingResponse")>  _
        Function GetComcellMeeting(ByVal empID As Integer, ByVal year As Integer) As ServiceReference1.Comcell()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetComcellMeeting", ReplyAction:="http://tempuri.org/IAideService/GetComcellMeetingResponse")>  _
        Function GetComcellMeetingAsync(ByVal empID As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Comcell())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateComcellMeeting")>  _
        Sub UpdateComcellMeeting(ByVal comcell As ServiceReference1.Comcell)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateComcellMeeting")>  _
        Function UpdateComcellMeetingAsync(ByVal comcell As ServiceReference1.Comcell) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetClockTimeByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetClockTimeByEmployeeResponse")>  _
        Function GetClockTimeByEmployee(ByVal empid As Integer) As ServiceReference1.ComcellClock
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetClockTimeByEmployee", ReplyAction:="http://tempuri.org/IAideService/GetClockTimeByEmployeeResponse")>  _
        Function GetClockTimeByEmployeeAsync(ByVal empid As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ComcellClock)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertActionList")>  _
        Sub InsertActionList(ByVal _Action As ServiceReference1.Action)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertActionList")>  _
        Function InsertActionListAsync(ByVal _Action As ServiceReference1.Action) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionListByMessage", ReplyAction:="http://tempuri.org/IAideService/GetActionListByMessageResponse")>  _
        Function GetActionListByMessage(ByVal _Message As String, ByVal email As String) As ServiceReference1.Action()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionListByMessage", ReplyAction:="http://tempuri.org/IAideService/GetActionListByMessageResponse")>  _
        Function GetActionListByMessageAsync(ByVal _Message As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Action())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionListByActionNo", ReplyAction:="http://tempuri.org/IAideService/GetActionListByActionNoResponse")>  _
        Function GetActionListByActionNo(ByVal actionNo As String, ByVal empID As Integer) As ServiceReference1.Action()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionListByActionNo", ReplyAction:="http://tempuri.org/IAideService/GetActionListByActionNoResponse")>  _
        Function GetActionListByActionNoAsync(ByVal actionNo As String, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Action())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionSummary", ReplyAction:="http://tempuri.org/IAideService/GetActionSummaryResponse")>  _
        Function GetActionSummary(ByVal email As String) As ServiceReference1.Action()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetActionSummary", ReplyAction:="http://tempuri.org/IAideService/GetActionSummaryResponse")>  _
        Function GetActionSummaryAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Action())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntListOfActionSummary", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntListOfActionSummaryResponse")>  _
        Function GetLessonLearntListOfActionSummary(ByVal empID As Integer) As ServiceReference1.Action()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetLessonLearntListOfActionSummary", ReplyAction:="http://tempuri.org/IAideService/GetLessonLearntListOfActionSummaryResponse")>  _
        Function GetLessonLearntListOfActionSummaryAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Action())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateActionList")>  _
        Sub UpdateActionList(ByVal _Action As ServiceReference1.Action)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateActionList")>  _
        Function UpdateActionListAsync(ByVal _Action As ServiceReference1.Action) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMyAttendance", ReplyAction:="http://tempuri.org/IAideService/GetMyAttendanceResponse")>  _
        Function GetMyAttendance(ByVal EmpId As Integer, ByVal WeekOf As Date) As ServiceReference1.MyAttendance
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMyAttendance", ReplyAction:="http://tempuri.org/IAideService/GetMyAttendanceResponse")>  _
        Function GetMyAttendanceAsync(ByVal EmpId As Integer, ByVal WeekOf As Date) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceSummary", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceSummaryResponse")>  _
        Function GetAttendanceSummary(ByVal Month As Integer, ByVal Year As Integer) As ServiceReference1.AttendanceSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceSummary", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceSummaryResponse")>  _
        Function GetAttendanceSummaryAsync(ByVal Month As Integer, ByVal Year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AttendanceSummary())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAttendance")>  _
        Sub UpdateAttendance(ByVal _Attendance As ServiceReference1.AttendanceSummary)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAttendance")>  _
        Function UpdateAttendanceAsync(ByVal _Attendance As ServiceReference1.AttendanceSummary) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAttendance2")>  _
        Sub UpdateAttendance2(ByVal empid As Integer, ByVal day As Integer, ByVal attstatus As Integer)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAttendance2")>  _
        Function UpdateAttendance2Async(ByVal empid As Integer, ByVal day As Integer, ByVal attstatus As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAttendance")>  _
        Sub InsertAttendance(ByVal _Attendance As ServiceReference1.AttendanceSummary)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAttendance")>  _
        Function InsertAttendanceAsync(ByVal _Attendance As ServiceReference1.AttendanceSummary) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceToday", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceTodayResponse")>  _
        Function GetAttendanceToday(ByVal email As String) As ServiceReference1.MyAttendance()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceToday", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceTodayResponse")>  _
        Function GetAttendanceTodayAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceTodayBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceTodayBySearchResponse")>  _
        Function GetAttendanceTodayBySearch(ByVal email As String, ByVal input As String) As ServiceReference1.MyAttendance()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAttendanceTodayBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAttendanceTodayBySearchResponse")>  _
        Function GetAttendanceTodayBySearchAsync(ByVal email As String, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBillableHoursByMonth", ReplyAction:="http://tempuri.org/IAideService/GetBillableHoursByMonthResponse")>  _
        Function GetBillableHoursByMonth(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As ServiceReference1.BillableHours()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBillableHoursByMonth", ReplyAction:="http://tempuri.org/IAideService/GetBillableHoursByMonthResponse")>  _
        Function GetBillableHoursByMonthAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.BillableHours())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBillableHoursByWeek", ReplyAction:="http://tempuri.org/IAideService/GetBillableHoursByWeekResponse")>  _
        Function GetBillableHoursByWeek(ByVal empID As Integer, ByVal weekID As Integer) As ServiceReference1.BillableHours()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetBillableHoursByWeek", ReplyAction:="http://tempuri.org/IAideService/GetBillableHoursByWeekResponse")>  _
        Function GetBillableHoursByWeekAsync(ByVal empID As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.BillableHours())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetContactInformation", ReplyAction:="http://tempuri.org/IAideService/GetContactInformationResponse")>  _
        Function GetContactInformation(ByVal Emp_ID As Integer) As ServiceReference1.Contact
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetContactInformation", ReplyAction:="http://tempuri.org/IAideService/GetContactInformationResponse")>  _
        Function GetContactInformationAsync(ByVal Emp_ID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Contact)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetContactList", ReplyAction:="http://tempuri.org/IAideService/GetContactListResponse")>  _
        Function GetContactList() As ServiceReference1.Contact()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetContactList", ReplyAction:="http://tempuri.org/IAideService/GetContactListResponse")>  _
        Function GetContactListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Contact())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateContactInformation")>  _
        Sub UpdateContactInformation(ByVal contact As ServiceReference1.Contact)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateContactInformation")>  _
        Function UpdateContactInformationAsync(ByVal contact As ServiceReference1.Contact) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetEmployeeList", ReplyAction:="http://tempuri.org/IAideService/GetEmployeeListResponse")>  _
        Function GetEmployeeList() As ServiceReference1.Employee()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetEmployeeList", ReplyAction:="http://tempuri.org/IAideService/GetEmployeeListResponse")>  _
        Function GetEmployeeListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Employee())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetNicknameByDeptID", ReplyAction:="http://tempuri.org/IAideService/GetNicknameByDeptIDResponse")>  _
        Function GetNicknameByDeptID(ByVal email As String) As ServiceReference1.Employee()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetNicknameByDeptID", ReplyAction:="http://tempuri.org/IAideService/GetNicknameByDeptIDResponse")>  _
        Function GetNicknameByDeptIDAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Employee())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProfileInformation", ReplyAction:="http://tempuri.org/IAideService/GetProfileInformationResponse")>  _
        Function GetProfileInformation(ByVal empId As Integer) As ServiceReference1.Profile
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProfileInformation", ReplyAction:="http://tempuri.org/IAideService/GetProfileInformationResponse")>  _
        Function GetProfileInformationAsync(ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Profile)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllListOfProject", ReplyAction:="http://tempuri.org/IAideService/GetAllListOfProjectResponse")>  _
        Function GetAllListOfProject(ByVal empID As Integer, ByVal displayStatus As Integer) As ServiceReference1.Project()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllListOfProject", ReplyAction:="http://tempuri.org/IAideService/GetAllListOfProjectResponse")>  _
        Function GetAllListOfProjectAsync(ByVal empID As Integer, ByVal displayStatus As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProjectList", ReplyAction:="http://tempuri.org/IAideService/GetProjectListResponse")>  _
        Function GetProjectList(ByVal empID As Integer, ByVal displayStatus As Integer) As ServiceReference1.Project()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProjectList", ReplyAction:="http://tempuri.org/IAideService/GetProjectListResponse")>  _
        Function GetProjectListAsync(ByVal empID As Integer, ByVal displayStatus As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/CreateProject", ReplyAction:="http://tempuri.org/IAideService/CreateProjectResponse")>  _
        Sub CreateProject(ByVal project As ServiceReference1.Project)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/CreateProject", ReplyAction:="http://tempuri.org/IAideService/CreateProjectResponse")>  _
        Function CreateProjectAsync(ByVal project As ServiceReference1.Project) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/AssignProject", ReplyAction:="http://tempuri.org/IAideService/AssignProjectResponse")>  _
        Sub AssignProject(ByVal Project As ServiceReference1.AssignedProject)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/AssignProject", ReplyAction:="http://tempuri.org/IAideService/AssignProjectResponse")>  _
        Function AssignProjectAsync(ByVal Project As ServiceReference1.AssignedProject) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssignedProjects", ReplyAction:="http://tempuri.org/IAideService/GetAssignedProjectsResponse")>  _
        Function GetAssignedProjects(ByVal projectId As Integer) As ServiceReference1.AssignedProject()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssignedProjects", ReplyAction:="http://tempuri.org/IAideService/GetAssignedProjectsResponse")>  _
        Function GetAssignedProjectsAsync(ByVal projectId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AssignedProject())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/DeleteAssignedProject", ReplyAction:="http://tempuri.org/IAideService/DeleteAssignedProjectResponse")>  _
        Sub DeleteAssignedProject(ByVal EmployeeID As Integer, ByVal ProjectID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/DeleteAssignedProject", ReplyAction:="http://tempuri.org/IAideService/DeleteAssignedProjectResponse")>  _
        Function DeleteAssignedProjectAsync(ByVal EmployeeID As Integer, ByVal ProjectID As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/DeleteAllAssignedProject", ReplyAction:="http://tempuri.org/IAideService/DeleteAllAssignedProjectResponse")>  _
        Sub DeleteAllAssignedProject(ByVal ProjectID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/DeleteAllAssignedProject", ReplyAction:="http://tempuri.org/IAideService/DeleteAllAssignedProjectResponse")>  _
        Function DeleteAllAssignedProjectAsync(ByVal ProjectID As Integer) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProjectByID", ReplyAction:="http://tempuri.org/IAideService/GetProjectByIDResponse")>  _
        Function GetProjectByID(ByVal projID As Integer) As ServiceReference1.Project
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetProjectByID", ReplyAction:="http://tempuri.org/IAideService/GetProjectByIDResponse")>  _
        Function GetProjectByIDAsync(ByVal projID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewProject", ReplyAction:="http://tempuri.org/IAideService/ViewProjectResponse")>  _
        Function ViewProject() As ServiceReference1.ViewProject()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewProject", ReplyAction:="http://tempuri.org/IAideService/ViewProjectResponse")>  _
        Function ViewProjectAsync() As System.Threading.Tasks.Task(Of ServiceReference1.ViewProject())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateProject")>  _
        Sub UpdateProject(ByVal project As ServiceReference1.Project)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateProject")>  _
        Function UpdateProjectAsync(ByVal project As ServiceReference1.Project) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateAssignedProject")>  _
        Sub CreateAssignedProject(ByVal assignProj() As ServiceReference1.AssignedProject)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateAssignedProject")>  _
        Function CreateAssignedProjectAsync(ByVal assignProj() As ServiceReference1.AssignedProject) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewProjectListofEmployee", ReplyAction:="http://tempuri.org/IAideService/ViewProjectListofEmployeeResponse")>  _
        Function ViewProjectListofEmployee(ByVal empID As Integer) As ServiceReference1.ViewProject()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewProjectListofEmployee", ReplyAction:="http://tempuri.org/IAideService/ViewProjectListofEmployeeResponse")>  _
        Function ViewProjectListofEmployeeAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ViewProject())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetEmployeePerProject", ReplyAction:="http://tempuri.org/IAideService/GetEmployeePerProjectResponse")>  _
        Function GetEmployeePerProject(ByVal empID As Integer, ByVal projID As Integer) As ServiceReference1.Nickname()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetEmployeePerProject", ReplyAction:="http://tempuri.org/IAideService/GetEmployeePerProjectResponse")>  _
        Function GetEmployeePerProjectAsync(ByVal empID As Integer, ByVal projID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetStatusList", ReplyAction:="http://tempuri.org/IAideService/GetStatusListResponse")>  _
        Function GetStatusList(ByVal groupId As Integer) As ServiceReference1.StatusGroup()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetStatusList", ReplyAction:="http://tempuri.org/IAideService/GetStatusListResponse")>  _
        Function GetStatusListAsync(ByVal groupId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.StatusGroup())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateTask")>  _
        Sub CreateTask(ByVal task As ServiceReference1.Tasks)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/CreateTask")>  _
        Function CreateTaskAsync(ByVal task As ServiceReference1.Tasks) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTasksByEmployee", ReplyAction:="http://tempuri.org/IAideService/ViewTasksByEmployeeResponse")>  _
        Function ViewTasksByEmployee(ByVal empId As Integer) As ServiceReference1.Tasks()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTasksByEmployee", ReplyAction:="http://tempuri.org/IAideService/ViewTasksByEmployeeResponse")>  _
        Function ViewTasksByEmployeeAsync(ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Tasks())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTaskSummary", ReplyAction:="http://tempuri.org/IAideService/ViewTaskSummaryResponse")>  _
        Function ViewTaskSummary(ByVal Current_Date As Date, ByVal empId As Integer) As ServiceReference1.TaskSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTaskSummary", ReplyAction:="http://tempuri.org/IAideService/ViewTaskSummaryResponse")>  _
        Function ViewTaskSummaryAsync(ByVal Current_Date As Date, ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTaskSummaryAll", ReplyAction:="http://tempuri.org/IAideService/ViewTaskSummaryAllResponse")>  _
        Function ViewTaskSummaryAll(ByVal Current_Date As Date, ByVal email As String) As ServiceReference1.TaskSummary()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/ViewTaskSummaryAll", ReplyAction:="http://tempuri.org/IAideService/ViewTaskSummaryAllResponse")>  _
        Function ViewTaskSummaryAllAsync(ByVal Current_Date As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateTask")>  _
        Sub UpdateTask(ByVal Task As ServiceReference1.Tasks)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateTask")>  _
        Function UpdateTaskAsync(ByVal Task As ServiceReference1.Tasks) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllTasks", ReplyAction:="http://tempuri.org/IAideService/GetAllTasksResponse")>  _
        Function GetAllTasks() As ServiceReference1.Tasks()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllTasks", ReplyAction:="http://tempuri.org/IAideService/GetAllTasksResponse")>  _
        Function GetAllTasksAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Tasks())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetTasksByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetTasksByEmpIDResponse")>  _
        Function GetTasksByEmpID(ByVal id As Integer) As ServiceReference1.Tasks()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetTasksByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetTasksByEmpIDResponse")>  _
        Function GetTasksByEmpIDAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Tasks())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertCommendations")>  _
        Sub InsertCommendations(ByVal task As ServiceReference1.Commendations)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertCommendations")>  _
        Function InsertCommendationsAsync(ByVal task As ServiceReference1.Commendations) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetCommendations", ReplyAction:="http://tempuri.org/IAideService/GetCommendationsResponse")>  _
        Function GetCommendations(ByVal empID As Integer) As ServiceReference1.Commendations()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetCommendations", ReplyAction:="http://tempuri.org/IAideService/GetCommendationsResponse")>  _
        Function GetCommendationsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Commendations())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateCommendations")>  _
        Sub UpdateCommendations(ByVal task As ServiceReference1.Commendations)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateCommendations")>  _
        Function UpdateCommendationsAsync(ByVal task As ServiceReference1.Commendations) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetCommendationsBySearch", ReplyAction:="http://tempuri.org/IAideService/GetCommendationsBySearchResponse")>  _
        Function GetCommendationsBySearch(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.Commendations()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetCommendationsBySearch", ReplyAction:="http://tempuri.org/IAideService/GetCommendationsBySearchResponse")>  _
        Function GetCommendationsBySearchAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Commendations())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAssets")>  _
        Sub InsertAssets(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAssets")>  _
        Function InsertAssetsAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsByEmpIDResponse")>  _
        Function GetAllAssetsByEmpID(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsByEmpIDResponse")>  _
        Function GetAllAssetsByEmpIDAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMyAssets", ReplyAction:="http://tempuri.org/IAideService/GetMyAssetsResponse")>  _
        Function GetMyAssets(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetMyAssets", ReplyAction:="http://tempuri.org/IAideService/GetMyAssetsResponse")>  _
        Function GetMyAssetsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsBySearchResponse")>  _
        Function GetAllAssetsBySearch(ByVal empID As Integer, ByVal input As String) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsBySearchResponse")>  _
        Function GetAllAssetsBySearchAsync(ByVal empID As Integer, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssets")>  _
        Sub UpdateAssets(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssets")>  _
        Function UpdateAssetsAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAssetsInventory")>  _
        Sub InsertAssetsInventory(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/InsertAssetsInventory")>  _
        Function InsertAssetsInventoryAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryByEmpIDResponse")>  _
        Function GetAllAssetsInventoryByEmpID(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryByEmpID", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryByEmpIDResponse")>  _
        Function GetAllAssetsInventoryByEmpIDAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryUnApproved", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryUnApprovedResponse")>  _
        Function GetAllAssetsInventoryUnApproved(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryUnApproved", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryUnApprovedResponse")>  _
        Function GetAllAssetsInventoryUnApprovedAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsUnAssigned", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsUnAssignedResponse")>  _
        Function GetAllAssetsUnAssigned(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsUnAssigned", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsUnAssignedResponse")>  _
        Function GetAllAssetsUnAssignedAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllManagers", ReplyAction:="http://tempuri.org/IAideService/GetAllManagersResponse")>  _
        Function GetAllManagers(ByVal empID As Integer) As ServiceReference1.Nickname()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllManagers", ReplyAction:="http://tempuri.org/IAideService/GetAllManagersResponse")>  _
        Function GetAllManagersAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname())
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventory")>  _
        Sub UpdateAssetsInventory(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventory")>  _
        Function UpdateAssetsInventoryAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventoryApproval")>  _
        Sub UpdateAssetsInventoryApproval(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventoryApproval")>  _
        Function UpdateAssetsInventoryApprovalAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventoryCancel")>  _
        Sub UpdateAssetsInventoryCancel(ByVal assets As ServiceReference1.Assets)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/UpdateAssetsInventoryCancel")>  _
        Function UpdateAssetsInventoryCancelAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsHistory", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsHistoryResponse")>  _
        Function GetAllAssetsHistory(ByVal empID As Integer) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsHistory", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsHistoryResponse")>  _
        Function GetAllAssetsHistoryAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsHistoryBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsHistoryBySearchResponse")>  _
        Function GetAllAssetsHistoryBySearch(ByVal empID As Integer, ByVal input As String) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsHistoryBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsHistoryBySearchResponse")>  _
        Function GetAllAssetsHistoryBySearchAsync(ByVal empID As Integer, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryBySearchResponse")>  _
        Function GetAllAssetsInventoryBySearch(ByVal empID As Integer, ByVal input As String, ByVal page As String) As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAllAssetsInventoryBySearch", ReplyAction:="http://tempuri.org/IAideService/GetAllAssetsInventoryBySearchResponse")>  _
        Function GetAllAssetsInventoryBySearchAsync(ByVal empID As Integer, ByVal input As String, ByVal page As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssetDescription", ReplyAction:="http://tempuri.org/IAideService/GetAssetDescriptionResponse")>  _
        Function GetAssetDescription() As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssetDescription", ReplyAction:="http://tempuri.org/IAideService/GetAssetDescriptionResponse")>  _
        Function GetAssetDescriptionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssetManufacturer", ReplyAction:="http://tempuri.org/IAideService/GetAssetManufacturerResponse")>  _
        Function GetAssetManufacturer() As ServiceReference1.Assets()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IAideService/GetAssetManufacturer", ReplyAction:="http://tempuri.org/IAideService/GetAssetManufacturerResponse")>  _
        Function GetAssetManufacturerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Assets())
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAideServiceCallback
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/NotifySuccess")>  _
        Sub NotifySuccess(ByVal message As String)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/NotifyError")>  _
        Sub NotifyError(ByVal message As String)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/NotifyPresent")>  _
        Sub NotifyPresent(ByVal EmployeeName As String)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/NotifyOffline")>  _
        Sub NotifyOffline(ByVal EmployeeName As String)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/IAideService/NotifyUpdate"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardEmployee())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardEmployee)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardContact())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardContact)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardNonBillableHoursSummary())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardNonBillableHoursSummary)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardTeamAttendance())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardTeamAttendance)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AttendanceSummary())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AttendanceSummary)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.TaskSummary())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.TaskSummary)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardTaskSummaryTotals())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DashboardTaskSummaryTotals)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ComcellClock)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeeklyReport())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeeklyReport)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeekRange)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeekRange())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ContactList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ContactList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeeklyTeamStatusReport())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WeeklyTeamStatusReport)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AuditSched)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AuditSched())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.SendCode)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.MailConfig)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WorkplaceAudit)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.WorkplaceAudit())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Contributors())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Contributors)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.MessageDetail())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.MessageDetail)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.LocationList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.LocationList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.PositionList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.PositionList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.PermissionList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.PermissionList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DepartmentList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DepartmentList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DivisionList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.DivisionList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.StatusList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.StatusList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.KPITargets)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.KPITargets())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.KPISummary)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.KPISummary())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.LessonLearnt())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.LessonLearnt)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.SuccessRegister)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.SuccessRegister())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Nickname())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Nickname)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Profile)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.BirthdayList())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.BirthdayList)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Concern())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Concern)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Skills())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Skills)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ResourcePlanner)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ResourcePlanner())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Announcements)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Announcements())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Late())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Late)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.SabaLearning())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.SabaLearning)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Comcell)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Comcell())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Action)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Action())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.MyAttendance)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.MyAttendance())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.BillableHours())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.BillableHours)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Contact)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Contact())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Employee())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Employee)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Project())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Project)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AssignedProject)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.AssignedProject())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ViewProject())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.ViewProject)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.StatusGroup())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.StatusGroup)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Tasks)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Tasks())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Commendations)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Commendations())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Assets)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(ServiceReference1.Assets()))>  _
        Sub NotifyUpdate(ByVal objData As Object)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IAideServiceChannel
        Inherits ServiceReference1.IAideService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class AideServiceClient
        Inherits System.ServiceModel.DuplexClientBase(Of ServiceReference1.IAideService)
        Implements ServiceReference1.IAideService
        
        Public Sub New(ByVal callbackInstance As System.ServiceModel.InstanceContext)
            MyBase.New(callbackInstance)
        End Sub
        
        Public Sub New(ByVal callbackInstance As System.ServiceModel.InstanceContext, ByVal endpointConfigurationName As String)
            MyBase.New(callbackInstance, endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal callbackInstance As System.ServiceModel.InstanceContext, ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(callbackInstance, endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal callbackInstance As System.ServiceModel.InstanceContext, ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(callbackInstance, endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal callbackInstance As System.ServiceModel.InstanceContext, ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(callbackInstance, binding, remoteAddress)
        End Sub
        
        Public Sub UpdateComcellClock(ByVal obj As ServiceReference1.ComcellClock) Implements ServiceReference1.IAideService.UpdateComcellClock
            MyBase.Channel.UpdateComcellClock(obj)
        End Sub
        
        Public Function UpdateComcellClockAsync(ByVal obj As ServiceReference1.ComcellClock) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateComcellClockAsync
            Return MyBase.Channel.UpdateComcellClockAsync(obj)
        End Function
        
        Public Sub CreateWeeklyReport(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) Implements ServiceReference1.IAideService.CreateWeeklyReport
            MyBase.Channel.CreateWeeklyReport(weeklyReport, weeklyReportXref)
        End Sub
        
        Public Function CreateWeeklyReportAsync(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateWeeklyReportAsync
            Return MyBase.Channel.CreateWeeklyReportAsync(weeklyReport, weeklyReportXref)
        End Function
        
        Public Sub UpdateWeeklyReport(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) Implements ServiceReference1.IAideService.UpdateWeeklyReport
            MyBase.Channel.UpdateWeeklyReport(weeklyReport, weeklyReportXref)
        End Sub
        
        Public Function UpdateWeeklyReportAsync(ByVal weeklyReport() As ServiceReference1.WeeklyReport, ByVal weeklyReportXref As ServiceReference1.WeekRange) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateWeeklyReportAsync
            Return MyBase.Channel.UpdateWeeklyReportAsync(weeklyReport, weeklyReportXref)
        End Function
        
        Public Sub CreateWeekRange(ByVal weekRange As ServiceReference1.WeekRange) Implements ServiceReference1.IAideService.CreateWeekRange
            MyBase.Channel.CreateWeekRange(weekRange)
        End Sub
        
        Public Function CreateWeekRangeAsync(ByVal weekRange As ServiceReference1.WeekRange) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateWeekRangeAsync
            Return MyBase.Channel.CreateWeekRangeAsync(weekRange)
        End Function
        
        Public Function GetWeekRange(ByVal currentDate As Date, ByVal empID As Integer) As ServiceReference1.WeekRange() Implements ServiceReference1.IAideService.GetWeekRange
            Return MyBase.Channel.GetWeekRange(currentDate, empID)
        End Function
        
        Public Function GetWeekRangeAsync(ByVal currentDate As Date, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange()) Implements ServiceReference1.IAideService.GetWeekRangeAsync
            Return MyBase.Channel.GetWeekRangeAsync(currentDate, empID)
        End Function
        
        Public Function GetWeekRangeByMonthYear(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.WeekRange() Implements ServiceReference1.IAideService.GetWeekRangeByMonthYear
            Return MyBase.Channel.GetWeekRangeByMonthYear(empID, month, year)
        End Function
        
        Public Function GetWeekRangeByMonthYearAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange()) Implements ServiceReference1.IAideService.GetWeekRangeByMonthYearAsync
            Return MyBase.Channel.GetWeekRangeByMonthYearAsync(empID, month, year)
        End Function
        
        Public Function GetWeeklyReportsByEmpID(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.WeekRange() Implements ServiceReference1.IAideService.GetWeeklyReportsByEmpID
            Return MyBase.Channel.GetWeeklyReportsByEmpID(empID, month, year)
        End Function
        
        Public Function GetWeeklyReportsByEmpIDAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeekRange()) Implements ServiceReference1.IAideService.GetWeeklyReportsByEmpIDAsync
            Return MyBase.Channel.GetWeeklyReportsByEmpIDAsync(empID, month, year)
        End Function
        
        Public Function GetWeeklyReportsByWeekRangeID(ByVal weekRangeID As Integer, ByVal empID As Integer) As ServiceReference1.WeeklyReport() Implements ServiceReference1.IAideService.GetWeeklyReportsByWeekRangeID
            Return MyBase.Channel.GetWeeklyReportsByWeekRangeID(weekRangeID, empID)
        End Function
        
        Public Function GetWeeklyReportsByWeekRangeIDAsync(ByVal weekRangeID As Integer, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyReport()) Implements ServiceReference1.IAideService.GetWeeklyReportsByWeekRangeIDAsync
            Return MyBase.Channel.GetWeeklyReportsByWeekRangeIDAsync(weekRangeID, empID)
        End Function
        
        Public Function GetTasksDataByEmpID(ByVal weekRangeID As Integer, ByVal empID As Integer) As ServiceReference1.WeeklyReport() Implements ServiceReference1.IAideService.GetTasksDataByEmpID
            Return MyBase.Channel.GetTasksDataByEmpID(weekRangeID, empID)
        End Function
        
        Public Function GetTasksDataByEmpIDAsync(ByVal weekRangeID As Integer, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyReport()) Implements ServiceReference1.IAideService.GetTasksDataByEmpIDAsync
            Return MyBase.Channel.GetTasksDataByEmpIDAsync(weekRangeID, empID)
        End Function
        
        Public Function GetMissingReportsByEmpID(ByVal empID As Integer, ByVal currentDate As Date) As ServiceReference1.ContactList() Implements ServiceReference1.IAideService.GetMissingReportsByEmpID
            Return MyBase.Channel.GetMissingReportsByEmpID(empID, currentDate)
        End Function
        
        Public Function GetMissingReportsByEmpIDAsync(ByVal empID As Integer, ByVal currentDate As Date) As System.Threading.Tasks.Task(Of ServiceReference1.ContactList()) Implements ServiceReference1.IAideService.GetMissingReportsByEmpIDAsync
            Return MyBase.Channel.GetMissingReportsByEmpIDAsync(empID, currentDate)
        End Function
        
        Public Function GetWeeklyTeamStatusReport(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As ServiceReference1.WeeklyTeamStatusReport() Implements ServiceReference1.IAideService.GetWeeklyTeamStatusReport
            Return MyBase.Channel.GetWeeklyTeamStatusReport(empID, month, year, weekID)
        End Function
        
        Public Function GetWeeklyTeamStatusReportAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.WeeklyTeamStatusReport()) Implements ServiceReference1.IAideService.GetWeeklyTeamStatusReportAsync
            Return MyBase.Channel.GetWeeklyTeamStatusReportAsync(empID, month, year, weekID)
        End Function
        
        Public Sub InsertAuditSched(ByVal auditSched As ServiceReference1.AuditSched) Implements ServiceReference1.IAideService.InsertAuditSched
            MyBase.Channel.InsertAuditSched(auditSched)
        End Sub
        
        Public Function InsertAuditSchedAsync(ByVal auditSched As ServiceReference1.AuditSched) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAuditSchedAsync
            Return MyBase.Channel.InsertAuditSchedAsync(auditSched)
        End Function
        
        Public Function GetAuditSched(ByVal empID As Integer, ByVal year As Integer) As ServiceReference1.AuditSched() Implements ServiceReference1.IAideService.GetAuditSched
            Return MyBase.Channel.GetAuditSched(empID, year)
        End Function
        
        Public Function GetAuditSchedAsync(ByVal empID As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AuditSched()) Implements ServiceReference1.IAideService.GetAuditSchedAsync
            Return MyBase.Channel.GetAuditSchedAsync(empID, year)
        End Function
        
        Public Sub UpdateAuditSched(ByVal auditSched As ServiceReference1.AuditSched) Implements ServiceReference1.IAideService.UpdateAuditSched
            MyBase.Channel.UpdateAuditSched(auditSched)
        End Sub
        
        Public Function UpdateAuditSchedAsync(ByVal auditSched As ServiceReference1.AuditSched) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAuditSchedAsync
            Return MyBase.Channel.UpdateAuditSchedAsync(auditSched)
        End Function
        
        Public Function GetWorkEmailbyEmail(ByVal email As String) As ServiceReference1.SendCode Implements ServiceReference1.IAideService.GetWorkEmailbyEmail
            Return MyBase.Channel.GetWorkEmailbyEmail(email)
        End Function
        
        Public Function GetWorkEmailbyEmailAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SendCode) Implements ServiceReference1.IAideService.GetWorkEmailbyEmailAsync
            Return MyBase.Channel.GetWorkEmailbyEmailAsync(email)
        End Function
        
        Public Function GetMailConfig() As ServiceReference1.MailConfig Implements ServiceReference1.IAideService.GetMailConfig
            Return MyBase.Channel.GetMailConfig
        End Function
        
        Public Function GetMailConfigAsync() As System.Threading.Tasks.Task(Of ServiceReference1.MailConfig) Implements ServiceReference1.IAideService.GetMailConfigAsync
            Return MyBase.Channel.GetMailConfigAsync
        End Function
        
        Public Sub InsertAuditDaily(ByVal auditSched As ServiceReference1.WorkplaceAudit) Implements ServiceReference1.IAideService.InsertAuditDaily
            MyBase.Channel.InsertAuditDaily(auditSched)
        End Sub
        
        Public Function InsertAuditDailyAsync(ByVal auditSched As ServiceReference1.WorkplaceAudit) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAuditDailyAsync
            Return MyBase.Channel.InsertAuditDailyAsync(auditSched)
        End Function
        
        Public Function GetAuditDaily(ByVal empID As Integer, ByVal parmDate As Date) As ServiceReference1.WorkplaceAudit() Implements ServiceReference1.IAideService.GetAuditDaily
            Return MyBase.Channel.GetAuditDaily(empID, parmDate)
        End Function
        
        Public Function GetAuditDailyAsync(ByVal empID As Integer, ByVal parmDate As Date) As System.Threading.Tasks.Task(Of ServiceReference1.WorkplaceAudit()) Implements ServiceReference1.IAideService.GetAuditDailyAsync
            Return MyBase.Channel.GetAuditDailyAsync(empID, parmDate)
        End Function
        
        Public Function GetAuditQuestions(ByVal empID As Integer, ByVal questionGroup As String) As ServiceReference1.WorkplaceAudit() Implements ServiceReference1.IAideService.GetAuditQuestions
            Return MyBase.Channel.GetAuditQuestions(empID, questionGroup)
        End Function
        
        Public Function GetAuditQuestionsAsync(ByVal empID As Integer, ByVal questionGroup As String) As System.Threading.Tasks.Task(Of ServiceReference1.WorkplaceAudit()) Implements ServiceReference1.IAideService.GetAuditQuestionsAsync
            Return MyBase.Channel.GetAuditQuestionsAsync(empID, questionGroup)
        End Function
        
        Public Function GetAllContributors(ByVal level As Integer) As ServiceReference1.Contributors() Implements ServiceReference1.IAideService.GetAllContributors
            Return MyBase.Channel.GetAllContributors(level)
        End Function
        
        Public Function GetAllContributorsAsync(ByVal level As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Contributors()) Implements ServiceReference1.IAideService.GetAllContributorsAsync
            Return MyBase.Channel.GetAllContributorsAsync(level)
        End Function
        
        Public Function GetMessage(ByVal msgID As Integer, ByVal secID As Integer) As ServiceReference1.MessageDetail() Implements ServiceReference1.IAideService.GetMessage
            Return MyBase.Channel.GetMessage(msgID, secID)
        End Function
        
        Public Function GetMessageAsync(ByVal msgID As Integer, ByVal secID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.MessageDetail()) Implements ServiceReference1.IAideService.GetMessageAsync
            Return MyBase.Channel.GetMessageAsync(msgID, secID)
        End Function
        
        Public Function GetAllLocation() As ServiceReference1.LocationList() Implements ServiceReference1.IAideService.GetAllLocation
            Return MyBase.Channel.GetAllLocation
        End Function
        
        Public Function GetAllLocationAsync() As System.Threading.Tasks.Task(Of ServiceReference1.LocationList()) Implements ServiceReference1.IAideService.GetAllLocationAsync
            Return MyBase.Channel.GetAllLocationAsync
        End Function
        
        Public Function GetAllPosition() As ServiceReference1.PositionList() Implements ServiceReference1.IAideService.GetAllPosition
            Return MyBase.Channel.GetAllPosition
        End Function
        
        Public Function GetAllPositionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.PositionList()) Implements ServiceReference1.IAideService.GetAllPositionAsync
            Return MyBase.Channel.GetAllPositionAsync
        End Function
        
        Public Function GetAllPermission() As ServiceReference1.PermissionList() Implements ServiceReference1.IAideService.GetAllPermission
            Return MyBase.Channel.GetAllPermission
        End Function
        
        Public Function GetAllPermissionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.PermissionList()) Implements ServiceReference1.IAideService.GetAllPermissionAsync
            Return MyBase.Channel.GetAllPermissionAsync
        End Function
        
        Public Function GetAllDepartment() As ServiceReference1.DepartmentList() Implements ServiceReference1.IAideService.GetAllDepartment
            Return MyBase.Channel.GetAllDepartment
        End Function
        
        Public Function GetAllDepartmentAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DepartmentList()) Implements ServiceReference1.IAideService.GetAllDepartmentAsync
            Return MyBase.Channel.GetAllDepartmentAsync
        End Function
        
        Public Function GetAllDivision() As ServiceReference1.DivisionList() Implements ServiceReference1.IAideService.GetAllDivision
            Return MyBase.Channel.GetAllDivision
        End Function
        
        Public Function GetAllDivisionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.DivisionList()) Implements ServiceReference1.IAideService.GetAllDivisionAsync
            Return MyBase.Channel.GetAllDivisionAsync
        End Function
        
        Public Function GetAllStatus(ByVal statusName As String) As ServiceReference1.StatusList() Implements ServiceReference1.IAideService.GetAllStatus
            Return MyBase.Channel.GetAllStatus(statusName)
        End Function
        
        Public Function GetAllStatusAsync(ByVal statusName As String) As System.Threading.Tasks.Task(Of ServiceReference1.StatusList()) Implements ServiceReference1.IAideService.GetAllStatusAsync
            Return MyBase.Channel.GetAllStatusAsync(statusName)
        End Function
        
        Public Function InsertKPITarget(ByVal kpiTarget As ServiceReference1.KPITargets) As Boolean Implements ServiceReference1.IAideService.InsertKPITarget
            Return MyBase.Channel.InsertKPITarget(kpiTarget)
        End Function
        
        Public Function InsertKPITargetAsync(ByVal kpiTarget As ServiceReference1.KPITargets) As System.Threading.Tasks.Task(Of Boolean) Implements ServiceReference1.IAideService.InsertKPITargetAsync
            Return MyBase.Channel.InsertKPITargetAsync(kpiTarget)
        End Function
        
        Public Function UpdatePITarget(ByVal kpiTarget As ServiceReference1.KPITargets) As Boolean Implements ServiceReference1.IAideService.UpdatePITarget
            Return MyBase.Channel.UpdatePITarget(kpiTarget)
        End Function
        
        Public Function UpdatePITargetAsync(ByVal kpiTarget As ServiceReference1.KPITargets) As System.Threading.Tasks.Task(Of Boolean) Implements ServiceReference1.IAideService.UpdatePITargetAsync
            Return MyBase.Channel.UpdatePITargetAsync(kpiTarget)
        End Function
        
        Public Function GetKPITargets(ByVal Id As Integer) As ServiceReference1.KPITargets() Implements ServiceReference1.IAideService.GetKPITargets
            Return MyBase.Channel.GetKPITargets(Id)
        End Function
        
        Public Function GetKPITargetsAsync(ByVal Id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.KPITargets()) Implements ServiceReference1.IAideService.GetKPITargetsAsync
            Return MyBase.Channel.GetKPITargetsAsync(Id)
        End Function
        
        Public Function GetAllKPITargets(ByVal EmpId As Integer, ByVal FiscalYear As Date) As ServiceReference1.KPITargets() Implements ServiceReference1.IAideService.GetAllKPITargets
            Return MyBase.Channel.GetAllKPITargets(EmpId, FiscalYear)
        End Function
        
        Public Function GetAllKPITargetsAsync(ByVal EmpId As Integer, ByVal FiscalYear As Date) As System.Threading.Tasks.Task(Of ServiceReference1.KPITargets()) Implements ServiceReference1.IAideService.GetAllKPITargetsAsync
            Return MyBase.Channel.GetAllKPITargetsAsync(EmpId, FiscalYear)
        End Function
        
        Public Function InsertKPISummary(ByVal kpi As ServiceReference1.KPISummary) As Boolean Implements ServiceReference1.IAideService.InsertKPISummary
            Return MyBase.Channel.InsertKPISummary(kpi)
        End Function
        
        Public Function InsertKPISummaryAsync(ByVal kpi As ServiceReference1.KPISummary) As System.Threading.Tasks.Task(Of Boolean) Implements ServiceReference1.IAideService.InsertKPISummaryAsync
            Return MyBase.Channel.InsertKPISummaryAsync(kpi)
        End Function
        
        Public Function UpdateKPISummary(ByVal kpi As ServiceReference1.KPISummary) As Boolean Implements ServiceReference1.IAideService.UpdateKPISummary
            Return MyBase.Channel.UpdateKPISummary(kpi)
        End Function
        
        Public Function UpdateKPISummaryAsync(ByVal kpi As ServiceReference1.KPISummary) As System.Threading.Tasks.Task(Of Boolean) Implements ServiceReference1.IAideService.UpdateKPISummaryAsync
            Return MyBase.Channel.UpdateKPISummaryAsync(kpi)
        End Function
        
        Public Function GetKPISummaryList(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date) As ServiceReference1.KPISummary() Implements ServiceReference1.IAideService.GetKPISummaryList
            Return MyBase.Channel.GetKPISummaryList(EmpId, FY_Start, FY_End)
        End Function
        
        Public Function GetKPISummaryListAsync(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date) As System.Threading.Tasks.Task(Of ServiceReference1.KPISummary()) Implements ServiceReference1.IAideService.GetKPISummaryListAsync
            Return MyBase.Channel.GetKPISummaryListAsync(EmpId, FY_Start, FY_End)
        End Function
        
        Public Function GetKPISummaryListMonthly(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date, ByVal Month As Short, ByVal KPIRef As String) As ServiceReference1.KPISummary() Implements ServiceReference1.IAideService.GetKPISummaryListMonthly
            Return MyBase.Channel.GetKPISummaryListMonthly(EmpId, FY_Start, FY_End, Month, KPIRef)
        End Function
        
        Public Function GetKPISummaryListMonthlyAsync(ByVal EmpId As Integer, ByVal FY_Start As Date, ByVal FY_End As Date, ByVal Month As Short, ByVal KPIRef As String) As System.Threading.Tasks.Task(Of ServiceReference1.KPISummary()) Implements ServiceReference1.IAideService.GetKPISummaryListMonthlyAsync
            Return MyBase.Channel.GetKPISummaryListMonthlyAsync(EmpId, FY_Start, FY_End, Month, KPIRef)
        End Function
        
        Public Function GetLessonLearntList(ByVal email As String) As ServiceReference1.LessonLearnt() Implements ServiceReference1.IAideService.GetLessonLearntList
            Return MyBase.Channel.GetLessonLearntList(email)
        End Function
        
        Public Function GetLessonLearntListAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.LessonLearnt()) Implements ServiceReference1.IAideService.GetLessonLearntListAsync
            Return MyBase.Channel.GetLessonLearntListAsync(email)
        End Function
        
        Public Function GetLessonLearntByProblem(ByVal search As String, ByVal email As String) As ServiceReference1.LessonLearnt() Implements ServiceReference1.IAideService.GetLessonLearntByProblem
            Return MyBase.Channel.GetLessonLearntByProblem(search, email)
        End Function
        
        Public Function GetLessonLearntByProblemAsync(ByVal search As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.LessonLearnt()) Implements ServiceReference1.IAideService.GetLessonLearntByProblemAsync
            Return MyBase.Channel.GetLessonLearntByProblemAsync(search, email)
        End Function
        
        Public Sub CreateLessonLearnt(ByVal lessonLearnt As ServiceReference1.LessonLearnt) Implements ServiceReference1.IAideService.CreateLessonLearnt
            MyBase.Channel.CreateLessonLearnt(lessonLearnt)
        End Sub
        
        Public Function CreateLessonLearntAsync(ByVal lessonLearnt As ServiceReference1.LessonLearnt) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateLessonLearntAsync
            Return MyBase.Channel.CreateLessonLearntAsync(lessonLearnt)
        End Function
        
        Public Sub UpdateLessonLearntInfo(ByVal lesson As ServiceReference1.LessonLearnt) Implements ServiceReference1.IAideService.UpdateLessonLearntInfo
            MyBase.Channel.UpdateLessonLearntInfo(lesson)
        End Sub
        
        Public Function UpdateLessonLearntInfoAsync(ByVal lesson As ServiceReference1.LessonLearnt) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateLessonLearntInfoAsync
            Return MyBase.Channel.UpdateLessonLearntInfoAsync(lesson)
        End Function
        
        Public Sub CreateNewSuccessRegister(ByVal success As ServiceReference1.SuccessRegister) Implements ServiceReference1.IAideService.CreateNewSuccessRegister
            MyBase.Channel.CreateNewSuccessRegister(success)
        End Sub
        
        Public Function CreateNewSuccessRegisterAsync(ByVal success As ServiceReference1.SuccessRegister) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateNewSuccessRegisterAsync
            Return MyBase.Channel.CreateNewSuccessRegisterAsync(success)
        End Function
        
        Public Function ViewSuccessRegisterByEmpID(ByVal email As String) As ServiceReference1.SuccessRegister() Implements ServiceReference1.IAideService.ViewSuccessRegisterByEmpID
            Return MyBase.Channel.ViewSuccessRegisterByEmpID(email)
        End Function
        
        Public Function ViewSuccessRegisterByEmpIDAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister()) Implements ServiceReference1.IAideService.ViewSuccessRegisterByEmpIDAsync
            Return MyBase.Channel.ViewSuccessRegisterByEmpIDAsync(email)
        End Function
        
        Public Function ViewSuccessRegisterBySearch(ByVal input As String, ByVal email As String) As ServiceReference1.SuccessRegister() Implements ServiceReference1.IAideService.ViewSuccessRegisterBySearch
            Return MyBase.Channel.ViewSuccessRegisterBySearch(input, email)
        End Function
        
        Public Function ViewSuccessRegisterBySearchAsync(ByVal input As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister()) Implements ServiceReference1.IAideService.ViewSuccessRegisterBySearchAsync
            Return MyBase.Channel.ViewSuccessRegisterBySearchAsync(input, email)
        End Function
        
        Public Function ViewSuccessRegisterAll(ByVal email As String) As ServiceReference1.SuccessRegister() Implements ServiceReference1.IAideService.ViewSuccessRegisterAll
            Return MyBase.Channel.ViewSuccessRegisterAll(email)
        End Function
        
        Public Function ViewSuccessRegisterAllAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.SuccessRegister()) Implements ServiceReference1.IAideService.ViewSuccessRegisterAllAsync
            Return MyBase.Channel.ViewSuccessRegisterAllAsync(email)
        End Function
        
        Public Function ViewNicknameByDeptID(ByVal email As String, ByVal toDisplay As Integer) As ServiceReference1.Nickname() Implements ServiceReference1.IAideService.ViewNicknameByDeptID
            Return MyBase.Channel.ViewNicknameByDeptID(email, toDisplay)
        End Function
        
        Public Function ViewNicknameByDeptIDAsync(ByVal email As String, ByVal toDisplay As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname()) Implements ServiceReference1.IAideService.ViewNicknameByDeptIDAsync
            Return MyBase.Channel.ViewNicknameByDeptIDAsync(email, toDisplay)
        End Function
        
        Public Sub UpdateSuccessRegisterByEmpID(ByVal success As ServiceReference1.SuccessRegister) Implements ServiceReference1.IAideService.UpdateSuccessRegisterByEmpID
            MyBase.Channel.UpdateSuccessRegisterByEmpID(success)
        End Sub
        
        Public Function UpdateSuccessRegisterByEmpIDAsync(ByVal success As ServiceReference1.SuccessRegister) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateSuccessRegisterByEmpIDAsync
            Return MyBase.Channel.UpdateSuccessRegisterByEmpIDAsync(success)
        End Function
        
        Public Sub DeleteSuccessRegisterBySuccessID(ByVal successID As Integer) Implements ServiceReference1.IAideService.DeleteSuccessRegisterBySuccessID
            MyBase.Channel.DeleteSuccessRegisterBySuccessID(successID)
        End Sub
        
        Public Function DeleteSuccessRegisterBySuccessIDAsync(ByVal successID As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.DeleteSuccessRegisterBySuccessIDAsync
            Return MyBase.Channel.DeleteSuccessRegisterBySuccessIDAsync(successID)
        End Function
        
        Public Function SignOn(ByVal emailAddress As String) As ServiceReference1.Profile Implements ServiceReference1.IAideService.SignOn
            Return MyBase.Channel.SignOn(emailAddress)
        End Function
        
        Public Function SignOnAsync(ByVal emailAddress As String) As System.Threading.Tasks.Task(Of ServiceReference1.Profile) Implements ServiceReference1.IAideService.SignOnAsync
            Return MyBase.Channel.SignOnAsync(emailAddress)
        End Function
        
        Public Function SignOff(ByVal EmployeeName As String) As Integer Implements ServiceReference1.IAideService.SignOff
            Return MyBase.Channel.SignOff(EmployeeName)
        End Function
        
        Public Function SignOffAsync(ByVal EmployeeName As String) As System.Threading.Tasks.Task(Of Integer) Implements ServiceReference1.IAideService.SignOffAsync
            Return MyBase.Channel.SignOffAsync(EmployeeName)
        End Function
        
        Public Function ViewContactListAll(ByVal empID As Integer, ByVal selection As Integer) As ServiceReference1.ContactList() Implements ServiceReference1.IAideService.ViewContactListAll
            Return MyBase.Channel.ViewContactListAll(empID, selection)
        End Function
        
        Public Function ViewContactListAllAsync(ByVal empID As Integer, ByVal selection As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ContactList()) Implements ServiceReference1.IAideService.ViewContactListAllAsync
            Return MyBase.Channel.ViewContactListAllAsync(empID, selection)
        End Function
        
        Public Sub UpdateContactListByEmpID(ByVal contact As ServiceReference1.ContactList, ByVal selection As Integer) Implements ServiceReference1.IAideService.UpdateContactListByEmpID
            MyBase.Channel.UpdateContactListByEmpID(contact, selection)
        End Sub
        
        Public Function UpdateContactListByEmpIDAsync(ByVal contact As ServiceReference1.ContactList, ByVal selection As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateContactListByEmpIDAsync
            Return MyBase.Channel.UpdateContactListByEmpIDAsync(contact, selection)
        End Function
        
        Public Sub CreateNewContactByEmpID(ByVal contact As ServiceReference1.ContactList) Implements ServiceReference1.IAideService.CreateNewContactByEmpID
            MyBase.Channel.CreateNewContactByEmpID(contact)
        End Sub
        
        Public Function CreateNewContactByEmpIDAsync(ByVal contact As ServiceReference1.ContactList) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateNewContactByEmpIDAsync
            Return MyBase.Channel.CreateNewContactByEmpIDAsync(contact)
        End Function
        
        Public Function ViewBirthdayListAll(ByVal email As String) As ServiceReference1.BirthdayList() Implements ServiceReference1.IAideService.ViewBirthdayListAll
            Return MyBase.Channel.ViewBirthdayListAll(email)
        End Function
        
        Public Function ViewBirthdayListAllAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList()) Implements ServiceReference1.IAideService.ViewBirthdayListAllAsync
            Return MyBase.Channel.ViewBirthdayListAllAsync(email)
        End Function
        
        Public Function ViewBirthdayListByCurrentMonth(ByVal email As String) As ServiceReference1.BirthdayList() Implements ServiceReference1.IAideService.ViewBirthdayListByCurrentMonth
            Return MyBase.Channel.ViewBirthdayListByCurrentMonth(email)
        End Function
        
        Public Function ViewBirthdayListByCurrentMonthAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList()) Implements ServiceReference1.IAideService.ViewBirthdayListByCurrentMonthAsync
            Return MyBase.Channel.ViewBirthdayListByCurrentMonthAsync(email)
        End Function
        
        Public Function ViewBirthdayListByCurrentDay(ByVal email As String) As ServiceReference1.BirthdayList() Implements ServiceReference1.IAideService.ViewBirthdayListByCurrentDay
            Return MyBase.Channel.ViewBirthdayListByCurrentDay(email)
        End Function
        
        Public Function ViewBirthdayListByCurrentDayAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.BirthdayList()) Implements ServiceReference1.IAideService.ViewBirthdayListByCurrentDayAsync
            Return MyBase.Channel.ViewBirthdayListByCurrentDayAsync(email)
        End Function
        
        Public Function selectAllConcern(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.selectAllConcern
            Return MyBase.Channel.selectAllConcern(email, offsetVal, nextVal)
        End Function
        
        Public Function selectAllConcernAsync(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.selectAllConcernAsync
            Return MyBase.Channel.selectAllConcernAsync(email, offsetVal, nextVal)
        End Function
        
        Public Sub InsertIntoConcern(ByVal concern As ServiceReference1.Concern, ByVal email As String) Implements ServiceReference1.IAideService.InsertIntoConcern
            MyBase.Channel.InsertIntoConcern(concern, email)
        End Sub
        
        Public Function InsertIntoConcernAsync(ByVal concern As ServiceReference1.Concern, ByVal email As String) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertIntoConcernAsync
            Return MyBase.Channel.InsertIntoConcernAsync(concern, email)
        End Function
        
        Public Function GetGeneratedRefNo() As ServiceReference1.Concern Implements ServiceReference1.IAideService.GetGeneratedRefNo
            Return MyBase.Channel.GetGeneratedRefNo
        End Function
        
        Public Function GetGeneratedRefNoAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Concern) Implements ServiceReference1.IAideService.GetGeneratedRefNoAsync
            Return MyBase.Channel.GetGeneratedRefNoAsync
        End Function
        
        Public Function GetResultSearch(ByVal email As String, ByVal searchKeyWord As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.GetResultSearch
            Return MyBase.Channel.GetResultSearch(email, searchKeyWord, offsetVal, nextVal)
        End Function
        
        Public Function GetResultSearchAsync(ByVal email As String, ByVal searchKeyWord As String, ByVal offsetVal As Integer, ByVal nextVal As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.GetResultSearchAsync
            Return MyBase.Channel.GetResultSearchAsync(email, searchKeyWord, offsetVal, nextVal)
        End Function
        
        Public Function GetListOfACtion(ByVal Ref_id As String, ByVal email As String) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.GetListOfACtion
            Return MyBase.Channel.GetListOfACtion(Ref_id, email)
        End Function
        
        Public Function GetListOfACtionAsync(ByVal Ref_id As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.GetListOfACtionAsync
            Return MyBase.Channel.GetListOfACtionAsync(Ref_id, email)
        End Function
        
        Public Function GetListOfACtionsReferences(ByVal Ref_id As String) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.GetListOfACtionsReferences
            Return MyBase.Channel.GetListOfACtionsReferences(Ref_id)
        End Function
        
        Public Function GetListOfACtionsReferencesAsync(ByVal Ref_id As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.GetListOfACtionsReferencesAsync
            Return MyBase.Channel.GetListOfACtionsReferencesAsync(Ref_id)
        End Function
        
        Public Sub insertAndDeleteSelectedAction(ByVal concern As ServiceReference1.Concern) Implements ServiceReference1.IAideService.insertAndDeleteSelectedAction
            MyBase.Channel.insertAndDeleteSelectedAction(concern)
        End Sub
        
        Public Function insertAndDeleteSelectedActionAsync(ByVal concern As ServiceReference1.Concern) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.insertAndDeleteSelectedActionAsync
            Return MyBase.Channel.insertAndDeleteSelectedActionAsync(concern)
        End Function
        
        Public Sub UpdateSelectedConcern(ByVal concern As ServiceReference1.Concern) Implements ServiceReference1.IAideService.UpdateSelectedConcern
            MyBase.Channel.UpdateSelectedConcern(concern)
        End Sub
        
        Public Function UpdateSelectedConcernAsync(ByVal concern As ServiceReference1.Concern) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateSelectedConcernAsync
            Return MyBase.Channel.UpdateSelectedConcernAsync(concern)
        End Function
        
        Public Function GetBetweenSearchConcern(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer, ByVal date1 As Date, ByVal date2 As Date) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.GetBetweenSearchConcern
            Return MyBase.Channel.GetBetweenSearchConcern(email, offsetVal, nextVal, date1, date2)
        End Function
        
        Public Function GetBetweenSearchConcernAsync(ByVal email As String, ByVal offsetVal As Integer, ByVal nextVal As Integer, ByVal date1 As Date, ByVal date2 As Date) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.GetBetweenSearchConcernAsync
            Return MyBase.Channel.GetBetweenSearchConcernAsync(email, offsetVal, nextVal, date1, date2)
        End Function
        
        Public Function GetSearchAction(ByVal _keywordAction As String, ByVal Ref_id As String, ByVal email As String) As ServiceReference1.Concern() Implements ServiceReference1.IAideService.GetSearchAction
            Return MyBase.Channel.GetSearchAction(_keywordAction, Ref_id, email)
        End Function
        
        Public Function GetSearchActionAsync(ByVal _keywordAction As String, ByVal Ref_id As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Concern()) Implements ServiceReference1.IAideService.GetSearchActionAsync
            Return MyBase.Channel.GetSearchActionAsync(_keywordAction, Ref_id, email)
        End Function
        
        Public Function GetSkillsList(ByVal empID As Integer) As ServiceReference1.Skills() Implements ServiceReference1.IAideService.GetSkillsList
            Return MyBase.Channel.GetSkillsList(empID)
        End Function
        
        Public Function GetSkillsListAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills()) Implements ServiceReference1.IAideService.GetSkillsListAsync
            Return MyBase.Channel.GetSkillsListAsync(empID)
        End Function
        
        Public Sub InsertNewSkills(ByVal skills As ServiceReference1.Skills) Implements ServiceReference1.IAideService.InsertNewSkills
            MyBase.Channel.InsertNewSkills(skills)
        End Sub
        
        Public Function InsertNewSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertNewSkillsAsync
            Return MyBase.Channel.InsertNewSkillsAsync(skills)
        End Function
        
        Public Sub UpdateSkills(ByVal skills As ServiceReference1.Skills) Implements ServiceReference1.IAideService.UpdateSkills
            MyBase.Channel.UpdateSkills(skills)
        End Sub
        
        Public Function UpdateSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateSkillsAsync
            Return MyBase.Channel.UpdateSkillsAsync(skills)
        End Function
        
        Public Sub UpdateAllSkills(ByVal skills As ServiceReference1.Skills) Implements ServiceReference1.IAideService.UpdateAllSkills
            MyBase.Channel.UpdateAllSkills(skills)
        End Sub
        
        Public Function UpdateAllSkillsAsync(ByVal skills As ServiceReference1.Skills) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAllSkillsAsync
            Return MyBase.Channel.UpdateAllSkillsAsync(skills)
        End Function
        
        Public Function ViewEmpSKills(ByVal empID As Integer) As ServiceReference1.Skills() Implements ServiceReference1.IAideService.ViewEmpSKills
            Return MyBase.Channel.ViewEmpSKills(empID)
        End Function
        
        Public Function ViewEmpSKillsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills()) Implements ServiceReference1.IAideService.ViewEmpSKillsAsync
            Return MyBase.Channel.ViewEmpSKillsAsync(empID)
        End Function
        
        Public Function GetProfLvlByEmpIDSkillIDs(ByVal empID As Integer, ByVal skillID As Integer) As ServiceReference1.Skills Implements ServiceReference1.IAideService.GetProfLvlByEmpIDSkillIDs
            Return MyBase.Channel.GetProfLvlByEmpIDSkillIDs(empID, skillID)
        End Function
        
        Public Function GetProfLvlByEmpIDSkillIDsAsync(ByVal empID As Integer, ByVal skillID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills) Implements ServiceReference1.IAideService.GetProfLvlByEmpIDSkillIDsAsync
            Return MyBase.Channel.GetProfLvlByEmpIDSkillIDsAsync(empID, skillID)
        End Function
        
        Public Function GetSkillsProfByEmpID(ByVal id As Integer) As ServiceReference1.Skills() Implements ServiceReference1.IAideService.GetSkillsProfByEmpID
            Return MyBase.Channel.GetSkillsProfByEmpID(id)
        End Function
        
        Public Function GetSkillsProfByEmpIDAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills()) Implements ServiceReference1.IAideService.GetSkillsProfByEmpIDAsync
            Return MyBase.Channel.GetSkillsProfByEmpIDAsync(id)
        End Function
        
        Public Function GetSkillsLastReviewByEmpIDSkillID(ByVal empID As Integer, ByVal skillID As Integer) As ServiceReference1.Skills Implements ServiceReference1.IAideService.GetSkillsLastReviewByEmpIDSkillID
            Return MyBase.Channel.GetSkillsLastReviewByEmpIDSkillID(empID, skillID)
        End Function
        
        Public Function GetSkillsLastReviewByEmpIDSkillIDAsync(ByVal empID As Integer, ByVal skillID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Skills) Implements ServiceReference1.IAideService.GetSkillsLastReviewByEmpIDSkillIDAsync
            Return MyBase.Channel.GetSkillsLastReviewByEmpIDSkillIDAsync(empID, skillID)
        End Function
        
        Public Sub UpdateResourcePlanner(ByVal resource As ServiceReference1.ResourcePlanner) Implements ServiceReference1.IAideService.UpdateResourcePlanner
            MyBase.Channel.UpdateResourcePlanner(resource)
        End Sub
        
        Public Function UpdateResourcePlannerAsync(ByVal resource As ServiceReference1.ResourcePlanner) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateResourcePlannerAsync
            Return MyBase.Channel.UpdateResourcePlannerAsync(resource)
        End Function
        
        Public Sub InsertResourcePlanner(ByVal resource As ServiceReference1.ResourcePlanner) Implements ServiceReference1.IAideService.InsertResourcePlanner
            MyBase.Channel.InsertResourcePlanner(resource)
        End Sub
        
        Public Function InsertResourcePlannerAsync(ByVal resource As ServiceReference1.ResourcePlanner) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertResourcePlannerAsync
            Return MyBase.Channel.InsertResourcePlannerAsync(resource)
        End Function
        
        Public Function ViewEmpResourcePlanner(ByVal email As String) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.ViewEmpResourcePlanner
            Return MyBase.Channel.ViewEmpResourcePlanner(email)
        End Function
        
        Public Function ViewEmpResourcePlannerAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.ViewEmpResourcePlannerAsync
            Return MyBase.Channel.ViewEmpResourcePlannerAsync(email)
        End Function
        
        Public Function GetStatusResourcePlanner(ByVal empID As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetStatusResourcePlanner
            Return MyBase.Channel.GetStatusResourcePlanner(empID)
        End Function
        
        Public Function GetStatusResourcePlannerAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetStatusResourcePlannerAsync
            Return MyBase.Channel.GetStatusResourcePlannerAsync(empID)
        End Function
        
        Public Function GetResourcePlannerByEmpID(ByVal empID As Integer, ByVal deptID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetResourcePlannerByEmpID
            Return MyBase.Channel.GetResourcePlannerByEmpID(empID, deptID, month, year)
        End Function
        
        Public Function GetResourcePlannerByEmpIDAsync(ByVal empID As Integer, ByVal deptID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetResourcePlannerByEmpIDAsync
            Return MyBase.Channel.GetResourcePlannerByEmpIDAsync(empID, deptID, month, year)
        End Function
        
        Public Function GetAllEmpResourcePlanner(ByVal email As String, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetAllEmpResourcePlanner
            Return MyBase.Channel.GetAllEmpResourcePlanner(email, month, year)
        End Function
        
        Public Function GetAllEmpResourcePlannerAsync(ByVal email As String, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetAllEmpResourcePlannerAsync
            Return MyBase.Channel.GetAllEmpResourcePlannerAsync(email, month, year)
        End Function
        
        Public Function GetAllEmpResourcePlannerByStatus(ByVal email As String, ByVal month As Integer, ByVal year As Integer, ByVal status As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetAllEmpResourcePlannerByStatus
            Return MyBase.Channel.GetAllEmpResourcePlannerByStatus(email, month, year, status)
        End Function
        
        Public Function GetAllEmpResourcePlannerByStatusAsync(ByVal email As String, ByVal month As Integer, ByVal year As Integer, ByVal status As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetAllEmpResourcePlannerByStatusAsync
            Return MyBase.Channel.GetAllEmpResourcePlannerByStatusAsync(email, month, year, status)
        End Function
        
        Public Function GetAllStatusResourcePlanner() As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetAllStatusResourcePlanner
            Return MyBase.Channel.GetAllStatusResourcePlanner
        End Function
        
        Public Function GetAllStatusResourcePlannerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetAllStatusResourcePlannerAsync
            Return MyBase.Channel.GetAllStatusResourcePlannerAsync
        End Function
        
        Public Function GetResourcePlanner(ByVal email As String, ByVal status As Integer, ByVal toBeDisplayed As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetResourcePlanner
            Return MyBase.Channel.GetResourcePlanner(email, status, toBeDisplayed, year)
        End Function
        
        Public Function GetResourcePlannerAsync(ByVal email As String, ByVal status As Integer, ByVal toBeDisplayed As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetResourcePlannerAsync
            Return MyBase.Channel.GetResourcePlannerAsync(email, status, toBeDisplayed, year)
        End Function
        
        Public Function GetNonBillableHours(ByVal email As String, ByVal display As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetNonBillableHours
            Return MyBase.Channel.GetNonBillableHours(email, display, month, year)
        End Function
        
        Public Function GetNonBillableHoursAsync(ByVal email As String, ByVal display As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetNonBillableHoursAsync
            Return MyBase.Channel.GetNonBillableHoursAsync(email, display, month, year)
        End Function
        
        Public Function GetAllLeavesByEmployee(ByVal empID As Integer, ByVal leaveType As Integer, ByVal statusCode As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetAllLeavesByEmployee
            Return MyBase.Channel.GetAllLeavesByEmployee(empID, leaveType, statusCode)
        End Function
        
        Public Function GetAllLeavesByEmployeeAsync(ByVal empID As Integer, ByVal leaveType As Integer, ByVal statusCode As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetAllLeavesByEmployeeAsync
            Return MyBase.Channel.GetAllLeavesByEmployeeAsync(empID, leaveType, statusCode)
        End Function
        
        Public Function GetAllLeavesHistoryByEmployee(ByVal empID As Integer, ByVal leaveType As Integer) As ServiceReference1.ResourcePlanner() Implements ServiceReference1.IAideService.GetAllLeavesHistoryByEmployee
            Return MyBase.Channel.GetAllLeavesHistoryByEmployee(empID, leaveType)
        End Function
        
        Public Function GetAllLeavesHistoryByEmployeeAsync(ByVal empID As Integer, ByVal leaveType As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ResourcePlanner()) Implements ServiceReference1.IAideService.GetAllLeavesHistoryByEmployeeAsync
            Return MyBase.Channel.GetAllLeavesHistoryByEmployeeAsync(empID, leaveType)
        End Function
        
        Public Sub UpdateLeaves(ByVal resource As ServiceReference1.ResourcePlanner, ByVal statusCD As Integer, ByVal leaveType As Integer) Implements ServiceReference1.IAideService.UpdateLeaves
            MyBase.Channel.UpdateLeaves(resource, statusCD, leaveType)
        End Sub
        
        Public Function UpdateLeavesAsync(ByVal resource As ServiceReference1.ResourcePlanner, ByVal statusCD As Integer, ByVal leaveType As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateLeavesAsync
            Return MyBase.Channel.UpdateLeavesAsync(resource, statusCD, leaveType)
        End Function
        
        Public Sub InsertAnnouncements(ByVal announcements As ServiceReference1.Announcements) Implements ServiceReference1.IAideService.InsertAnnouncements
            MyBase.Channel.InsertAnnouncements(announcements)
        End Sub
        
        Public Function InsertAnnouncementsAsync(ByVal announcements As ServiceReference1.Announcements) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAnnouncementsAsync
            Return MyBase.Channel.InsertAnnouncementsAsync(announcements)
        End Function
        
        Public Function GetAnnouncements(ByVal empID As Integer) As ServiceReference1.Announcements() Implements ServiceReference1.IAideService.GetAnnouncements
            Return MyBase.Channel.GetAnnouncements(empID)
        End Function
        
        Public Function GetAnnouncementsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Announcements()) Implements ServiceReference1.IAideService.GetAnnouncementsAsync
            Return MyBase.Channel.GetAnnouncementsAsync(empID)
        End Function
        
        Public Sub UpdateAnnouncements(ByVal announcements As ServiceReference1.Announcements) Implements ServiceReference1.IAideService.UpdateAnnouncements
            MyBase.Channel.UpdateAnnouncements(announcements)
        End Sub
        
        Public Function UpdateAnnouncementsAsync(ByVal announcements As ServiceReference1.Announcements) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAnnouncementsAsync
            Return MyBase.Channel.UpdateAnnouncementsAsync(announcements)
        End Function
        
        Public Function GetLate(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal toDisplay As Integer) As ServiceReference1.Late() Implements ServiceReference1.IAideService.GetLate
            Return MyBase.Channel.GetLate(empID, month, year, toDisplay)
        End Function
        
        Public Function GetLateAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal toDisplay As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Late()) Implements ServiceReference1.IAideService.GetLateAsync
            Return MyBase.Channel.GetLateAsync(empID, month, year, toDisplay)
        End Function
        
        Public Function GetAllSabaCourses(ByVal empID As Integer) As ServiceReference1.SabaLearning() Implements ServiceReference1.IAideService.GetAllSabaCourses
            Return MyBase.Channel.GetAllSabaCourses(empID)
        End Function
        
        Public Function GetAllSabaCoursesAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning()) Implements ServiceReference1.IAideService.GetAllSabaCoursesAsync
            Return MyBase.Channel.GetAllSabaCoursesAsync(empID)
        End Function
        
        Public Function GetAllSabaXref(ByVal empID As Integer, ByVal sabaID As Integer) As ServiceReference1.SabaLearning() Implements ServiceReference1.IAideService.GetAllSabaXref
            Return MyBase.Channel.GetAllSabaXref(empID, sabaID)
        End Function
        
        Public Function GetAllSabaXrefAsync(ByVal empID As Integer, ByVal sabaID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning()) Implements ServiceReference1.IAideService.GetAllSabaXrefAsync
            Return MyBase.Channel.GetAllSabaXrefAsync(empID, sabaID)
        End Function
        
        Public Sub InsertSabaCourses(ByVal obj As ServiceReference1.SabaLearning) Implements ServiceReference1.IAideService.InsertSabaCourses
            MyBase.Channel.InsertSabaCourses(obj)
        End Sub
        
        Public Function InsertSabaCoursesAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertSabaCoursesAsync
            Return MyBase.Channel.InsertSabaCoursesAsync(obj)
        End Function
        
        Public Sub UpdateSabaCourses(ByVal obj As ServiceReference1.SabaLearning) Implements ServiceReference1.IAideService.UpdateSabaCourses
            MyBase.Channel.UpdateSabaCourses(obj)
        End Sub
        
        Public Function UpdateSabaCoursesAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateSabaCoursesAsync
            Return MyBase.Channel.UpdateSabaCoursesAsync(obj)
        End Function
        
        Public Sub UpdateSabaXref(ByVal obj As ServiceReference1.SabaLearning) Implements ServiceReference1.IAideService.UpdateSabaXref
            MyBase.Channel.UpdateSabaXref(obj)
        End Sub
        
        Public Function UpdateSabaXrefAsync(ByVal obj As ServiceReference1.SabaLearning) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateSabaXrefAsync
            Return MyBase.Channel.UpdateSabaXrefAsync(obj)
        End Function
        
        Public Function GetAllSabaCourseByTitle(ByVal message As String, ByVal empID As Integer) As ServiceReference1.SabaLearning() Implements ServiceReference1.IAideService.GetAllSabaCourseByTitle
            Return MyBase.Channel.GetAllSabaCourseByTitle(message, empID)
        End Function
        
        Public Function GetAllSabaCourseByTitleAsync(ByVal message As String, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.SabaLearning()) Implements ServiceReference1.IAideService.GetAllSabaCourseByTitleAsync
            Return MyBase.Channel.GetAllSabaCourseByTitleAsync(message, empID)
        End Function
        
        Public Sub InsertComcellMeeting(ByVal comcell As ServiceReference1.Comcell) Implements ServiceReference1.IAideService.InsertComcellMeeting
            MyBase.Channel.InsertComcellMeeting(comcell)
        End Sub
        
        Public Function InsertComcellMeetingAsync(ByVal comcell As ServiceReference1.Comcell) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertComcellMeetingAsync
            Return MyBase.Channel.InsertComcellMeetingAsync(comcell)
        End Function
        
        Public Function GetComcellMeeting(ByVal empID As Integer, ByVal year As Integer) As ServiceReference1.Comcell() Implements ServiceReference1.IAideService.GetComcellMeeting
            Return MyBase.Channel.GetComcellMeeting(empID, year)
        End Function
        
        Public Function GetComcellMeetingAsync(ByVal empID As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Comcell()) Implements ServiceReference1.IAideService.GetComcellMeetingAsync
            Return MyBase.Channel.GetComcellMeetingAsync(empID, year)
        End Function
        
        Public Sub UpdateComcellMeeting(ByVal comcell As ServiceReference1.Comcell) Implements ServiceReference1.IAideService.UpdateComcellMeeting
            MyBase.Channel.UpdateComcellMeeting(comcell)
        End Sub
        
        Public Function UpdateComcellMeetingAsync(ByVal comcell As ServiceReference1.Comcell) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateComcellMeetingAsync
            Return MyBase.Channel.UpdateComcellMeetingAsync(comcell)
        End Function
        
        Public Function GetClockTimeByEmployee(ByVal empid As Integer) As ServiceReference1.ComcellClock Implements ServiceReference1.IAideService.GetClockTimeByEmployee
            Return MyBase.Channel.GetClockTimeByEmployee(empid)
        End Function
        
        Public Function GetClockTimeByEmployeeAsync(ByVal empid As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ComcellClock) Implements ServiceReference1.IAideService.GetClockTimeByEmployeeAsync
            Return MyBase.Channel.GetClockTimeByEmployeeAsync(empid)
        End Function
        
        Public Sub InsertActionList(ByVal _Action As ServiceReference1.Action) Implements ServiceReference1.IAideService.InsertActionList
            MyBase.Channel.InsertActionList(_Action)
        End Sub
        
        Public Function InsertActionListAsync(ByVal _Action As ServiceReference1.Action) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertActionListAsync
            Return MyBase.Channel.InsertActionListAsync(_Action)
        End Function
        
        Public Function GetActionListByMessage(ByVal _Message As String, ByVal email As String) As ServiceReference1.Action() Implements ServiceReference1.IAideService.GetActionListByMessage
            Return MyBase.Channel.GetActionListByMessage(_Message, email)
        End Function
        
        Public Function GetActionListByMessageAsync(ByVal _Message As String, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Action()) Implements ServiceReference1.IAideService.GetActionListByMessageAsync
            Return MyBase.Channel.GetActionListByMessageAsync(_Message, email)
        End Function
        
        Public Function GetActionListByActionNo(ByVal actionNo As String, ByVal empID As Integer) As ServiceReference1.Action() Implements ServiceReference1.IAideService.GetActionListByActionNo
            Return MyBase.Channel.GetActionListByActionNo(actionNo, empID)
        End Function
        
        Public Function GetActionListByActionNoAsync(ByVal actionNo As String, ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Action()) Implements ServiceReference1.IAideService.GetActionListByActionNoAsync
            Return MyBase.Channel.GetActionListByActionNoAsync(actionNo, empID)
        End Function
        
        Public Function GetActionSummary(ByVal email As String) As ServiceReference1.Action() Implements ServiceReference1.IAideService.GetActionSummary
            Return MyBase.Channel.GetActionSummary(email)
        End Function
        
        Public Function GetActionSummaryAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Action()) Implements ServiceReference1.IAideService.GetActionSummaryAsync
            Return MyBase.Channel.GetActionSummaryAsync(email)
        End Function
        
        Public Function GetLessonLearntListOfActionSummary(ByVal empID As Integer) As ServiceReference1.Action() Implements ServiceReference1.IAideService.GetLessonLearntListOfActionSummary
            Return MyBase.Channel.GetLessonLearntListOfActionSummary(empID)
        End Function
        
        Public Function GetLessonLearntListOfActionSummaryAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Action()) Implements ServiceReference1.IAideService.GetLessonLearntListOfActionSummaryAsync
            Return MyBase.Channel.GetLessonLearntListOfActionSummaryAsync(empID)
        End Function
        
        Public Sub UpdateActionList(ByVal _Action As ServiceReference1.Action) Implements ServiceReference1.IAideService.UpdateActionList
            MyBase.Channel.UpdateActionList(_Action)
        End Sub
        
        Public Function UpdateActionListAsync(ByVal _Action As ServiceReference1.Action) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateActionListAsync
            Return MyBase.Channel.UpdateActionListAsync(_Action)
        End Function
        
        Public Function GetMyAttendance(ByVal EmpId As Integer, ByVal WeekOf As Date) As ServiceReference1.MyAttendance Implements ServiceReference1.IAideService.GetMyAttendance
            Return MyBase.Channel.GetMyAttendance(EmpId, WeekOf)
        End Function
        
        Public Function GetMyAttendanceAsync(ByVal EmpId As Integer, ByVal WeekOf As Date) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance) Implements ServiceReference1.IAideService.GetMyAttendanceAsync
            Return MyBase.Channel.GetMyAttendanceAsync(EmpId, WeekOf)
        End Function
        
        Public Function GetAttendanceSummary(ByVal Month As Integer, ByVal Year As Integer) As ServiceReference1.AttendanceSummary() Implements ServiceReference1.IAideService.GetAttendanceSummary
            Return MyBase.Channel.GetAttendanceSummary(Month, Year)
        End Function
        
        Public Function GetAttendanceSummaryAsync(ByVal Month As Integer, ByVal Year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AttendanceSummary()) Implements ServiceReference1.IAideService.GetAttendanceSummaryAsync
            Return MyBase.Channel.GetAttendanceSummaryAsync(Month, Year)
        End Function
        
        Public Sub UpdateAttendance(ByVal _Attendance As ServiceReference1.AttendanceSummary) Implements ServiceReference1.IAideService.UpdateAttendance
            MyBase.Channel.UpdateAttendance(_Attendance)
        End Sub
        
        Public Function UpdateAttendanceAsync(ByVal _Attendance As ServiceReference1.AttendanceSummary) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAttendanceAsync
            Return MyBase.Channel.UpdateAttendanceAsync(_Attendance)
        End Function
        
        Public Sub UpdateAttendance2(ByVal empid As Integer, ByVal day As Integer, ByVal attstatus As Integer) Implements ServiceReference1.IAideService.UpdateAttendance2
            MyBase.Channel.UpdateAttendance2(empid, day, attstatus)
        End Sub
        
        Public Function UpdateAttendance2Async(ByVal empid As Integer, ByVal day As Integer, ByVal attstatus As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAttendance2Async
            Return MyBase.Channel.UpdateAttendance2Async(empid, day, attstatus)
        End Function
        
        Public Sub InsertAttendance(ByVal _Attendance As ServiceReference1.AttendanceSummary) Implements ServiceReference1.IAideService.InsertAttendance
            MyBase.Channel.InsertAttendance(_Attendance)
        End Sub
        
        Public Function InsertAttendanceAsync(ByVal _Attendance As ServiceReference1.AttendanceSummary) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAttendanceAsync
            Return MyBase.Channel.InsertAttendanceAsync(_Attendance)
        End Function
        
        Public Function GetAttendanceToday(ByVal email As String) As ServiceReference1.MyAttendance() Implements ServiceReference1.IAideService.GetAttendanceToday
            Return MyBase.Channel.GetAttendanceToday(email)
        End Function
        
        Public Function GetAttendanceTodayAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance()) Implements ServiceReference1.IAideService.GetAttendanceTodayAsync
            Return MyBase.Channel.GetAttendanceTodayAsync(email)
        End Function
        
        Public Function GetAttendanceTodayBySearch(ByVal email As String, ByVal input As String) As ServiceReference1.MyAttendance() Implements ServiceReference1.IAideService.GetAttendanceTodayBySearch
            Return MyBase.Channel.GetAttendanceTodayBySearch(email, input)
        End Function
        
        Public Function GetAttendanceTodayBySearchAsync(ByVal email As String, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.MyAttendance()) Implements ServiceReference1.IAideService.GetAttendanceTodayBySearchAsync
            Return MyBase.Channel.GetAttendanceTodayBySearchAsync(email, input)
        End Function
        
        Public Function GetBillableHoursByMonth(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As ServiceReference1.BillableHours() Implements ServiceReference1.IAideService.GetBillableHoursByMonth
            Return MyBase.Channel.GetBillableHoursByMonth(empID, month, year, weekID)
        End Function
        
        Public Function GetBillableHoursByMonthAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.BillableHours()) Implements ServiceReference1.IAideService.GetBillableHoursByMonthAsync
            Return MyBase.Channel.GetBillableHoursByMonthAsync(empID, month, year, weekID)
        End Function
        
        Public Function GetBillableHoursByWeek(ByVal empID As Integer, ByVal weekID As Integer) As ServiceReference1.BillableHours() Implements ServiceReference1.IAideService.GetBillableHoursByWeek
            Return MyBase.Channel.GetBillableHoursByWeek(empID, weekID)
        End Function
        
        Public Function GetBillableHoursByWeekAsync(ByVal empID As Integer, ByVal weekID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.BillableHours()) Implements ServiceReference1.IAideService.GetBillableHoursByWeekAsync
            Return MyBase.Channel.GetBillableHoursByWeekAsync(empID, weekID)
        End Function
        
        Public Function GetContactInformation(ByVal Emp_ID As Integer) As ServiceReference1.Contact Implements ServiceReference1.IAideService.GetContactInformation
            Return MyBase.Channel.GetContactInformation(Emp_ID)
        End Function
        
        Public Function GetContactInformationAsync(ByVal Emp_ID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Contact) Implements ServiceReference1.IAideService.GetContactInformationAsync
            Return MyBase.Channel.GetContactInformationAsync(Emp_ID)
        End Function
        
        Public Function GetContactList() As ServiceReference1.Contact() Implements ServiceReference1.IAideService.GetContactList
            Return MyBase.Channel.GetContactList
        End Function
        
        Public Function GetContactListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Contact()) Implements ServiceReference1.IAideService.GetContactListAsync
            Return MyBase.Channel.GetContactListAsync
        End Function
        
        Public Sub UpdateContactInformation(ByVal contact As ServiceReference1.Contact) Implements ServiceReference1.IAideService.UpdateContactInformation
            MyBase.Channel.UpdateContactInformation(contact)
        End Sub
        
        Public Function UpdateContactInformationAsync(ByVal contact As ServiceReference1.Contact) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateContactInformationAsync
            Return MyBase.Channel.UpdateContactInformationAsync(contact)
        End Function
        
        Public Function GetEmployeeList() As ServiceReference1.Employee() Implements ServiceReference1.IAideService.GetEmployeeList
            Return MyBase.Channel.GetEmployeeList
        End Function
        
        Public Function GetEmployeeListAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Employee()) Implements ServiceReference1.IAideService.GetEmployeeListAsync
            Return MyBase.Channel.GetEmployeeListAsync
        End Function
        
        Public Function GetNicknameByDeptID(ByVal email As String) As ServiceReference1.Employee() Implements ServiceReference1.IAideService.GetNicknameByDeptID
            Return MyBase.Channel.GetNicknameByDeptID(email)
        End Function
        
        Public Function GetNicknameByDeptIDAsync(ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.Employee()) Implements ServiceReference1.IAideService.GetNicknameByDeptIDAsync
            Return MyBase.Channel.GetNicknameByDeptIDAsync(email)
        End Function
        
        Public Function GetProfileInformation(ByVal empId As Integer) As ServiceReference1.Profile Implements ServiceReference1.IAideService.GetProfileInformation
            Return MyBase.Channel.GetProfileInformation(empId)
        End Function
        
        Public Function GetProfileInformationAsync(ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Profile) Implements ServiceReference1.IAideService.GetProfileInformationAsync
            Return MyBase.Channel.GetProfileInformationAsync(empId)
        End Function
        
        Public Function GetAllListOfProject(ByVal empID As Integer, ByVal displayStatus As Integer) As ServiceReference1.Project() Implements ServiceReference1.IAideService.GetAllListOfProject
            Return MyBase.Channel.GetAllListOfProject(empID, displayStatus)
        End Function
        
        Public Function GetAllListOfProjectAsync(ByVal empID As Integer, ByVal displayStatus As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project()) Implements ServiceReference1.IAideService.GetAllListOfProjectAsync
            Return MyBase.Channel.GetAllListOfProjectAsync(empID, displayStatus)
        End Function
        
        Public Function GetProjectList(ByVal empID As Integer, ByVal displayStatus As Integer) As ServiceReference1.Project() Implements ServiceReference1.IAideService.GetProjectList
            Return MyBase.Channel.GetProjectList(empID, displayStatus)
        End Function
        
        Public Function GetProjectListAsync(ByVal empID As Integer, ByVal displayStatus As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project()) Implements ServiceReference1.IAideService.GetProjectListAsync
            Return MyBase.Channel.GetProjectListAsync(empID, displayStatus)
        End Function
        
        Public Sub CreateProject(ByVal project As ServiceReference1.Project) Implements ServiceReference1.IAideService.CreateProject
            MyBase.Channel.CreateProject(project)
        End Sub
        
        Public Function CreateProjectAsync(ByVal project As ServiceReference1.Project) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateProjectAsync
            Return MyBase.Channel.CreateProjectAsync(project)
        End Function
        
        Public Sub AssignProject(ByVal Project As ServiceReference1.AssignedProject) Implements ServiceReference1.IAideService.AssignProject
            MyBase.Channel.AssignProject(Project)
        End Sub
        
        Public Function AssignProjectAsync(ByVal Project As ServiceReference1.AssignedProject) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.AssignProjectAsync
            Return MyBase.Channel.AssignProjectAsync(Project)
        End Function
        
        Public Function GetAssignedProjects(ByVal projectId As Integer) As ServiceReference1.AssignedProject() Implements ServiceReference1.IAideService.GetAssignedProjects
            Return MyBase.Channel.GetAssignedProjects(projectId)
        End Function
        
        Public Function GetAssignedProjectsAsync(ByVal projectId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.AssignedProject()) Implements ServiceReference1.IAideService.GetAssignedProjectsAsync
            Return MyBase.Channel.GetAssignedProjectsAsync(projectId)
        End Function
        
        Public Sub DeleteAssignedProject(ByVal EmployeeID As Integer, ByVal ProjectID As Integer) Implements ServiceReference1.IAideService.DeleteAssignedProject
            MyBase.Channel.DeleteAssignedProject(EmployeeID, ProjectID)
        End Sub
        
        Public Function DeleteAssignedProjectAsync(ByVal EmployeeID As Integer, ByVal ProjectID As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.DeleteAssignedProjectAsync
            Return MyBase.Channel.DeleteAssignedProjectAsync(EmployeeID, ProjectID)
        End Function
        
        Public Sub DeleteAllAssignedProject(ByVal ProjectID As Integer) Implements ServiceReference1.IAideService.DeleteAllAssignedProject
            MyBase.Channel.DeleteAllAssignedProject(ProjectID)
        End Sub
        
        Public Function DeleteAllAssignedProjectAsync(ByVal ProjectID As Integer) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.DeleteAllAssignedProjectAsync
            Return MyBase.Channel.DeleteAllAssignedProjectAsync(ProjectID)
        End Function
        
        Public Function GetProjectByID(ByVal projID As Integer) As ServiceReference1.Project Implements ServiceReference1.IAideService.GetProjectByID
            Return MyBase.Channel.GetProjectByID(projID)
        End Function
        
        Public Function GetProjectByIDAsync(ByVal projID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Project) Implements ServiceReference1.IAideService.GetProjectByIDAsync
            Return MyBase.Channel.GetProjectByIDAsync(projID)
        End Function
        
        Public Function ViewProject() As ServiceReference1.ViewProject() Implements ServiceReference1.IAideService.ViewProject
            Return MyBase.Channel.ViewProject
        End Function
        
        Public Function ViewProjectAsync() As System.Threading.Tasks.Task(Of ServiceReference1.ViewProject()) Implements ServiceReference1.IAideService.ViewProjectAsync
            Return MyBase.Channel.ViewProjectAsync
        End Function
        
        Public Sub UpdateProject(ByVal project As ServiceReference1.Project) Implements ServiceReference1.IAideService.UpdateProject
            MyBase.Channel.UpdateProject(project)
        End Sub
        
        Public Function UpdateProjectAsync(ByVal project As ServiceReference1.Project) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateProjectAsync
            Return MyBase.Channel.UpdateProjectAsync(project)
        End Function
        
        Public Sub CreateAssignedProject(ByVal assignProj() As ServiceReference1.AssignedProject) Implements ServiceReference1.IAideService.CreateAssignedProject
            MyBase.Channel.CreateAssignedProject(assignProj)
        End Sub
        
        Public Function CreateAssignedProjectAsync(ByVal assignProj() As ServiceReference1.AssignedProject) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateAssignedProjectAsync
            Return MyBase.Channel.CreateAssignedProjectAsync(assignProj)
        End Function
        
        Public Function ViewProjectListofEmployee(ByVal empID As Integer) As ServiceReference1.ViewProject() Implements ServiceReference1.IAideService.ViewProjectListofEmployee
            Return MyBase.Channel.ViewProjectListofEmployee(empID)
        End Function
        
        Public Function ViewProjectListofEmployeeAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.ViewProject()) Implements ServiceReference1.IAideService.ViewProjectListofEmployeeAsync
            Return MyBase.Channel.ViewProjectListofEmployeeAsync(empID)
        End Function
        
        Public Function GetEmployeePerProject(ByVal empID As Integer, ByVal projID As Integer) As ServiceReference1.Nickname() Implements ServiceReference1.IAideService.GetEmployeePerProject
            Return MyBase.Channel.GetEmployeePerProject(empID, projID)
        End Function
        
        Public Function GetEmployeePerProjectAsync(ByVal empID As Integer, ByVal projID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname()) Implements ServiceReference1.IAideService.GetEmployeePerProjectAsync
            Return MyBase.Channel.GetEmployeePerProjectAsync(empID, projID)
        End Function
        
        Public Function GetStatusList(ByVal groupId As Integer) As ServiceReference1.StatusGroup() Implements ServiceReference1.IAideService.GetStatusList
            Return MyBase.Channel.GetStatusList(groupId)
        End Function
        
        Public Function GetStatusListAsync(ByVal groupId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.StatusGroup()) Implements ServiceReference1.IAideService.GetStatusListAsync
            Return MyBase.Channel.GetStatusListAsync(groupId)
        End Function
        
        Public Sub CreateTask(ByVal task As ServiceReference1.Tasks) Implements ServiceReference1.IAideService.CreateTask
            MyBase.Channel.CreateTask(task)
        End Sub
        
        Public Function CreateTaskAsync(ByVal task As ServiceReference1.Tasks) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.CreateTaskAsync
            Return MyBase.Channel.CreateTaskAsync(task)
        End Function
        
        Public Function ViewTasksByEmployee(ByVal empId As Integer) As ServiceReference1.Tasks() Implements ServiceReference1.IAideService.ViewTasksByEmployee
            Return MyBase.Channel.ViewTasksByEmployee(empId)
        End Function
        
        Public Function ViewTasksByEmployeeAsync(ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Tasks()) Implements ServiceReference1.IAideService.ViewTasksByEmployeeAsync
            Return MyBase.Channel.ViewTasksByEmployeeAsync(empId)
        End Function
        
        Public Function ViewTaskSummary(ByVal Current_Date As Date, ByVal empId As Integer) As ServiceReference1.TaskSummary() Implements ServiceReference1.IAideService.ViewTaskSummary
            Return MyBase.Channel.ViewTaskSummary(Current_Date, empId)
        End Function
        
        Public Function ViewTaskSummaryAsync(ByVal Current_Date As Date, ByVal empId As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary()) Implements ServiceReference1.IAideService.ViewTaskSummaryAsync
            Return MyBase.Channel.ViewTaskSummaryAsync(Current_Date, empId)
        End Function
        
        Public Function ViewTaskSummaryAll(ByVal Current_Date As Date, ByVal email As String) As ServiceReference1.TaskSummary() Implements ServiceReference1.IAideService.ViewTaskSummaryAll
            Return MyBase.Channel.ViewTaskSummaryAll(Current_Date, email)
        End Function
        
        Public Function ViewTaskSummaryAllAsync(ByVal Current_Date As Date, ByVal email As String) As System.Threading.Tasks.Task(Of ServiceReference1.TaskSummary()) Implements ServiceReference1.IAideService.ViewTaskSummaryAllAsync
            Return MyBase.Channel.ViewTaskSummaryAllAsync(Current_Date, email)
        End Function
        
        Public Sub UpdateTask(ByVal Task As ServiceReference1.Tasks) Implements ServiceReference1.IAideService.UpdateTask
            MyBase.Channel.UpdateTask(Task)
        End Sub
        
        Public Function UpdateTaskAsync(ByVal Task As ServiceReference1.Tasks) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateTaskAsync
            Return MyBase.Channel.UpdateTaskAsync(Task)
        End Function
        
        Public Function GetAllTasks() As ServiceReference1.Tasks() Implements ServiceReference1.IAideService.GetAllTasks
            Return MyBase.Channel.GetAllTasks
        End Function
        
        Public Function GetAllTasksAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Tasks()) Implements ServiceReference1.IAideService.GetAllTasksAsync
            Return MyBase.Channel.GetAllTasksAsync
        End Function
        
        Public Function GetTasksByEmpID(ByVal id As Integer) As ServiceReference1.Tasks() Implements ServiceReference1.IAideService.GetTasksByEmpID
            Return MyBase.Channel.GetTasksByEmpID(id)
        End Function
        
        Public Function GetTasksByEmpIDAsync(ByVal id As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Tasks()) Implements ServiceReference1.IAideService.GetTasksByEmpIDAsync
            Return MyBase.Channel.GetTasksByEmpIDAsync(id)
        End Function
        
        Public Sub InsertCommendations(ByVal task As ServiceReference1.Commendations) Implements ServiceReference1.IAideService.InsertCommendations
            MyBase.Channel.InsertCommendations(task)
        End Sub
        
        Public Function InsertCommendationsAsync(ByVal task As ServiceReference1.Commendations) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertCommendationsAsync
            Return MyBase.Channel.InsertCommendationsAsync(task)
        End Function
        
        Public Function GetCommendations(ByVal empID As Integer) As ServiceReference1.Commendations() Implements ServiceReference1.IAideService.GetCommendations
            Return MyBase.Channel.GetCommendations(empID)
        End Function
        
        Public Function GetCommendationsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Commendations()) Implements ServiceReference1.IAideService.GetCommendationsAsync
            Return MyBase.Channel.GetCommendationsAsync(empID)
        End Function
        
        Public Sub UpdateCommendations(ByVal task As ServiceReference1.Commendations) Implements ServiceReference1.IAideService.UpdateCommendations
            MyBase.Channel.UpdateCommendations(task)
        End Sub
        
        Public Function UpdateCommendationsAsync(ByVal task As ServiceReference1.Commendations) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateCommendationsAsync
            Return MyBase.Channel.UpdateCommendationsAsync(task)
        End Function
        
        Public Function GetCommendationsBySearch(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As ServiceReference1.Commendations() Implements ServiceReference1.IAideService.GetCommendationsBySearch
            Return MyBase.Channel.GetCommendationsBySearch(empID, month, year)
        End Function
        
        Public Function GetCommendationsBySearchAsync(ByVal empID As Integer, ByVal month As Integer, ByVal year As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Commendations()) Implements ServiceReference1.IAideService.GetCommendationsBySearchAsync
            Return MyBase.Channel.GetCommendationsBySearchAsync(empID, month, year)
        End Function
        
        Public Sub InsertAssets(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.InsertAssets
            MyBase.Channel.InsertAssets(assets)
        End Sub
        
        Public Function InsertAssetsAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAssetsAsync
            Return MyBase.Channel.InsertAssetsAsync(assets)
        End Function
        
        Public Function GetAllAssetsByEmpID(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsByEmpID
            Return MyBase.Channel.GetAllAssetsByEmpID(empID)
        End Function
        
        Public Function GetAllAssetsByEmpIDAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsByEmpIDAsync
            Return MyBase.Channel.GetAllAssetsByEmpIDAsync(empID)
        End Function
        
        Public Function GetMyAssets(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetMyAssets
            Return MyBase.Channel.GetMyAssets(empID)
        End Function
        
        Public Function GetMyAssetsAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetMyAssetsAsync
            Return MyBase.Channel.GetMyAssetsAsync(empID)
        End Function
        
        Public Function GetAllAssetsBySearch(ByVal empID As Integer, ByVal input As String) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsBySearch
            Return MyBase.Channel.GetAllAssetsBySearch(empID, input)
        End Function
        
        Public Function GetAllAssetsBySearchAsync(ByVal empID As Integer, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsBySearchAsync
            Return MyBase.Channel.GetAllAssetsBySearchAsync(empID, input)
        End Function
        
        Public Sub UpdateAssets(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.UpdateAssets
            MyBase.Channel.UpdateAssets(assets)
        End Sub
        
        Public Function UpdateAssetsAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAssetsAsync
            Return MyBase.Channel.UpdateAssetsAsync(assets)
        End Function
        
        Public Sub InsertAssetsInventory(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.InsertAssetsInventory
            MyBase.Channel.InsertAssetsInventory(assets)
        End Sub
        
        Public Function InsertAssetsInventoryAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.InsertAssetsInventoryAsync
            Return MyBase.Channel.InsertAssetsInventoryAsync(assets)
        End Function
        
        Public Function GetAllAssetsInventoryByEmpID(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsInventoryByEmpID
            Return MyBase.Channel.GetAllAssetsInventoryByEmpID(empID)
        End Function
        
        Public Function GetAllAssetsInventoryByEmpIDAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsInventoryByEmpIDAsync
            Return MyBase.Channel.GetAllAssetsInventoryByEmpIDAsync(empID)
        End Function
        
        Public Function GetAllAssetsInventoryUnApproved(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsInventoryUnApproved
            Return MyBase.Channel.GetAllAssetsInventoryUnApproved(empID)
        End Function
        
        Public Function GetAllAssetsInventoryUnApprovedAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsInventoryUnApprovedAsync
            Return MyBase.Channel.GetAllAssetsInventoryUnApprovedAsync(empID)
        End Function
        
        Public Function GetAllAssetsUnAssigned(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsUnAssigned
            Return MyBase.Channel.GetAllAssetsUnAssigned(empID)
        End Function
        
        Public Function GetAllAssetsUnAssignedAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsUnAssignedAsync
            Return MyBase.Channel.GetAllAssetsUnAssignedAsync(empID)
        End Function
        
        Public Function GetAllManagers(ByVal empID As Integer) As ServiceReference1.Nickname() Implements ServiceReference1.IAideService.GetAllManagers
            Return MyBase.Channel.GetAllManagers(empID)
        End Function
        
        Public Function GetAllManagersAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Nickname()) Implements ServiceReference1.IAideService.GetAllManagersAsync
            Return MyBase.Channel.GetAllManagersAsync(empID)
        End Function
        
        Public Sub UpdateAssetsInventory(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.UpdateAssetsInventory
            MyBase.Channel.UpdateAssetsInventory(assets)
        End Sub
        
        Public Function UpdateAssetsInventoryAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAssetsInventoryAsync
            Return MyBase.Channel.UpdateAssetsInventoryAsync(assets)
        End Function
        
        Public Sub UpdateAssetsInventoryApproval(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.UpdateAssetsInventoryApproval
            MyBase.Channel.UpdateAssetsInventoryApproval(assets)
        End Sub
        
        Public Function UpdateAssetsInventoryApprovalAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAssetsInventoryApprovalAsync
            Return MyBase.Channel.UpdateAssetsInventoryApprovalAsync(assets)
        End Function
        
        Public Sub UpdateAssetsInventoryCancel(ByVal assets As ServiceReference1.Assets) Implements ServiceReference1.IAideService.UpdateAssetsInventoryCancel
            MyBase.Channel.UpdateAssetsInventoryCancel(assets)
        End Sub
        
        Public Function UpdateAssetsInventoryCancelAsync(ByVal assets As ServiceReference1.Assets) As System.Threading.Tasks.Task Implements ServiceReference1.IAideService.UpdateAssetsInventoryCancelAsync
            Return MyBase.Channel.UpdateAssetsInventoryCancelAsync(assets)
        End Function
        
        Public Function GetAllAssetsHistory(ByVal empID As Integer) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsHistory
            Return MyBase.Channel.GetAllAssetsHistory(empID)
        End Function
        
        Public Function GetAllAssetsHistoryAsync(ByVal empID As Integer) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsHistoryAsync
            Return MyBase.Channel.GetAllAssetsHistoryAsync(empID)
        End Function
        
        Public Function GetAllAssetsHistoryBySearch(ByVal empID As Integer, ByVal input As String) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsHistoryBySearch
            Return MyBase.Channel.GetAllAssetsHistoryBySearch(empID, input)
        End Function
        
        Public Function GetAllAssetsHistoryBySearchAsync(ByVal empID As Integer, ByVal input As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsHistoryBySearchAsync
            Return MyBase.Channel.GetAllAssetsHistoryBySearchAsync(empID, input)
        End Function
        
        Public Function GetAllAssetsInventoryBySearch(ByVal empID As Integer, ByVal input As String, ByVal page As String) As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAllAssetsInventoryBySearch
            Return MyBase.Channel.GetAllAssetsInventoryBySearch(empID, input, page)
        End Function
        
        Public Function GetAllAssetsInventoryBySearchAsync(ByVal empID As Integer, ByVal input As String, ByVal page As String) As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAllAssetsInventoryBySearchAsync
            Return MyBase.Channel.GetAllAssetsInventoryBySearchAsync(empID, input, page)
        End Function
        
        Public Function GetAssetDescription() As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAssetDescription
            Return MyBase.Channel.GetAssetDescription
        End Function
        
        Public Function GetAssetDescriptionAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAssetDescriptionAsync
            Return MyBase.Channel.GetAssetDescriptionAsync
        End Function
        
        Public Function GetAssetManufacturer() As ServiceReference1.Assets() Implements ServiceReference1.IAideService.GetAssetManufacturer
            Return MyBase.Channel.GetAssetManufacturer
        End Function
        
        Public Function GetAssetManufacturerAsync() As System.Threading.Tasks.Task(Of ServiceReference1.Assets()) Implements ServiceReference1.IAideService.GetAssetManufacturerAsync
            Return MyBase.Channel.GetAssetManufacturerAsync
        End Function
    End Class
End Namespace
